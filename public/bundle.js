!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=20)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){e.exports=n(15)()},,function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(18);e.exports=m,e.exports.parse=i,e.exports.compile=function(e,t){return u(i(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=p;var l=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],o=0,i=0,a="",u=t&&t.delimiter||"/";null!=(n=l.exec(e));){var f=n[0],d=n[1],p=n.index;if(a+=e.slice(i,p),i=p+f.length,d)a+=d[1];else{var m=e[i],h=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];a&&(r.push(a),a="");var k=null!=h&&null!=m&&m!==h,E="+"===b||"*"===b,x="?"===b||"*"===b,S=n[2]||u,T=v||g;r.push({name:y||o++,prefix:h||"",delimiter:S,optional:x,repeat:E,partial:k,asterisk:!!w,pattern:T?s(T):w?".*":"[^"+c(S)+"]+?"})}}return i<e.length&&(a+=e.substr(i)),a&&r.push(a),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"===r(e[n])&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,r){for(var l="",i=n||{},u=(r||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(l+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(o(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");l+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');l+=s.prefix+f}}else l+=s}return l}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function d(e){return e.sensitive?"":"i"}function p(e,t,n){o(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,l=!1!==n.end,i="",a=0;a<e.length;a++){var u=e[a];if("string"==typeof u)i+=c(u);else{var s=c(u.prefix),p="(?:"+u.pattern+")";t.push(u),u.repeat&&(p+="(?:"+s+p+")*"),i+=p=u.optional?u.partial?s+"("+p+")?":"(?:"+s+"("+p+"))?":s+"("+p+")"}}var m=c(n.delimiter||"/"),h=i.slice(-m.length)===m;return r||(i=(h?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=l?"$":r&&h?"":"(?="+m+"|$)",f(new RegExp("^"+i,d(n)),t)}function m(e,t,n){return o(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):o(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(m(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return p(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=i(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){a=r(n);for(var f=0;f<a.length;f++)l.call(n,a[f])&&(u[a[f]]=n[a[f]])}}return u}},function(e,t,n){"use strict";e.exports=n(19)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(11)},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(17))},function(e,t,n){"use strict";var r=n(6),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?i:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var i=s(n);f&&(i=i.concat(f(n)));for(var a=u(t),h=u(n),y=0;y<i.length;++y){var v=i[y];if(!(l[v]||r&&r[v]||h&&h[v]||a&&a[v])){var g=d(n,v);try{c(t,v,g)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(5),l="function"==typeof Symbol&&Symbol.for,i=l?Symbol.for("react.element"):60103,a=l?Symbol.for("react.portal"):60106,u=l?Symbol.for("react.fragment"):60107,c=l?Symbol.for("react.strict_mode"):60108,s=l?Symbol.for("react.profiler"):60114,f=l?Symbol.for("react.provider"):60109,d=l?Symbol.for("react.context"):60110,p=l?Symbol.for("react.forward_ref"):60112,m=l?Symbol.for("react.suspense"):60113;l&&Symbol.for("react.suspense_list");var h=l?Symbol.for("react.memo"):60115,y=l?Symbol.for("react.lazy"):60116;l&&Symbol.for("react.fundamental"),l&&Symbol.for("react.responder"),l&&Symbol.for("react.scope");var v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function k(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){if("object"!==r(e)&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=k.prototype;var S=x.prototype=new E;S.constructor=x,o(S,k.prototype),S.isPureReactComponent=!0;var T={current:null},C={current:null},P=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)P.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:C.current}}function N(e){return"object"===r(e)&&null!==e&&e.$$typeof===i}var M=/\/+/g,R=[];function z(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function I(e,t,n){return null==e?0:function e(t,n,o,l){var u=r(t);"undefined"!==u&&"boolean"!==u||(t=null);var c=!1;if(null===t)c=!0;else switch(u){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case i:case a:c=!0}}if(c)return o(l,t,""===n?"."+F(t,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var f=n+F(u=t[s],s);c+=e(u,f,o,l)}else if(null===t||"object"!==r(t)?f=null:f="function"==typeof(f=v&&t[v]||t["@@iterator"])?f:null,"function"==typeof f)for(t=f.call(t),s=0;!(u=t.next()).done;)c+=e(u=u.value,f=n+F(u,s++),o,l);else if("object"===u)throw o=""+t,Error(g(31,"[object Object]"===o?"object with keys {"+Object.keys(t).join(", ")+"}":o,""));return c}(e,"",t,n)}function F(e,t){return"object"===r(e)&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var l="";null!=n&&(l=(""+n).replace(M,"$&/")+"/"),I(e,A,t=z(t,l,r,o)),U(t)}function j(){var e=T.current;if(null===e)throw Error(g(321));return e}var $={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,L,t=z(null,null,t,n)),U(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(g(143));return e}},createRef:function(){return{current:null}},Component:k,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return j().useCallback(e,t)},useContext:function(e,t){return j().useContext(e,t)},useEffect:function(e,t){return j().useEffect(e,t)},useImperativeHandle:function(e,t,n){return j().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return j().useLayoutEffect(e,t)},useMemo:function(e,t){return j().useMemo(e,t)},useReducer:function(e,t,n){return j().useReducer(e,t,n)},useRef:function(e){return j().useRef(e)},useState:function(e){return j().useState(e)},Fragment:u,Profiler:s,StrictMode:c,Suspense:m,createElement:O,cloneElement:function(e,t,n){if(null==e)throw Error(g(267,e));var r=o({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=C.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)P.call(t,s)&&!_.hasOwnProperty(s)&&(r[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];r.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:r,_owner:u}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.11.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:C,IsSomeRendererActing:{current:!1},assign:o}},W={default:$},V=W&&$||W;e.exports=V.default||V},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(0),l=n(5),i=n(12);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!o)throw Error(a(227));var u=null,c={};function s(){if(u)for(var e in c){var t=c[e],n=u.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!d[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in d[n]=t,n=t.eventTypes){var o=void 0,l=n[r],i=t,s=r;if(p.hasOwnProperty(s))throw Error(a(99,s));p[s]=l;var m=l.phasedRegistrationNames;if(m){for(o in m)m.hasOwnProperty(o)&&f(m[o],i,s);o=!0}else l.registrationName?(f(l.registrationName,i,s),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function f(e,t,n){if(m[e])throw Error(a(100,e));m[e]=t,h[e]=t.eventTypes[n].dependencies}var d=[],p={},m={},h={};function y(e,t,n,r,o,l,i,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var v=!1,g=null,b=!1,w=null,k={onError:function(e){v=!0,g=e}};function E(e,t,n,r,o,l,i,a,u){v=!1,g=null,y.apply(k,arguments)}var x=null,S=null,T=null;function C(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,l,i,u,c){if(E.apply(this,arguments),v){if(!v)throw Error(a(198));var s=g;v=!1,g=null,b||(b=!0,w=s)}}(r,t,void 0,e),e.currentTarget=null}function P(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function _(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function N(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)C(e,t[r],n[r]);else t&&C(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function M(e){if(null!==e&&(O=P(O,e)),e=O,O=null,e){if(_(e,N),O)throw Error(a(95));if(b)throw e=w,b=!1,w=null,e}}var R={injectEventPluginOrder:function(e){if(u)throw Error(a(101));u=Array.prototype.slice.call(e),s()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!c.hasOwnProperty(t)||c[t]!==r){if(c[t])throw Error(a(102,t));c[t]=r,n=!0}}n&&s()}};function z(e,t){var n=e.stateNode;if(!n)return null;var o=x(n);if(!o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(o=!o.disabled)||(o=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,r(n)));return n}var U=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;U.hasOwnProperty("ReactCurrentDispatcher")||(U.ReactCurrentDispatcher={current:null}),U.hasOwnProperty("ReactCurrentBatchConfig")||(U.ReactCurrentBatchConfig={suspense:null});var I=/^(.*)[\\\/]/,F="function"==typeof Symbol&&Symbol.for,L=F?Symbol.for("react.element"):60103,A=F?Symbol.for("react.portal"):60106,D=F?Symbol.for("react.fragment"):60107,j=F?Symbol.for("react.strict_mode"):60108,$=F?Symbol.for("react.profiler"):60114,W=F?Symbol.for("react.provider"):60109,V=F?Symbol.for("react.context"):60110,B=F?Symbol.for("react.concurrent_mode"):60111,H=F?Symbol.for("react.forward_ref"):60112,Q=F?Symbol.for("react.suspense"):60113,K=F?Symbol.for("react.suspense_list"):60120,q=F?Symbol.for("react.memo"):60115,Y=F?Symbol.for("react.lazy"):60116;F&&Symbol.for("react.fundamental"),F&&Symbol.for("react.responder"),F&&Symbol.for("react.scope");var X="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!==r(e)?null:"function"==typeof(e=X&&e[X]||e["@@iterator"])?e:null}function J(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case D:return"Fragment";case A:return"Portal";case $:return"Profiler";case j:return"StrictMode";case Q:return"Suspense";case K:return"SuspenseList"}if("object"===r(e))switch(e.$$typeof){case V:return"Context.Consumer";case W:return"Context.Provider";case H:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case q:return J(e.type);case Y:if(e=1===e._status?e._result:null)return J(e)}return null}function Z(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,l=J(e.type);n=null,r&&(n=J(r.type)),r=l,l="",o?l=" (at "+o.fileName.replace(I,"")+":"+o.lineNumber+")":n&&(l=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+l}t+=n,e=e.return}while(e);return t}var ee=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),te=null,ne=null,re=null;function oe(e){if(e=S(e)){if("function"!=typeof te)throw Error(a(280));var t=x(e.stateNode);te(e.stateNode,e.type,t)}}function le(e){ne?re?re.push(e):re=[e]:ne=e}function ie(){if(ne){var e=ne,t=re;if(re=ne=null,oe(e),t)for(e=0;e<t.length;e++)oe(t[e])}}function ae(e,t){return e(t)}function ue(e,t,n,r){return e(t,n,r)}function ce(){}var se=ae,fe=!1,de=!1;function pe(){null===ne&&null===re||(ce(),ie())}new Map;var me=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,he=Object.prototype.hasOwnProperty,ye={},ve={};function ge(e,t,n,o){if(null==t||function(e,t,n,o){if(null!==n&&0===n.type)return!1;switch(r(t)){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function be(e,t,n,r,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l}var we={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){we[e]=new be(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];we[t]=new be(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){we[e]=new be(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){we[e]=new be(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){we[e]=new be(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){we[e]=new be(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){we[e]=new be(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){we[e]=new be(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){we[e]=new be(e,5,!1,e.toLowerCase(),null,!1)}));var ke=/[\-:]([a-z])/g;function Ee(e){return e[1].toUpperCase()}function xe(e){switch(r(e)){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Se(e,t,n,r){var o=we.hasOwnProperty(t)?we[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(ge(t,n,o,r)&&(n=null),r||null===o?function(e){return!!he.call(ve,e)||!he.call(ye,e)&&(me.test(e)?ve[e]=!0:(ye[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Te(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ce(e){e._valueTracker||(e._valueTracker=function(e){var t=Te(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Pe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Te(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function _e(e,t){var n=t.checked;return l({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Oe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=xe(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ne(e,t){null!=(t=t.checked)&&Se(e,"checked",t,!1)}function Me(e,t){Ne(e,t);var n=xe(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ze(e,t.type,n):t.hasOwnProperty("defaultValue")&&ze(e,t.type,xe(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ze(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ue(e,t){return e=l({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ie(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+xe(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Fe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return l({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Le(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw Error(a(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(a(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:xe(n)}}function Ae(e,t){var n=xe(t.value),r=xe(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(ke,Ee);we[t]=new be(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(ke,Ee);we[t]=new be(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(ke,Ee);we[t]=new be(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){we[e]=new be(e,1,!1,e.toLowerCase(),null,!1)})),we.xlinkHref=new be("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){we[e]=new be(e,1,!1,e.toLowerCase(),null,!0)}));var je={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function $e(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function We(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?$e(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ve,Be=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==je.svg||"innerHTML"in e)e.innerHTML=t;else{for((Ve=Ve||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ve.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function He(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Qe(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ke={animationend:Qe("Animation","AnimationEnd"),animationiteration:Qe("Animation","AnimationIteration"),animationstart:Qe("Animation","AnimationStart"),transitionend:Qe("Transition","TransitionEnd")},qe={},Ye={};function Xe(e){if(qe[e])return qe[e];if(!Ke[e])return e;var t,n=Ke[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ye)return qe[e]=n[t];return e}ee&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete Ke.animationend.animation,delete Ke.animationiteration.animation,delete Ke.animationstart.animation),"TransitionEvent"in window||delete Ke.transitionend.transition);var Ge=Xe("animationend"),Je=Xe("animationiteration"),Ze=Xe("animationstart"),et=Xe("transitionend"),tt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function nt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function rt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function ot(e){if(nt(e)!==e)throw Error(a(188))}function lt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=nt(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var l=o.alternate;if(null===l){if(null!==(r=o.return)){n=r;continue}break}if(o.child===l.child){for(l=o.child;l;){if(l===n)return ot(o),e;if(l===r)return ot(o),t;l=l.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=l;else{for(var i=!1,u=o.child;u;){if(u===n){i=!0,n=o,r=l;break}if(u===r){i=!0,r=o,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=o;break}if(u===r){i=!0,r=l,n=o;break}u=u.sibling}if(!i)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var it,at,ut,ct=!1,st=[],ft=null,dt=null,pt=null,mt=new Map,ht=new Map,yt=[],vt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),gt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function bt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function wt(e,t){switch(e){case"focus":case"blur":ft=null;break;case"dragenter":case"dragleave":dt=null;break;case"mouseover":case"mouseout":pt=null;break;case"pointerover":case"pointerout":mt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ht.delete(t.pointerId)}}function kt(e,t,n,r,o){return null===e||e.nativeEvent!==o?(e=bt(t,n,r,o),null!==t&&(null!==(t=hr(t))&&at(t)),e):(e.eventSystemFlags|=r,e)}function Et(e){var t=mr(e.target);if(null!==t){var n=nt(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=rt(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){ut(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function xt(e){if(null!==e.blockedOn)return!1;var t=zn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);if(null!==t){var n=hr(t);return null!==n&&at(n),e.blockedOn=t,!1}return!0}function St(e,t,n){xt(e)&&n.delete(t)}function Tt(){for(ct=!1;0<st.length;){var e=st[0];if(null!==e.blockedOn){null!==(e=hr(e.blockedOn))&&it(e);break}var t=zn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:st.shift()}null!==ft&&xt(ft)&&(ft=null),null!==dt&&xt(dt)&&(dt=null),null!==pt&&xt(pt)&&(pt=null),mt.forEach(St),ht.forEach(St)}function Ct(e,t){e.blockedOn===t&&(e.blockedOn=null,ct||(ct=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Tt)))}function Pt(e){function t(t){return Ct(t,e)}if(0<st.length){Ct(st[0],e);for(var n=1;n<st.length;n++){var r=st[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ft&&Ct(ft,e),null!==dt&&Ct(dt,e),null!==pt&&Ct(pt,e),mt.forEach(t),ht.forEach(t),n=0;n<yt.length;n++)(r=yt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<yt.length&&null===(n=yt[0]).blockedOn;)Et(n),null===n.blockedOn&&yt.shift()}function _t(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ot(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nt(e,t,n){(t=z(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=P(n._dispatchListeners,t),n._dispatchInstances=P(n._dispatchInstances,e))}function Mt(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Ot(t);for(t=n.length;0<t--;)Nt(n[t],"captured",e);for(t=0;t<n.length;t++)Nt(n[t],"bubbled",e)}}function Rt(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=z(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=P(n._dispatchListeners,t),n._dispatchInstances=P(n._dispatchInstances,e))}function zt(e){e&&e.dispatchConfig.registrationName&&Rt(e._targetInst,null,e)}function Ut(e){_(e,Mt)}function It(){return!0}function Ft(){return!1}function Lt(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?It:Ft,this.isPropagationStopped=Ft,this}function At(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Dt(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function jt(e){e.eventPool=[],e.getPooled=At,e.release=Dt}l(Lt.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=It)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=It)},persist:function(){this.isPersistent=It},isPersistent:Ft,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Ft,this._dispatchInstances=this._dispatchListeners=null}}),Lt.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Lt.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return l(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=l({},r.Interface,e),n.extend=r.extend,jt(n),n},jt(Lt);var $t=Lt.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Wt=Lt.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Vt=Lt.extend({view:null,detail:null}),Bt=Vt.extend({relatedTarget:null});function Ht(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Qt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Kt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},qt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Yt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=qt[e])&&!!t[e]}function Xt(){return Yt}for(var Gt=Vt.extend({key:function(e){if(e.key){var t=Qt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Ht(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Kt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Xt,charCode:function(e){return"keypress"===e.type?Ht(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Ht(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Jt=0,Zt=0,en=!1,tn=!1,nn=Vt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Xt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Jt;return Jt=e.screenX,en?"mousemove"===e.type?e.screenX-t:0:(en=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Zt;return Zt=e.screenY,tn?"mousemove"===e.type?e.screenY-t:0:(tn=!0,0)}}),rn=nn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),on=nn.extend({dataTransfer:null}),ln=Vt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Xt}),an=Lt.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),un=nn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),cn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Ge,"animationEnd",2],[Je,"animationIteration",2],[Ze,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[et,"transitionEnd",2],["waiting","waiting",2]],sn={},fn={},dn=0;dn<cn.length;dn++){var pn=cn[dn],mn=pn[0],hn=pn[1],yn=pn[2],vn="on"+(hn[0].toUpperCase()+hn.slice(1)),gn={phasedRegistrationNames:{bubbled:vn,captured:vn+"Capture"},dependencies:[mn],eventPriority:yn};sn[hn]=gn,fn[mn]=gn}var bn={eventTypes:sn,getEventPriority:function(e){return void 0!==(e=fn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=fn[e];if(!o)return null;switch(e){case"keypress":if(0===Ht(n))return null;case"keydown":case"keyup":e=Gt;break;case"blur":case"focus":e=Bt;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=nn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=on;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ln;break;case Ge:case Je:case Ze:e=$t;break;case et:e=an;break;case"scroll":e=Vt;break;case"wheel":e=un;break;case"copy":case"cut":case"paste":e=Wt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=rn;break;default:e=Lt}return Ut(t=e.getPooled(o,t,n,r)),t}},wn=i.unstable_UserBlockingPriority,kn=i.unstable_runWithPriority,En=bn.getEventPriority,xn=10,Sn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=mr(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=_t(e.nativeEvent);r=e.topLevelType;for(var l=e.nativeEvent,i=e.eventSystemFlags,a=null,u=0;u<d.length;u++){var c=d[u];c&&(c=c.extractEvents(r,t,l,o,i))&&(a=P(a,c))}M(a)}}var Cn=!0;function Pn(e,t){_n(t,e,!1)}function _n(e,t,n){switch(En(t)){case 0:var r=On.bind(null,t,1);break;case 1:r=Nn.bind(null,t,1);break;default:r=Rn.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function On(e,t,n){fe||ce();var r=Rn,o=fe;fe=!0;try{ue(r,e,t,n)}finally{(fe=o)||pe()}}function Nn(e,t,n){kn(wn,Rn.bind(null,e,t,n))}function Mn(e,t,n,r){if(Sn.length){var o=Sn.pop();o.topLevelType=e,o.eventSystemFlags=t,o.nativeEvent=n,o.targetInst=r,e=o}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=Tn,n=e,de)t(n,void 0);else{de=!0;try{se(t,n,void 0)}finally{de=!1,pe()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,Sn.length<xn&&Sn.push(e)}}function Rn(e,t,n){if(Cn)if(0<st.length&&-1<vt.indexOf(e))e=bt(null,e,t,n),st.push(e);else{var r=zn(e,t,n);null===r?wt(e,n):-1<vt.indexOf(e)?(e=bt(r,e,t,n),st.push(e)):function(e,t,n,r){switch(t){case"focus":return ft=kt(ft,e,t,n,r),!0;case"dragenter":return dt=kt(dt,e,t,n,r),!0;case"mouseover":return pt=kt(pt,e,t,n,r),!0;case"pointerover":var o=r.pointerId;return mt.set(o,kt(mt.get(o)||null,e,t,n,r)),!0;case"gotpointercapture":return o=r.pointerId,ht.set(o,kt(ht.get(o)||null,e,t,n,r)),!0}return!1}(r,e,t,n)||(wt(e,n),Mn(e,t,n,null))}}function zn(e,t,n){var r=_t(n);if(null!==(r=mr(r))){var o=nt(r);if(null===o)r=null;else{var l=o.tag;if(13===l){if(null!==(r=rt(o)))return r;r=null}else if(3===l){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return Mn(e,t,n,r),null}function Un(e){if(!ee)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var In=new("function"==typeof WeakMap?WeakMap:Map);function Fn(e){var t=In.get(e);return void 0===t&&(t=new Set,In.set(e,t)),t}function Ln(e,t,n){if(!n.has(e)){switch(e){case"scroll":_n(t,"scroll",!0);break;case"focus":case"blur":_n(t,"focus",!0),_n(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":Un(e)&&_n(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===tt.indexOf(e)&&Pn(e,t)}n.add(e)}}var An={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Dn=["Webkit","ms","Moz","O"];function jn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||An.hasOwnProperty(e)&&An[e]?(""+t).trim():t+"px"}function $n(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=jn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(An).forEach((function(e){Dn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),An[t]=An[e]}))}));var Wn=l({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Vn(e,t){if(t){if(Wn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if(!("object"===r(t.dangerouslySetInnerHTML)&&"__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==r(t.style))throw Error(a(62,""))}}function Bn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Hn(e,t){var n=Fn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=h[t];for(var r=0;r<t.length;r++)Ln(t[r],e,n)}function Qn(){}function Kn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function qn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Yn(e,t){var n,r=qn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=qn(r)}}function Xn(){for(var e=window,t=Kn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Kn((e=t.contentWindow).document)}return t}function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Jn="$",Zn="/$",er="$?",tr="$!",nr=null,rr=null;function or(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function lr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"===r(t.dangerouslySetInnerHTML)&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ir="function"==typeof setTimeout?setTimeout:void 0,ar="function"==typeof clearTimeout?clearTimeout:void 0;function ur(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function cr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===Jn||n===tr||n===er){if(0===t)return e;t--}else n===Zn&&t++}e=e.previousSibling}return null}var sr=Math.random().toString(36).slice(2),fr="__reactInternalInstance$"+sr,dr="__reactEventHandlers$"+sr,pr="__reactContainere$"+sr;function mr(e){var t=e[fr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[pr]||n[fr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cr(e);null!==e;){if(n=e[fr])return n;e=cr(e)}return t}n=(e=n).parentNode}return null}function hr(e){return!(e=e[fr]||e[pr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function vr(e){return e[dr]||null}var gr=null,br=null,wr=null;function kr(){if(wr)return wr;var e,t,n=br,r=n.length,o="value"in gr?gr.value:gr.textContent,l=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[l-t];t++);return wr=o.slice(e,1<t?1-t:void 0)}var Er=Lt.extend({data:null}),xr=Lt.extend({data:null}),Sr=[9,13,27,32],Tr=ee&&"CompositionEvent"in window,Cr=null;ee&&"documentMode"in document&&(Cr=document.documentMode);var Pr=ee&&"TextEvent"in window&&!Cr,_r=ee&&(!Tr||Cr&&8<Cr&&11>=Cr),Or=String.fromCharCode(32),Nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Mr=!1;function Rr(e,t){switch(e){case"keyup":return-1!==Sr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function zr(e){return"object"===r(e=e.detail)&&"data"in e?e.data:null}var Ur=!1;var Ir={eventTypes:Nr,extractEvents:function(e,t,n,r){var o;if(Tr)e:{switch(e){case"compositionstart":var l=Nr.compositionStart;break e;case"compositionend":l=Nr.compositionEnd;break e;case"compositionupdate":l=Nr.compositionUpdate;break e}l=void 0}else Ur?Rr(e,n)&&(l=Nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(l=Nr.compositionStart);return l?(_r&&"ko"!==n.locale&&(Ur||l!==Nr.compositionStart?l===Nr.compositionEnd&&Ur&&(o=kr()):(br="value"in(gr=r)?gr.value:gr.textContent,Ur=!0)),l=Er.getPooled(l,t,n,r),o?l.data=o:null!==(o=zr(n))&&(l.data=o),Ut(l),o=l):o=null,(e=Pr?function(e,t){switch(e){case"compositionend":return zr(t);case"keypress":return 32!==t.which?null:(Mr=!0,Or);case"textInput":return(e=t.data)===Or&&Mr?null:e;default:return null}}(e,n):function(e,t){if(Ur)return"compositionend"===e||!Tr&&Rr(e,t)?(e=kr(),wr=br=gr=null,Ur=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return _r&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=xr.getPooled(Nr.beforeInput,t,n,r)).data=e,Ut(t)):t=null,null===o?t:null===t?o:[o,t]}},Fr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Lr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Fr[e.type]:"textarea"===t}var Ar={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Dr(e,t,n){return(e=Lt.getPooled(Ar.change,e,t,n)).type="change",le(n),Ut(e),e}var jr=null,$r=null;function Wr(e){M(e)}function Vr(e){if(Pe(yr(e)))return e}function Br(e,t){if("change"===e)return t}var Hr=!1;function Qr(){jr&&(jr.detachEvent("onpropertychange",Kr),$r=jr=null)}function Kr(e){if("value"===e.propertyName&&Vr($r))if(e=Dr($r,e,_t(e)),fe)M(e);else{fe=!0;try{ae(Wr,e)}finally{fe=!1,pe()}}}function qr(e,t,n){"focus"===e?(Qr(),$r=n,(jr=t).attachEvent("onpropertychange",Kr)):"blur"===e&&Qr()}function Yr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Vr($r)}function Xr(e,t){if("click"===e)return Vr(t)}function Gr(e,t){if("input"===e||"change"===e)return Vr(t)}ee&&(Hr=Un("input")&&(!document.documentMode||9<document.documentMode));var Jr,Zr={eventTypes:Ar,_isInputEventSupported:Hr,extractEvents:function(e,t,n,r){var o=t?yr(t):window,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type)var i=Br;else if(Lr(o))if(Hr)i=Gr;else{i=Yr;var a=qr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Xr);if(i&&(i=i(e,t)))return Dr(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&ze(o,"number",o.value)}},eo={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},to={eventTypes:eo,extractEvents:function(e,t,n,r,o){var l="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(l&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!i&&!l)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?mr(t):null)&&(t!==(l=nt(t))||5!==t.tag&&6!==t.tag)&&(t=null)):i=null,i===t)return null;if("mouseout"===e||"mouseover"===e)var a=nn,u=eo.mouseLeave,c=eo.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=rn,u=eo.pointerLeave,c=eo.pointerEnter,s="pointer");if(e=null==i?o:yr(i),o=null==t?o:yr(t),(u=a.getPooled(u,i,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(r=a.getPooled(c,t,n,r)).type=s+"enter",r.target=o,r.relatedTarget=e,s=t,(a=i)&&s)e:{for(e=s,i=0,t=c=a;t;t=Ot(t))i++;for(t=0,o=e;o;o=Ot(o))t++;for(;0<i-t;)c=Ot(c),i--;for(;0<t-i;)e=Ot(e),t--;for(;i--;){if(c===e||c===e.alternate)break e;c=Ot(c),e=Ot(e)}c=null}else c=null;for(e=c,c=[];a&&a!==e&&(null===(i=a.alternate)||i!==e);)c.push(a),a=Ot(a);for(a=[];s&&s!==e&&(null===(i=s.alternate)||i!==e);)a.push(s),s=Ot(s);for(s=0;s<c.length;s++)Rt(c[s],"bubbled",u);for(s=a.length;0<s--;)Rt(a[s],"captured",r);return n===Jr?(Jr=null,[u]):(Jr=n,[u,r])}};var no="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ro=Object.prototype.hasOwnProperty;function oo(e,t){if(no(e,t))return!0;if("object"!==r(e)||null===e||"object"!==r(t)||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++)if(!ro.call(t,n[o])||!no(e[n[o]],t[n[o]]))return!1;return!0}var lo=ee&&"documentMode"in document&&11>=document.documentMode,io={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ao=null,uo=null,co=null,so=!1;function fo(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return so||null==ao||ao!==Kn(n)?null:("selectionStart"in(n=ao)&&Gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},co&&oo(co,n)?null:(co=n,(e=Lt.getPooled(io.select,uo,e,t)).type="select",e.target=ao,Ut(e),e))}var po={eventTypes:io,extractEvents:function(e,t,n,r){var o,l=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!l)){e:{l=Fn(l),o=h.onSelect;for(var i=0;i<o.length;i++)if(!l.has(o[i])){l=!1;break e}l=!0}o=!l}if(o)return null;switch(l=t?yr(t):window,e){case"focus":(Lr(l)||"true"===l.contentEditable)&&(ao=l,uo=t,co=null);break;case"blur":co=uo=ao=null;break;case"mousedown":so=!0;break;case"contextmenu":case"mouseup":case"dragend":return so=!1,fo(n,r);case"selectionchange":if(lo)break;case"keydown":case"keyup":return fo(n,r)}return null}};R.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=vr,S=hr,T=yr,R.injectEventPluginsByName({SimpleEventPlugin:bn,EnterLeaveEventPlugin:to,ChangeEventPlugin:Zr,SelectEventPlugin:po,BeforeInputEventPlugin:Ir}),new Set;var mo=[],ho=-1;function yo(e){0>ho||(e.current=mo[ho],mo[ho]=null,ho--)}function vo(e,t){mo[++ho]=e.current,e.current=t}var go={},bo={current:go},wo={current:!1},ko=go;function Eo(e,t){var n=e.type.contextTypes;if(!n)return go;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,l={};for(o in n)l[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function xo(e){return null!=(e=e.childContextTypes)}function So(e){yo(wo),yo(bo)}function To(e){yo(wo),yo(bo)}function Co(e,t,n){if(bo.current!==go)throw Error(a(168));vo(bo,t),vo(wo,n)}function Po(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(a(108,J(t)||"Unknown",o));return l({},n,{},r)}function _o(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||go,ko=bo.current,vo(bo,t),vo(wo,wo.current),!0}function Oo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(t=Po(e,t,ko),r.__reactInternalMemoizedMergedChildContext=t,yo(wo),yo(bo),vo(bo,t)):yo(wo),vo(wo,n)}var No=i.unstable_runWithPriority,Mo=i.unstable_scheduleCallback,Ro=i.unstable_cancelCallback,zo=i.unstable_shouldYield,Uo=i.unstable_requestPaint,Io=i.unstable_now,Fo=i.unstable_getCurrentPriorityLevel,Lo=i.unstable_ImmediatePriority,Ao=i.unstable_UserBlockingPriority,Do=i.unstable_NormalPriority,jo=i.unstable_LowPriority,$o=i.unstable_IdlePriority,Wo={},Vo=void 0!==Uo?Uo:function(){},Bo=null,Ho=null,Qo=!1,Ko=Io(),qo=1e4>Ko?Io:function(){return Io()-Ko};function Yo(){switch(Fo()){case Lo:return 99;case Ao:return 98;case Do:return 97;case jo:return 96;case $o:return 95;default:throw Error(a(332))}}function Xo(e){switch(e){case 99:return Lo;case 98:return Ao;case 97:return Do;case 96:return jo;case 95:return $o;default:throw Error(a(332))}}function Go(e,t){return e=Xo(e),No(e,t)}function Jo(e,t,n){return e=Xo(e),Mo(e,t,n)}function Zo(e){return null===Bo?(Bo=[e],Ho=Mo(Lo,tl)):Bo.push(e),Wo}function el(){if(null!==Ho){var e=Ho;Ho=null,Ro(e)}tl()}function tl(){if(!Qo&&null!==Bo){Qo=!0;var e=0;try{var t=Bo;Go(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Bo=null}catch(t){throw null!==Bo&&(Bo=Bo.slice(e+1)),Mo(Lo,el),t}finally{Qo=!1}}}var nl=3;function rl(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function ol(e,t){if(e&&e.defaultProps)for(var n in t=l({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ll={current:null},il=null,al=null,ul=null;function cl(){ul=al=il=null}function sl(e,t){var n=e.type._context;vo(ll,n._currentValue),n._currentValue=t}function fl(e){var t=ll.current;yo(ll),e.type._context._currentValue=t}function dl(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function pl(e,t){il=e,ul=al=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ki=!0),e.firstContext=null)}function ml(e,t){if(ul!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ul=e,t=1073741823),t={context:e,observedBits:t,next:null},null===al){if(null===il)throw Error(a(308));al=t,il.dependencies={expirationTime:0,firstContext:t,responders:null}}else al=al.next=t;return e._currentValue}var hl=!1;function yl(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function vl(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function gl(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function bl(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function wl(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=yl(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=yl(e.memoizedState),o=n.updateQueue=yl(n.memoizedState)):r=e.updateQueue=vl(o):null===o&&(o=n.updateQueue=vl(r));null===o||r===o?bl(r,t):null===r.lastUpdate||null===o.lastUpdate?(bl(r,t),bl(o,t)):(bl(r,t),o.lastUpdate=t)}function kl(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=yl(e.memoizedState):El(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function El(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=vl(t)),t}function xl(e,t,n,r,o,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,o):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(o="function"==typeof(e=n.payload)?e.call(i,r,o):e))break;return l({},r,o);case 2:hl=!0}return r}function Sl(e,t,n,r,o){hl=!1;for(var l=(t=El(e,t)).baseState,i=null,a=0,u=t.firstUpdate,c=l;null!==u;){var s=u.expirationTime;s<o?(null===i&&(i=u,l=c),a<s&&(a=s)):(Ou(s,u.suspenseConfig),c=xl(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===i&&(l=c)),a<f&&(a=f)):(c=xl(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(l=c),t.baseState=l,t.firstUpdate=i,t.firstCapturedUpdate=s,Nu(a),e.expirationTime=a,e.memoizedState=c}function Tl(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Cl(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Cl(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Cl(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw Error(a(191,n));n.call(r)}e=e.nextEffect}}var Pl=U.ReactCurrentBatchConfig,_l=(new o.Component).refs;function Ol(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:l({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Nl={isMounted:function(e){return!!(e=e._reactInternalFiber)&&nt(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=yu(),o=Pl.suspense;(o=gl(r=vu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),wl(e,o),gu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=yu(),o=Pl.suspense;(o=gl(r=vu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),wl(e,o),gu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=yu(),r=Pl.suspense;(r=gl(n=vu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),wl(e,r),gu(e,n)}};function Ml(e,t,n,r,o,l,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,i):!t.prototype||!t.prototype.isPureReactComponent||(!oo(n,r)||!oo(o,l))}function Rl(e,t,n){var o=!1,l=go,i=t.contextType;return"object"===r(i)&&null!==i?i=ml(i):(l=xo(t)?ko:bo.current,i=(o=null!=(o=t.contextTypes))?Eo(e,l):go),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Nl,e.stateNode=t,t._reactInternalFiber=e,o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=i),t}function zl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Nl.enqueueReplaceState(t,t.state,null)}function Ul(e,t,n,o){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=_l;var i=t.contextType;"object"===r(i)&&null!==i?l.context=ml(i):(i=xo(t)?ko:bo.current,l.context=Eo(e,i)),null!==(i=e.updateQueue)&&(Sl(e,i,n,l,o),l.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Ol(e,t,i,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&Nl.enqueueReplaceState(l,l.state,null),null!==(i=e.updateQueue)&&(Sl(e,i,n,l,o),l.state=e.memoizedState)),"function"==typeof l.componentDidMount&&(e.effectTag|=4)}var Il=Array.isArray;function Fl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!==r(e)){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var o=n.stateNode}if(!o)throw Error(a(147,e));var l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:((t=function(e){var t=o.refs;t===_l&&(t=o.refs={}),null===e?delete t[l]:t[l]=e})._stringRef=l,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ll(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Al(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t,n){return(e=Xu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function c(e,t,n,r){return null===t||6!==t.tag?((t=Zu(n,e.mode,r)).return=e,t):((t=l(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=l(t,n.props)).ref=Fl(e,t,n),r.return=e,r):((r=Gu(n.type,n.key,n.props,null,e.mode,r)).ref=Fl(e,t,n),r.return=e,r)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ec(n,e.mode,r)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Ju(n,e.mode,r,o)).return=e,t):((t=l(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Zu(""+t,e.mode,n)).return=e,t;if("object"===r(t)&&null!==t){switch(t.$$typeof){case L:return(n=Gu(t.type,t.key,t.props,null,e.mode,n)).ref=Fl(e,null,t),n.return=e,n;case A:return(t=ec(t,e.mode,n)).return=e,t}if(Il(t)||G(t))return(t=Ju(t,e.mode,n,null)).return=e,t;Ll(e,t)}return null}function m(e,t,n,o){var l=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==l?null:c(e,t,""+n,o);if("object"===r(n)&&null!==n){switch(n.$$typeof){case L:return n.key===l?n.type===D?d(e,t,n.props.children,o,l):s(e,t,n,o):null;case A:return n.key===l?f(e,t,n,o):null}if(Il(n)||G(n))return null!==l?null:d(e,t,n,o,null);Ll(e,n)}return null}function h(e,t,n,o,l){if("string"==typeof o||"number"==typeof o)return c(t,e=e.get(n)||null,""+o,l);if("object"===r(o)&&null!==o){switch(o.$$typeof){case L:return e=e.get(null===o.key?n:o.key)||null,o.type===D?d(t,e,o.props.children,l,o.key):s(t,e,o,l);case A:return f(t,e=e.get(null===o.key?n:o.key)||null,o,l)}if(Il(o)||G(o))return d(t,e=e.get(n)||null,o,l,null);Ll(t,o)}return null}function y(r,l,a,u){for(var c=null,s=null,f=l,d=l=0,y=null;null!==f&&d<a.length;d++){f.index>d?(y=f,f=null):y=f.sibling;var v=m(r,f,a[d],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(r,f),l=i(v,l,d),null===s?c=v:s.sibling=v,s=v,f=y}if(d===a.length)return n(r,f),c;if(null===f){for(;d<a.length;d++)null!==(f=p(r,a[d],u))&&(l=i(f,l,d),null===s?c=f:s.sibling=f,s=f);return c}for(f=o(r,f);d<a.length;d++)null!==(y=h(f,r,d,a[d],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?d:y.key),l=i(y,l,d),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(r,e)})),c}function v(r,l,u,c){var s=G(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,d=l,y=l=0,v=null,g=u.next();null!==d&&!g.done;y++,g=u.next()){d.index>y?(v=d,d=null):v=d.sibling;var b=m(r,d,g.value,c);if(null===b){null===d&&(d=v);break}e&&d&&null===b.alternate&&t(r,d),l=i(b,l,y),null===f?s=b:f.sibling=b,f=b,d=v}if(g.done)return n(r,d),s;if(null===d){for(;!g.done;y++,g=u.next())null!==(g=p(r,g.value,c))&&(l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(d=o(r,d);!g.done;y++,g=u.next())null!==(g=h(d,r,y,g.value,c))&&(e&&null!==g.alternate&&d.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&d.forEach((function(e){return t(r,e)})),s}return function(e,o,i,c){var s="object"===r(i)&&null!==i&&i.type===D&&null===i.key;s&&(i=i.props.children);var f="object"===r(i)&&null!==i;if(f)switch(i.$$typeof){case L:e:{for(f=i.key,s=o;null!==s;){if(s.key===f){if(7===s.tag?i.type===D:s.elementType===i.type){n(e,s.sibling),(o=l(s,i.type===D?i.props.children:i.props)).ref=Fl(e,s,i),o.return=e,e=o;break e}n(e,s);break}t(e,s),s=s.sibling}i.type===D?((o=Ju(i.props.children,e.mode,c,i.key)).return=e,e=o):((c=Gu(i.type,i.key,i.props,null,e.mode,c)).ref=Fl(e,o,i),c.return=e,e=c)}return u(e);case A:e:{for(s=i.key;null!==o;){if(o.key===s){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(e,o.sibling),(o=l(o,i.children||[])).return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}(o=ec(i,e.mode,c)).return=e,e=o}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==o&&6===o.tag?(n(e,o.sibling),(o=l(o,i)).return=e,e=o):(n(e,o),(o=Zu(i,e.mode,c)).return=e,e=o),u(e);if(Il(i))return y(e,o,i,c);if(G(i))return v(e,o,i,c);if(f&&Ll(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,o)}}var Dl=Al(!0),jl=Al(!1),$l={},Wl={current:$l},Vl={current:$l},Bl={current:$l};function Hl(e){if(e===$l)throw Error(a(174));return e}function Ql(e,t){vo(Bl,t),vo(Vl,e),vo(Wl,$l);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:We(null,"");break;default:t=We(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}yo(Wl),vo(Wl,t)}function Kl(e){yo(Wl),yo(Vl),yo(Bl)}function ql(e){Hl(Bl.current);var t=Hl(Wl.current),n=We(t,e.type);t!==n&&(vo(Vl,e),vo(Wl,n))}function Yl(e){Vl.current===e&&(yo(Wl),yo(Vl))}var Xl={current:0};function Gl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===er||n.data===tr))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Jl(e,t){return{responder:e,props:t}}var Zl=U.ReactCurrentDispatcher,ei=U.ReactCurrentBatchConfig,ti=0,ni=null,ri=null,oi=null,li=null,ii=null,ai=null,ui=0,ci=null,si=0,fi=!1,di=null,pi=0;function mi(){throw Error(a(321))}function hi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!no(e[n],t[n]))return!1;return!0}function yi(e,t,n,r,o,l){if(ti=l,ni=t,oi=null!==e?e.memoizedState:null,Zl.current=null===oi?Ii:Fi,t=n(r,o),fi){do{fi=!1,pi+=1,oi=null!==e?e.memoizedState:null,ai=li,ci=ii=ri=null,Zl.current=Fi,t=n(r,o)}while(fi);di=null,pi=0}if(Zl.current=Ui,(e=ni).memoizedState=li,e.expirationTime=ui,e.updateQueue=ci,e.effectTag|=si,e=null!==ri&&null!==ri.next,ti=0,ai=ii=li=oi=ri=ni=null,ui=0,ci=null,si=0,e)throw Error(a(300));return t}function vi(){Zl.current=Ui,ti=0,ai=ii=li=oi=ri=ni=null,ui=0,ci=null,si=0,fi=!1,di=null,pi=0}function gi(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ii?li=ii=e:ii=ii.next=e,ii}function bi(){if(null!==ai)ai=(ii=ai).next,oi=null!==(ri=oi)?ri.next:null;else{if(null===oi)throw Error(a(310));var e={memoizedState:(ri=oi).memoizedState,baseState:ri.baseState,queue:ri.queue,baseUpdate:ri.baseUpdate,next:null};ii=null===ii?li=e:ii.next=e,oi=ri.next}return ii}function wi(e,t){return"function"==typeof t?t(e):t}function ki(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));if(n.lastRenderedReducer=e,0<pi){var r=n.dispatch;if(null!==di){var o=di.get(n);if(void 0!==o){di.delete(n);var l=t.memoizedState;do{l=e(l,o.action),o=o.next}while(null!==o);return no(l,t.memoizedState)||(Ki=!0),t.memoizedState=l,t.baseUpdate===n.last&&(t.baseState=l),n.lastRenderedState=l,[l,r]}}return[t.memoizedState,r]}r=n.last;var i=t.baseUpdate;if(l=t.baseState,null!==i?(null!==r&&(r.next=null),r=i.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<ti?(s||(s=!0,u=i,o=l),f>ui&&Nu(ui=f)):(Ou(f,c.suspenseConfig),l=c.eagerReducer===e?c.eagerState:e(l,c.action)),i=c,c=c.next}while(null!==c&&c!==r);s||(u=i,o=l),no(l,t.memoizedState)||(Ki=!0),t.memoizedState=l,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=l}return[t.memoizedState,n.dispatch]}function Ei(e){var t=gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:wi,lastRenderedState:e}).dispatch=zi.bind(null,ni,e),[t.memoizedState,e]}function xi(e){return ki(wi)}function Si(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ci?(ci={lastEffect:null}).lastEffect=e.next=e:null===(t=ci.lastEffect)?ci.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ci.lastEffect=e),e}function Ti(e,t,n,r){var o=gi();si|=e,o.memoizedState=Si(t,n,void 0,void 0===r?null:r)}function Ci(e,t,n,r){var o=bi();r=void 0===r?null:r;var l=void 0;if(null!==ri){var i=ri.memoizedState;if(l=i.destroy,null!==r&&hi(r,i.deps))return void Si(0,n,l,r)}si|=e,o.memoizedState=Si(t,n,l,r)}function Pi(e,t){return Ti(516,192,e,t)}function _i(e,t){return Ci(516,192,e,t)}function Oi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ni(){}function Mi(e,t){return gi().memoizedState=[e,void 0===t?null:t],e}function Ri(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function zi(e,t,n){if(!(25>pi))throw Error(a(301));var r=e.alternate;if(e===ni||null!==r&&r===ni)if(fi=!0,e={expirationTime:ti,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===di&&(di=new Map),void 0===(n=di.get(t)))di.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=yu(),l=Pl.suspense;l={expirationTime:o=vu(o,e,l),suspenseConfig:l,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.last;if(null===i)l.next=l;else{var u=i.next;null!==u&&(l.next=u),i.next=l}if(t.last=l,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(l.eagerReducer=r,l.eagerState=s,no(s,c))return}catch(e){}gu(e,o)}}var Ui={readContext:ml,useCallback:mi,useContext:mi,useEffect:mi,useImperativeHandle:mi,useLayoutEffect:mi,useMemo:mi,useReducer:mi,useRef:mi,useState:mi,useDebugValue:mi,useResponder:mi,useDeferredValue:mi,useTransition:mi},Ii={readContext:ml,useCallback:Mi,useContext:ml,useEffect:Pi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ti(4,36,Oi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ti(4,36,e,t)},useMemo:function(e,t){var n=gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=zi.bind(null,ni,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},gi().memoizedState=e},useState:Ei,useDebugValue:Ni,useResponder:Jl,useDeferredValue:function(e,t){var n=Ei(e),r=n[0],o=n[1];return Pi((function(){i.unstable_next((function(){var n=ei.suspense;ei.suspense=void 0===t?null:t;try{o(e)}finally{ei.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=Ei(!1),n=t[0],r=t[1];return[Mi((function(t){r(!0),i.unstable_next((function(){var n=ei.suspense;ei.suspense=void 0===e?null:e;try{r(!1),t()}finally{ei.suspense=n}}))}),[e,n]),n]}},Fi={readContext:ml,useCallback:Ri,useContext:ml,useEffect:_i,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ci(4,36,Oi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ci(4,36,e,t)},useMemo:function(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ki,useRef:function(){return bi().memoizedState},useState:xi,useDebugValue:Ni,useResponder:Jl,useDeferredValue:function(e,t){var n=xi(),r=n[0],o=n[1];return _i((function(){i.unstable_next((function(){var n=ei.suspense;ei.suspense=void 0===t?null:t;try{o(e)}finally{ei.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=xi(),n=t[0],r=t[1];return[Ri((function(t){r(!0),i.unstable_next((function(){var n=ei.suspense;ei.suspense=void 0===e?null:e;try{r(!1),t()}finally{ei.suspense=n}}))}),[e,n]),n]}},Li=null,Ai=null,Di=!1;function ji(e,t){var n=qu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function $i(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Wi(e){if(Di){var t=Ai;if(t){var n=t;if(!$i(e,t)){if(!(t=ur(n.nextSibling))||!$i(e,t))return e.effectTag=-1025&e.effectTag|2,Di=!1,void(Li=e);ji(Li,n)}Li=e,Ai=ur(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Di=!1,Li=e}}function Vi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Li=e}function Bi(e){if(e!==Li)return!1;if(!Di)return Vi(e),Di=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!lr(t,e.memoizedProps))for(t=Ai;t;)ji(e,t),t=ur(t.nextSibling);if(Vi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===Zn){if(0===t){Ai=ur(e.nextSibling);break e}t--}else n!==Jn&&n!==tr&&n!==er||t++}e=e.nextSibling}Ai=null}}else Ai=Li?ur(e.stateNode.nextSibling):null;return!0}function Hi(){Ai=Li=null,Di=!1}var Qi=U.ReactCurrentOwner,Ki=!1;function qi(e,t,n,r){t.child=null===e?jl(t,null,n,r):Dl(t,e.child,n,r)}function Yi(e,t,n,r,o){n=n.render;var l=t.ref;return pl(t,o),r=yi(e,t,n,r,l,o),null===e||Ki?(t.effectTag|=1,qi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),da(e,t,o))}function Xi(e,t,n,r,o,l){if(null===e){var i=n.type;return"function"!=typeof i||Yu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Gu(n.type,null,r,null,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Gi(e,t,i,r,o,l))}return i=e.child,o<l&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:oo)(o,r)&&e.ref===t.ref)?da(e,t,l):(t.effectTag|=1,(e=Xu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Gi(e,t,n,r,o,l){return null!==e&&oo(e.memoizedProps,r)&&e.ref===t.ref&&(Ki=!1,o<l)?da(e,t,l):Zi(e,t,n,r,l)}function Ji(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Zi(e,t,n,r,o){var l=xo(n)?ko:bo.current;return l=Eo(t,l),pl(t,o),n=yi(e,t,n,r,l,o),null===e||Ki?(t.effectTag|=1,qi(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),da(e,t,o))}function ea(e,t,n,o,l){if(xo(n)){var i=!0;_o(t)}else i=!1;if(pl(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Rl(t,n,o),Ul(t,n,o,l),o=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var c=a.context,s=n.contextType;"object"===r(s)&&null!==s?s=ml(s):s=Eo(t,s=xo(n)?ko:bo.current);var f=n.getDerivedStateFromProps,d="function"==typeof f||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==o||c!==s)&&zl(t,a,o,s),hl=!1;var p=t.memoizedState;c=a.state=p;var m=t.updateQueue;null!==m&&(Sl(t,m,o,a,l),c=t.memoizedState),u!==o||p!==c||wo.current||hl?("function"==typeof f&&(Ol(t,n,f,o),c=t.memoizedState),(u=hl||Ml(t,n,u,o,p,c,s))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=o,t.memoizedState=c),a.props=o,a.state=c,a.context=s,o=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),o=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:ol(t.type,u),c=a.context,"object"===r(s=n.contextType)&&null!==s?s=ml(s):s=Eo(t,s=xo(n)?ko:bo.current),(d="function"==typeof(f=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==o||c!==s)&&zl(t,a,o,s),hl=!1,c=t.memoizedState,p=a.state=c,null!==(m=t.updateQueue)&&(Sl(t,m,o,a,l),p=t.memoizedState),u!==o||c!==p||wo.current||hl?("function"==typeof f&&(Ol(t,n,f,o),p=t.memoizedState),(f=hl||Ml(t,n,u,o,c,p,s))?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(o,p,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(o,p,s)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=o,t.memoizedState=p),a.props=o,a.state=p,a.context=s,o=f):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),o=!1);return ta(e,t,n,o,i,l)}function ta(e,t,n,r,o,l){Ji(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Oo(t,n,!1),da(e,t,l);r=t.stateNode,Qi.current=t;var a=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=Dl(t,e.child,null,l),t.child=Dl(t,null,a,l)):qi(e,t,a,l),t.memoizedState=r.state,o&&Oo(t,n,!0),t.child}function na(e){var t=e.stateNode;t.pendingContext?Co(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Co(0,t.context,!1),Ql(e,t.containerInfo)}var ra,oa,la,ia,aa={dehydrated:null,retryTime:0};function ua(e,t,n){var r,o=t.mode,l=t.pendingProps,i=Xl.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&i)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===l.fallback||!0===l.unstable_avoidThisFallback||(i|=1),vo(Xl,1&i),null===e){if(void 0!==l.fallback&&Wi(t),a){if(a=l.fallback,(l=Ju(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,l.child=e;null!==e;)e.return=l,e=e.sibling;return(n=Ju(a,o,n,null)).return=t,l.sibling=n,t.memoizedState=aa,t.child=l,n}return o=l.children,t.memoizedState=null,t.child=jl(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(l=l.fallback,(n=Xu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Xu(o,l,o.expirationTime)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=aa,t.child=n,o}return n=Dl(t,e.child,l.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=l.fallback,(l=Ju(null,o,0,null)).return=t,l.child=e,null!==e&&(e.return=l),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,l.child=e;null!==e;)e.return=l,e=e.sibling;return(n=Ju(a,o,n,null)).return=t,l.sibling=n,n.effectTag|=2,l.childExpirationTime=0,t.memoizedState=aa,t.child=l,n}return t.memoizedState=null,t.child=Dl(t,e,l.children,n)}function ca(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),dl(e.return,t)}function sa(e,t,n,r,o,l){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:l}:(i.isBackwards=t,i.rendering=null,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=o,i.lastEffect=l)}function fa(e,t,n){var r=t.pendingProps,o=r.revealOrder,l=r.tail;if(qi(e,t,r.children,n),0!=(2&(r=Xl.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ca(e,n);else if(19===e.tag)ca(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(vo(Xl,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Gl(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),sa(t,!1,o,n,l,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Gl(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}sa(t,!0,n,null,l,t.lastEffect);break;case"together":sa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function da(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&Nu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Xu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Xu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function pa(e){e.effectTag|=4}function ma(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ha(e){switch(e.tag){case 1:xo(e.type)&&So();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Kl(),To(),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Yl(e),null;case 13:return yo(Xl),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return yo(Xl),null;case 4:return Kl(),null;case 10:return fl(e),null;default:return null}}function ya(e,t){return{value:e,source:t,stack:Z(t)}}ra=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},oa=function(){},la=function(e,t,n,r,o){var i=e.memoizedProps;if(i!==r){var a,u,c=t.stateNode;switch(Hl(Wl.current),e=null,n){case"input":i=_e(c,i),r=_e(c,r),e=[];break;case"option":i=Ue(c,i),r=Ue(c,r),e=[];break;case"select":i=l({},i,{value:void 0}),r=l({},r,{value:void 0}),e=[];break;case"textarea":i=Fe(c,i),r=Fe(c,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(c.onclick=Qn)}for(a in Vn(n,r),n=null,i)if(!r.hasOwnProperty(a)&&i.hasOwnProperty(a)&&null!=i[a])if("style"===a)for(u in c=i[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(m.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=i?i[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,""+s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(m.hasOwnProperty(a)?(null!=s&&Hn(o,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&pa(t)}},ia=function(e,t,n,r){n!==r&&pa(t)};var va="function"==typeof WeakSet?WeakSet:Set;function ga(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=Z(n)),null!==n&&J(n.type),t=t.value,null!==e&&1===e.tag&&J(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ba(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Wu(e,t)}else t.current=null}function wa(e,t){switch(t.tag){case 0:case 11:case 15:ka(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ol(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}function ka(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function Ea(e,t,n){switch("function"==typeof Qu&&Qu(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Go(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Wu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ba(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Wu(e,t)}}(t,n);break;case 5:ba(t);break;case 4:Ca(e,t,n)}}function xa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&xa(t)}function Sa(e){return 5===e.tag||3===e.tag||4===e.tag}function Ta(e){e:{for(var t=e.return;null!==t;){if(Sa(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(He(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Sa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var l=5===o.tag||6===o.tag;if(l){var i=l?o.stateNode:o.stateNode.instance;if(n)if(r){var u=i;i=n,8===(l=t).nodeType?l.parentNode.insertBefore(u,i):l.insertBefore(u,i)}else t.insertBefore(i,n);else r?(8===(u=t).nodeType?(l=u.parentNode).insertBefore(i,u):(l=u).appendChild(i),null!=(u=u._reactRootContainer)||null!==l.onclick||(l.onclick=Qn)):t.appendChild(i)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ca(e,t,n){for(var r,o,l=t,i=!1;;){if(!i){i=l.return;e:for(;;){if(null===i)throw Error(a(160));switch(r=i.stateNode,i.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}i=i.return}i=!0}if(5===l.tag||6===l.tag){e:for(var u=e,c=l,s=n,f=c;;)if(Ea(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=l.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(l.stateNode)}else if(4===l.tag){if(null!==l.child){r=l.stateNode.containerInfo,o=!0,l.child.return=l,l=l.child;continue}}else if(Ea(e,l,n),null!==l.child){l.child.return=l,l=l.child;continue}if(l===t)break;for(;null===l.sibling;){if(null===l.return||l.return===t)return;4===(l=l.return).tag&&(i=!1)}l.sibling.return=l.return,l=l.sibling}}function Pa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ka(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var l=t.updateQueue;if(t.updateQueue=null,null!==l){for(n[dr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ne(n,r),Bn(e,o),t=Bn(e,r),o=0;o<l.length;o+=2){var i=l[o],u=l[o+1];"style"===i?$n(n,u):"dangerouslySetInnerHTML"===i?Be(n,u):"children"===i?He(n,u):Se(n,i,u,t)}switch(e){case"input":Me(n,r);break;case"textarea":Ae(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ie(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ie(n,!!r.multiple,r.defaultValue,!0):Ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw Error(a(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,Pt(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,ru=qo()),null!==n)e:for(e=n;;){if(5===e.tag)l=e.stateNode,r?"function"==typeof(l=l.style).setProperty?l.setProperty("display","none","important"):l.display="none":(l=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,l.style.display=jn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(l=e.child.sibling).return=e,e=l;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}_a(t);break;case 19:_a(t);break;case 17:case 20:case 21:break;default:throw Error(a(163))}}function _a(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new va),t.forEach((function(t){var r=Bu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var Oa="function"==typeof WeakMap?WeakMap:Map;function Na(e,t,n){(n=gl(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){iu||(iu=!0,au=r),ga(e,t)},n}function Ma(e,t,n){(n=gl(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ga(e,t),r(o)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===uu?uu=new Set([this]):uu.add(this),ga(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ra,za=Math.ceil,Ua=U.ReactCurrentDispatcher,Ia=U.ReactCurrentOwner,Fa=0,La=8,Aa=16,Da=32,ja=0,$a=1,Wa=2,Va=3,Ba=4,Ha=5,Qa=Fa,Ka=null,qa=null,Ya=0,Xa=ja,Ga=null,Ja=1073741823,Za=1073741823,eu=null,tu=0,nu=!1,ru=0,ou=500,lu=null,iu=!1,au=null,uu=null,cu=!1,su=null,fu=90,du=null,pu=0,mu=null,hu=0;function yu(){return(Qa&(Aa|Da))!==Fa?1073741821-(qo()/10|0):0!==hu?hu:hu=1073741821-(qo()/10|0)}function vu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Yo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Qa&Aa)!==Fa)return Ya;if(null!==n)e=rl(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=rl(e,150,100);break;case 97:case 96:e=rl(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Ka&&e===Ya&&--e,e}function gu(e,t){if(50<pu)throw pu=0,mu=null,Error(a(185));if(null!==(e=bu(e,t))){var n=Yo();1073741823===t?(Qa&La)!==Fa&&(Qa&(Aa|Da))===Fa?xu(e):(ku(e),Qa===Fa&&el()):ku(e),(4&Qa)===Fa||98!==n&&99!==n||(null===du?du=new Map([[e,t]]):(void 0===(n=du.get(e))||n>t)&&du.set(e,t))}}function bu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Ka===o&&(Nu(t),Xa===Ba&&rc(o,Ya)),oc(o,t)),o}function wu(e){var t=e.lastExpiredTime;return 0!==t?t:nc(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function ku(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Zo(xu.bind(null,e));else{var t=wu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=yu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Wo&&Ro(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Zo(xu.bind(null,e)):Jo(r,Eu.bind(null,e),{timeout:10*(1073741821-t)-qo()}),e.callbackNode=t}}}function Eu(e,t){if(hu=0,t)return lc(e,t=yu()),ku(e),null;var n=wu(e);if(0!==n){if(t=e.callbackNode,(Qa&(Aa|Da))!==Fa)throw Error(a(327));if(Du(),e===Ka&&n===Ya||Cu(e,n),null!==qa){var r=Qa;Qa|=Aa;for(var o=_u();;)try{Ru();break}catch(t){Pu(e,t)}if(cl(),Qa=r,Ua.current=o,Xa===$a)throw t=Ga,Cu(e,n),rc(e,n),ku(e),t;if(null===qa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Xa,Ka=null,r){case ja:case $a:throw Error(a(345));case Wa:lc(e,2<n?2:n);break;case Va:if(rc(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Iu(o)),1073741823===Ja&&10<(o=ru+ou-qo())){if(nu){var l=e.lastPingedTime;if(0===l||l>=n){e.lastPingedTime=n,Cu(e,n);break}}if(0!==(l=wu(e))&&l!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=ir(Fu.bind(null,e),o);break}Fu(e);break;case Ba:if(rc(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Iu(o)),nu&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,Cu(e,n);break}if(0!==(o=wu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Za?r=10*(1073741821-Za)-qo():1073741823===Ja?r=0:(r=10*(1073741821-Ja)-5e3,0>(r=(o=qo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*za(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=ir(Fu.bind(null,e),r);break}Fu(e);break;case Ha:if(1073741823!==Ja&&null!==eu){l=Ja;var i=eu;if(0>=(r=0|i.busyMinDurationMs)?r=0:(o=0|i.busyDelayMs,r=(l=qo()-(10*(1073741821-l)-(0|i.timeoutMs||5e3)))<=o?0:o+r-l),10<r){rc(e,n),e.timeoutHandle=ir(Fu.bind(null,e),r);break}}Fu(e);break;default:throw Error(a(329))}if(ku(e),e.callbackNode===t)return Eu.bind(null,e)}}return null}function xu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)Fu(e);else{if((Qa&(Aa|Da))!==Fa)throw Error(a(327));if(Du(),e===Ka&&t===Ya||Cu(e,t),null!==qa){var n=Qa;Qa|=Aa;for(var r=_u();;)try{Mu();break}catch(t){Pu(e,t)}if(cl(),Qa=n,Ua.current=r,Xa===$a)throw n=Ga,Cu(e,t),rc(e,t),ku(e),n;if(null!==qa)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Ka=null,Fu(e),ku(e)}}return null}function Su(e,t){var n=Qa;Qa|=1;try{return e(t)}finally{(Qa=n)===Fa&&el()}}function Tu(e,t){var n=Qa;Qa&=-2,Qa|=La;try{return e(t)}finally{(Qa=n)===Fa&&el()}}function Cu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ar(n)),null!==qa)for(n=qa.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&So();break;case 3:Kl(),To();break;case 5:Yl(r);break;case 4:Kl();break;case 13:case 19:yo(Xl);break;case 10:fl(r)}n=n.return}Ka=e,qa=Xu(e.current,null),Ya=t,Xa=ja,Ga=null,Za=Ja=1073741823,eu=null,tu=0,nu=!1}function Pu(e,t){for(;;){try{if(cl(),vi(),null===qa||null===qa.return)return Xa=$a,Ga=t,null;e:{var n=e,o=qa.return,l=qa,i=t;if(t=Ya,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==i&&"object"===r(i)&&"function"==typeof i.then){var a=i,u=0!=(1&Xl.current),c=o;do{var s;if(s=13===c.tag){var f=c.memoizedState;if(null!==f)s=null!==f.dehydrated;else{var d=c.memoizedProps;s=void 0!==d.fallback&&(!0!==d.unstable_avoidThisFallback||!u)}}if(s){var p=c.updateQueue;if(null===p){var m=new Set;m.add(a),c.updateQueue=m}else p.add(a);if(0==(2&c.mode)){if(c.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var h=gl(1073741823,null);h.tag=2,wl(l,h)}l.expirationTime=1073741823;break e}i=void 0,l=t;var y=n.pingCache;if(null===y?(y=n.pingCache=new Oa,i=new Set,y.set(a,i)):void 0===(i=y.get(a))&&(i=new Set,y.set(a,i)),!i.has(l)){i.add(l);var v=Vu.bind(null,n,a,l);a.then(v,v)}c.effectTag|=4096,c.expirationTime=t;break e}c=c.return}while(null!==c);i=Error((J(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Z(l))}Xa!==Ha&&(Xa=Wa),i=ya(i,l),c=o;do{switch(c.tag){case 3:a=i,c.effectTag|=4096,c.expirationTime=t,kl(c,Na(c,a,t));break e;case 1:a=i;var g=c.type,b=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof g.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===uu||!uu.has(b)))){c.effectTag|=4096,c.expirationTime=t,kl(c,Ma(c,a,t));break e}}c=c.return}while(null!==c)}qa=Uu(qa)}catch(e){t=e;continue}break}}function _u(){var e=Ua.current;return Ua.current=Ui,null===e?Ui:e}function Ou(e,t){e<Ja&&2<e&&(Ja=e),null!==t&&e<Za&&2<e&&(Za=e,eu=t)}function Nu(e){e>tu&&(tu=e)}function Mu(){for(;null!==qa;)qa=zu(qa)}function Ru(){for(;null!==qa&&!zo();)qa=zu(qa)}function zu(e){var t=Ra(e.alternate,e,Ya);return e.memoizedProps=e.pendingProps,null===t&&(t=Uu(e)),Ia.current=null,t}function Uu(e){qa=e;do{var t=qa.alternate;if(e=qa.return,0==(2048&qa.effectTag)){e:{var n=t,r=Ya,o=(t=qa).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:xo(t.type)&&So();break;case 3:Kl(),To(),(o=t.stateNode).pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),(null===n||null===n.child)&&Bi(t)&&pa(t),oa(t);break;case 5:Yl(t),r=Hl(Bl.current);var i=t.type;if(null!==n&&null!=t.stateNode)la(n,t,i,o,r),n.ref!==t.ref&&(t.effectTag|=128);else if(o){var u=Hl(Wl.current);if(Bi(t)){var c=(o=t).stateNode;n=o.type;var s=o.memoizedProps,f=r;switch(c[fr]=o,c[dr]=s,i=void 0,r=c,n){case"iframe":case"object":case"embed":Pn("load",r);break;case"video":case"audio":for(c=0;c<tt.length;c++)Pn(tt[c],r);break;case"source":Pn("error",r);break;case"img":case"image":case"link":Pn("error",r),Pn("load",r);break;case"form":Pn("reset",r),Pn("submit",r);break;case"details":Pn("toggle",r);break;case"input":Oe(r,s),Pn("invalid",r),Hn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Pn("invalid",r),Hn(f,"onChange");break;case"textarea":Le(r,s),Pn("invalid",r),Hn(f,"onChange")}for(i in Vn(n,s),c=null,s)s.hasOwnProperty(i)&&(u=s[i],"children"===i?"string"==typeof u?r.textContent!==u&&(c=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(c=["children",""+u]):m.hasOwnProperty(i)&&null!=u&&Hn(f,i));switch(n){case"input":Ce(r),Re(r,s,!0);break;case"textarea":Ce(r),De(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Qn)}i=c,o.updateQueue=i,(o=null!==i)&&pa(t)}else{n=t,f=i,s=o,c=9===r.nodeType?r:r.ownerDocument,u===je.html&&(u=$e(f)),u===je.html?"script"===f?((s=c.createElement("div")).innerHTML="<script><\/script>",c=s.removeChild(s.firstChild)):"string"==typeof s.is?c=c.createElement(f,{is:s.is}):(c=c.createElement(f),"select"===f&&(f=c,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):c=c.createElementNS(u,f),(s=c)[fr]=n,s[dr]=o,ra(s,t,!1,!1),t.stateNode=s;var d=r,p=Bn(f=i,n=o);switch(f){case"iframe":case"object":case"embed":Pn("load",s),r=n;break;case"video":case"audio":for(r=0;r<tt.length;r++)Pn(tt[r],s);r=n;break;case"source":Pn("error",s),r=n;break;case"img":case"image":case"link":Pn("error",s),Pn("load",s),r=n;break;case"form":Pn("reset",s),Pn("submit",s),r=n;break;case"details":Pn("toggle",s),r=n;break;case"input":Oe(s,n),r=_e(s,n),Pn("invalid",s),Hn(d,"onChange");break;case"option":r=Ue(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=l({},n,{value:void 0}),Pn("invalid",s),Hn(d,"onChange");break;case"textarea":Le(s,n),r=Fe(s,n),Pn("invalid",s),Hn(d,"onChange");break;default:r=n}Vn(f,r),c=void 0,u=f;var h=s,y=r;for(c in y)if(y.hasOwnProperty(c)){var v=y[c];"style"===c?$n(h,v):"dangerouslySetInnerHTML"===c?null!=(v=v?v.__html:void 0)&&Be(h,v):"children"===c?"string"==typeof v?("textarea"!==u||""!==v)&&He(h,v):"number"==typeof v&&He(h,""+v):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(m.hasOwnProperty(c)?null!=v&&Hn(d,c):null!=v&&Se(h,c,v,p))}switch(f){case"input":Ce(s),Re(s,n,!1);break;case"textarea":Ce(s),De(s);break;case"option":null!=n.value&&s.setAttribute("value",""+xe(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?Ie(r,!!n.multiple,s,!1):null!=n.defaultValue&&Ie(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Qn)}(o=or(i,o))&&pa(t)}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(a(166));break;case 6:if(n&&null!=t.stateNode)ia(n,t,n.memoizedProps,o);else{if("string"!=typeof o&&null===t.stateNode)throw Error(a(166));r=Hl(Bl.current),Hl(Wl.current),Bi(t)?(i=(o=t).stateNode,r=o.memoizedProps,i[fr]=o,(o=i.nodeValue!==r)&&pa(t)):(i=t,(o=(9===r.nodeType?r:r.ownerDocument).createTextNode(o))[fr]=i,t.stateNode=o)}break;case 11:break;case 13:if(yo(Xl),o=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}o=null!==o,i=!1,null===n?void 0!==t.memoizedProps.fallback&&Bi(t):(i=null!==(r=n.memoizedState),o||null===r||null!==(r=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=r,r.nextEffect=s):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),o&&!i&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Xl.current)?Xa===ja&&(Xa=Va):(Xa!==ja&&Xa!==Va||(Xa=Ba),0!==tu&&null!==Ka&&(rc(Ka,Ya),oc(Ka,tu)))),(o||i)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Kl(),oa(t);break;case 10:fl(t);break;case 9:case 14:break;case 17:xo(t.type)&&So();break;case 19:if(yo(Xl),null===(o=t.memoizedState))break;if(i=0!=(64&t.effectTag),null===(s=o.rendering)){if(i)ma(o,!1);else if(Xa!==ja||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=Gl(n))){for(t.effectTag|=64,ma(o,!1),null!==(i=s.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===o.lastEffect&&(t.firstEffect=null),t.lastEffect=o.lastEffect,o=r,i=t.child;null!==i;)n=o,(r=i).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),i=i.sibling;vo(Xl,1&Xl.current|2),t=t.child;break e}n=n.sibling}}else{if(!i)if(null!==(n=Gl(s))){if(t.effectTag|=64,i=!0,null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),ma(o,!0),null===o.tail&&"hidden"===o.tailMode){null!==(t=t.lastEffect=o.lastEffect)&&(t.nextEffect=null);break}}else qo()>o.tailExpiration&&1<r&&(t.effectTag|=64,i=!0,ma(o,!1),t.expirationTime=t.childExpirationTime=r-1);o.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=o.last)?r.sibling=s:t.child=s,o.last=s)}if(null!==o.tail){0===o.tailExpiration&&(o.tailExpiration=qo()+500),r=o.tail,o.rendering=r,o.tail=r.sibling,o.lastEffect=t.lastEffect,r.sibling=null,o=Xl.current,vo(Xl,o=i?1&o|2:1&o),t=r;break e}break;case 20:case 21:break;default:throw Error(a(156,t.tag))}t=null}if(o=qa,1===Ya||1!==o.childExpirationTime){for(i=0,r=o.child;null!==r;)(n=r.expirationTime)>i&&(i=n),(s=r.childExpirationTime)>i&&(i=s),r=r.sibling;o.childExpirationTime=i}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=qa.firstEffect),null!==qa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=qa.firstEffect),e.lastEffect=qa.lastEffect),1<qa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=qa:e.firstEffect=qa,e.lastEffect=qa))}else{if(null!==(t=ha(qa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=qa.sibling))return t;qa=e}while(null!==qa);return Xa===ja&&(Xa=Ha),null}function Iu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Fu(e){var t=Yo();return Go(99,Lu.bind(null,e,t)),null}function Lu(e,t){if(Du(),(Qa&(Aa|Da))!==Fa)throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Iu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Ka&&(qa=Ka=null,Ya=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var l=Qa;Qa|=Da,Ia.current=null,nr=Cn;var i=Xn();if(Gn(i)){if("selectionStart"in i)var u={start:i.selectionStart,end:i.selectionEnd};else e:{var c=(u=(u=i.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,v=i,g=null;t:for(;;){for(var b;v!==u||0!==s&&3!==v.nodeType||(p=d+s),v!==f||0!==c&&3!==v.nodeType||(m=d+c),3===v.nodeType&&(d+=v.nodeValue.length),null!==(b=v.firstChild);)g=v,v=b;for(;;){if(v===i)break t;if(g===u&&++h===s&&(p=d),g===f&&++y===c&&(m=d),null!==(b=v.nextSibling))break;g=(v=g).parentNode}v=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;rr={focusedElem:i,selectionRange:u},Cn=!1,lu=o;do{try{Au()}catch(e){if(null===lu)throw Error(a(330));Wu(lu,e),lu=lu.nextEffect}}while(null!==lu);lu=o;do{try{for(i=e,u=t;null!==lu;){var w=lu.effectTag;if(16&w&&He(lu.stateNode,""),128&w){var k=lu.alternate;if(null!==k){var E=k.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&w){case 2:Ta(lu),lu.effectTag&=-3;break;case 6:Ta(lu),lu.effectTag&=-3,Pa(lu.alternate,lu);break;case 1024:lu.effectTag&=-1025;break;case 1028:lu.effectTag&=-1025,Pa(lu.alternate,lu);break;case 4:Pa(lu.alternate,lu);break;case 8:Ca(i,s=lu,u),xa(s)}lu=lu.nextEffect}}catch(e){if(null===lu)throw Error(a(330));Wu(lu,e),lu=lu.nextEffect}}while(null!==lu);if(E=rr,k=Xn(),w=E.focusedElem,u=E.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&Gn(w)&&(k=u.start,void 0===(E=u.end)&&(E=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(E,w.value.length)):(E=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(E=E.getSelection(),s=w.textContent.length,i=Math.min(u.start,s),u=void 0===u.end?i:Math.min(u.end,s),!E.extend&&i>u&&(s=u,u=i,i=s),s=Yn(w,i),f=Yn(w,u),s&&f&&(1!==E.rangeCount||E.anchorNode!==s.node||E.anchorOffset!==s.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),E.removeAllRanges(),i>u?(E.addRange(k),E.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),E.addRange(k))))),k=[];for(E=w;E=E.parentNode;)1===E.nodeType&&k.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(E=k[w]).element.scrollLeft=E.left,E.element.scrollTop=E.top}rr=null,Cn=!!nr,nr=null,e.current=n,lu=o;do{try{for(w=r;null!==lu;){var x=lu.effectTag;if(36&x){var S=lu.alternate;switch(E=w,(k=lu).tag){case 0:case 11:case 15:ka(16,32,k);break;case 1:var T=k.stateNode;if(4&k.effectTag)if(null===S)T.componentDidMount();else{var C=k.elementType===k.type?S.memoizedProps:ol(k.type,S.memoizedProps);T.componentDidUpdate(C,S.memoizedState,T.__reactInternalSnapshotBeforeUpdate)}var P=k.updateQueue;null!==P&&Tl(0,P,T);break;case 3:var _=k.updateQueue;if(null!==_){if(i=null,null!==k.child)switch(k.child.tag){case 5:i=k.child.stateNode;break;case 1:i=k.child.stateNode}Tl(0,_,i)}break;case 5:var O=k.stateNode;null===S&&4&k.effectTag&&or(k.type,k.memoizedProps)&&O.focus();break;case 6:case 4:case 12:break;case 13:if(null===k.memoizedState){var N=k.alternate;if(null!==N){var M=N.memoizedState;if(null!==M){var R=M.dehydrated;null!==R&&Pt(R)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(a(163))}}if(128&x){k=void 0;var z=lu.ref;if(null!==z){var U=lu.stateNode;switch(lu.tag){case 5:k=U;break;default:k=U}"function"==typeof z?z(k):z.current=k}}lu=lu.nextEffect}}catch(e){if(null===lu)throw Error(a(330));Wu(lu,e),lu=lu.nextEffect}}while(null!==lu);lu=null,Vo(),Qa=l}else e.current=n;if(cu)cu=!1,su=e,fu=t;else for(lu=o;null!==lu;)t=lu.nextEffect,lu.nextEffect=null,lu=t;if(0===(t=e.firstPendingTime)&&(uu=null),1073741823===t?e===mu?pu++:(pu=0,mu=e):pu=0,"function"==typeof Hu&&Hu(n.stateNode,r),ku(e),iu)throw iu=!1,e=au,au=null,e;return(Qa&La)!==Fa?null:(el(),null)}function Au(){for(;null!==lu;){var e=lu.effectTag;0!=(256&e)&&wa(lu.alternate,lu),0==(512&e)||cu||(cu=!0,Jo(97,(function(){return Du(),null}))),lu=lu.nextEffect}}function Du(){if(90!==fu){var e=97<fu?97:fu;return fu=90,Go(e,ju)}}function ju(){if(null===su)return!1;var e=su;if(su=null,(Qa&(Aa|Da))!==Fa)throw Error(a(331));var t=Qa;for(Qa|=Da,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:ka(128,0,n),ka(0,64,n)}}catch(t){if(null===e)throw Error(a(330));Wu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Qa=t,el(),!0}function $u(e,t,n){wl(e,t=Na(e,t=ya(n,t),1073741823)),null!==(e=bu(e,1073741823))&&ku(e)}function Wu(e,t){if(3===e.tag)$u(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){$u(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===uu||!uu.has(r))){wl(n,e=Ma(n,e=ya(t,e),1073741823)),null!==(n=bu(n,1073741823))&&ku(n);break}}n=n.return}}function Vu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Ka===e&&Ya===n?Xa===Ba||Xa===Va&&1073741823===Ja&&qo()-ru<ou?Cu(e,Ya):nu=!0:nc(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),ku(e)))}function Bu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=vu(t=yu(),e,null)),null!==(e=bu(e,t))&&ku(e)}Ra=function(e,t,n){var o=t.expirationTime;if(null!==e){var l=t.pendingProps;if(e.memoizedProps!==l||wo.current)Ki=!0;else{if(o<n){switch(Ki=!1,t.tag){case 3:na(t),Hi();break;case 5:if(ql(t),4&t.mode&&1!==n&&l.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:xo(t.type)&&_o(t);break;case 4:Ql(t,t.stateNode.containerInfo);break;case 10:sl(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(o=t.child.childExpirationTime)&&o>=n?ua(e,t,n):(vo(Xl,1&Xl.current),null!==(t=da(e,t,n))?t.sibling:null);vo(Xl,1&Xl.current);break;case 19:if(o=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(o)return fa(e,t,n);t.effectTag|=64}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null),vo(Xl,Xl.current),!o)return null}return da(e,t,n)}Ki=!1}}else Ki=!1;switch(t.expirationTime=0,t.tag){case 2:if(o=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,l=Eo(t,bo.current),pl(t,n),l=yi(null,t,o,e,l,n),t.effectTag|=1,"object"===r(l)&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof){if(t.tag=1,vi(),xo(o)){var i=!0;_o(t)}else i=!1;t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null;var u=o.getDerivedStateFromProps;"function"==typeof u&&Ol(t,o,u,e),l.updater=Nl,t.stateNode=l,l._reactInternalFiber=t,Ul(t,o,e,n),t=ta(null,t,o,!0,i,n)}else t.tag=0,qi(null,t,l,n),t=t.child;return t;case 16:if(l=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(l),1!==l._status)throw l._result;switch(l=l._result,t.type=l,i=t.tag=function(e){if("function"==typeof e)return Yu(e)?1:0;if(null!=e){if((e=e.$$typeof)===H)return 11;if(e===q)return 14}return 2}(l),e=ol(l,e),i){case 0:t=Zi(null,t,l,e,n);break;case 1:t=ea(null,t,l,e,n);break;case 11:t=Yi(null,t,l,e,n);break;case 14:t=Xi(null,t,l,ol(l.type,e),o,n);break;default:throw Error(a(306,l,""))}return t;case 0:return o=t.type,l=t.pendingProps,Zi(e,t,o,l=t.elementType===o?l:ol(o,l),n);case 1:return o=t.type,l=t.pendingProps,ea(e,t,o,l=t.elementType===o?l:ol(o,l),n);case 3:if(na(t),null===(o=t.updateQueue))throw Error(a(282));if(l=null!==(l=t.memoizedState)?l.element:null,Sl(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===l)Hi(),t=da(e,t,n);else{if((l=t.stateNode.hydrate)&&(Ai=ur(t.stateNode.containerInfo.firstChild),Li=t,l=Di=!0),l)for(n=jl(t,null,o,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else qi(e,t,o,n),Hi();t=t.child}return t;case 5:return ql(t),null===e&&Wi(t),o=t.type,l=t.pendingProps,i=null!==e?e.memoizedProps:null,u=l.children,lr(o,l)?u=null:null!==i&&lr(o,i)&&(t.effectTag|=16),Ji(e,t),4&t.mode&&1!==n&&l.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(qi(e,t,u,n),t=t.child),t;case 6:return null===e&&Wi(t),null;case 13:return ua(e,t,n);case 4:return Ql(t,t.stateNode.containerInfo),o=t.pendingProps,null===e?t.child=Dl(t,null,o,n):qi(e,t,o,n),t.child;case 11:return o=t.type,l=t.pendingProps,Yi(e,t,o,l=t.elementType===o?l:ol(o,l),n);case 7:return qi(e,t,t.pendingProps,n),t.child;case 8:case 12:return qi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(o=t.type._context,l=t.pendingProps,u=t.memoizedProps,sl(t,i=l.value),null!==u){var c=u.value;if(0===(i=no(c,i)?0:0|("function"==typeof o._calculateChangedBits?o._calculateChangedBits(c,i):1073741823))){if(u.children===l.children&&!wo.current){t=da(e,t,n);break e}}else for(null!==(c=t.child)&&(c.return=t);null!==c;){var s=c.dependencies;if(null!==s){u=c.child;for(var f=s.firstContext;null!==f;){if(f.context===o&&0!=(f.observedBits&i)){1===c.tag&&((f=gl(n,null)).tag=2,wl(c,f)),c.expirationTime<n&&(c.expirationTime=n),null!==(f=c.alternate)&&f.expirationTime<n&&(f.expirationTime=n),dl(c.return,n),s.expirationTime<n&&(s.expirationTime=n);break}f=f.next}}else u=10===c.tag&&c.type===t.type?null:c.child;if(null!==u)u.return=c;else for(u=c;null!==u;){if(u===t){u=null;break}if(null!==(c=u.sibling)){c.return=u.return,u=c;break}u=u.return}c=u}}qi(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,o=(i=t.pendingProps).children,pl(t,n),o=o(l=ml(l,i.unstable_observedBits)),t.effectTag|=1,qi(e,t,o,n),t.child;case 14:return i=ol(l=t.type,t.pendingProps),Xi(e,t,l,i=ol(l.type,i),o,n);case 15:return Gi(e,t,t.type,t.pendingProps,o,n);case 17:return o=t.type,l=t.pendingProps,l=t.elementType===o?l:ol(o,l),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,xo(o)?(e=!0,_o(t)):e=!1,pl(t,n),Rl(t,o,l),Ul(t,o,l,n),ta(null,t,o,!0,e,n);case 19:return fa(e,t,n)}throw Error(a(156,t.tag))};var Hu=null,Qu=null;function Ku(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qu(e,t,n,r){return new Ku(e,t,n,r)}function Yu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Xu(e,t){var n=e.alternate;return null===n?((n=qu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Gu(e,t,n,o,l,i){var u=2;if(o=e,"function"==typeof e)Yu(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case D:return Ju(n.children,l,i,t);case B:u=8,l|=7;break;case j:u=8,l|=1;break;case $:return(e=qu(12,n,t,8|l)).elementType=$,e.type=$,e.expirationTime=i,e;case Q:return(e=qu(13,n,t,l)).type=Q,e.elementType=Q,e.expirationTime=i,e;case K:return(e=qu(19,n,t,l)).elementType=K,e.expirationTime=i,e;default:if("object"===r(e)&&null!==e)switch(e.$$typeof){case W:u=10;break e;case V:u=9;break e;case H:u=11;break e;case q:u=14;break e;case Y:u=16,o=null;break e}throw Error(a(130,null==e?e:r(e),""))}return(t=qu(u,n,t,l)).elementType=e,t.type=o,t.expirationTime=i,t}function Ju(e,t,n,r){return(e=qu(7,e,r,t)).expirationTime=n,e}function Zu(e,t,n){return(e=qu(6,e,null,t)).expirationTime=n,e}function ec(e,t,n){return(t=qu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function tc(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function nc(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function rc(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function oc(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function lc(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function ic(e,t,n,r){var o=t.current,l=yu(),i=Pl.suspense;l=vu(l,o,i);e:if(n){t:{if(nt(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(xo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(xo(c)){n=Po(n,c,u);break e}}n=u}else n=go;return null===t.context?t.context=n:t.pendingContext=n,(t=gl(l,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),wl(o,t),gu(o,l),l}function ac(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function uc(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function cc(e,t){uc(e,t),(e=e.alternate)&&uc(e,t)}function sc(e,t,n){var r=new tc(e,t,n=null!=n&&!0===n.hydrate),o=qu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,e[pr]=r.current,n&&0!==t&&function(e){var t=Fn(e);vt.forEach((function(n){Ln(n,e,t)})),gt.forEach((function(n){Ln(n,e,t)}))}(9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function fc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function dc(e,t,n,r,o){var l=n._reactRootContainer;if(l){var i=l._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=ac(i);a.call(e)}}ic(t,i,e,o)}else{if(l=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new sc(e,0,t?{hydrate:!0}:void 0)}(n,r),i=l._internalRoot,"function"==typeof o){var u=o;o=function(){var e=ac(i);u.call(e)}}Tu((function(){ic(t,i,e,o)}))}return ac(i)}function pc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!fc(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:A,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}it=function(e){if(13===e.tag){var t=rl(yu(),150,100);gu(e,t),cc(e,t)}},at=function(e){if(13===e.tag){yu();var t=nl++;gu(e,t),cc(e,t)}},ut=function(e){if(13===e.tag){var t=yu();gu(e,t=vu(t,e,null)),cc(e,t)}},te=function(e,t,n){switch(t){case"input":if(Me(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=vr(r);if(!o)throw Error(a(90));Pe(r),Me(r,o)}}}break;case"textarea":Ae(e,n);break;case"select":null!=(t=n.value)&&Ie(e,!!n.multiple,t,!1)}},sc.prototype.render=function(e,t){ic(e,this._internalRoot,null,void 0===t?null:t)},sc.prototype.unmount=function(e){ic(null,this._internalRoot,null,void 0===e?null:e)},ae=Su,ue=function(e,t,n,r){var o=Qa;Qa|=4;try{return Go(98,e.bind(null,t,n,r))}finally{(Qa=o)===Fa&&el()}},ce=function(){(Qa&(1|Aa|Da))===Fa&&(function(){if(null!==du){var e=du;du=null,e.forEach((function(e,t){lc(t,e),ku(t)})),el()}}(),Du())},se=function(e,t){var n=Qa;Qa|=2;try{return e(t)}finally{(Qa=n)===Fa&&el()}};var mc,hc,yc={createPortal:pc,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=lt(t))?null:e.stateNode},hydrate:function(e,t,n){if(!fc(t))throw Error(a(200));return dc(null,e,t,!0,n)},render:function(e,t,n){if(!fc(t))throw Error(a(200));return dc(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!fc(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return dc(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!fc(e))throw Error(a(40));return!!e._reactRootContainer&&(Tu((function(){dc(null,null,e,!1,(function(){e._reactRootContainer=null}))})),!0)},unstable_createPortal:function(){return pc.apply(void 0,arguments)},unstable_batchedUpdates:Su,flushSync:function(e,t){if((Qa&(Aa|Da))!==Fa)throw Error(a(187));var n=Qa;Qa|=1;try{return Go(99,e.bind(null,t))}finally{Qa=n,el()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[hr,yr,vr,R.injectEventPluginsByName,p,Ut,function(e){_(e,zt)},le,ie,Rn,M,Du,{current:!1}]}};hc=(mc={findFiberByHostInstance:mr,bundleType:0,version:"16.11.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Hu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Qu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(l({},mc,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:U.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=lt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return hc?hc(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var vc={default:yc},gc=vc&&yc||vc;e.exports=gc.default||gc},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v0.17.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,l,i,a,u;if(Object.defineProperty(t,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function e(){if(null!==c)try{var n=t.unstable_now();c(!0,n),c=null}catch(t){throw setTimeout(e,0),t}},d=Date.now();t.unstable_now=function(){return Date.now()-d},o=function(e){null!==c?setTimeout(o,0,e):(c=e,setTimeout(f,0))},l=function(e,t){s=setTimeout(e,t)},i=function(){clearTimeout(s)},a=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var p=window.performance,m=window.Date,h=window.setTimeout,y=window.clearTimeout,v=window.requestAnimationFrame,g=window.cancelAnimationFrame;if("undefined"!=typeof console&&("function"!=typeof v&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")),"object"===r(p)&&"function"==typeof p.now)t.unstable_now=function(){return p.now()};else{var b=m.now();t.unstable_now=function(){return m.now()-b}}var w=!1,k=null,E=-1,x=5,S=0;a=function(){return t.unstable_now()>=S},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):33.33};var T=new MessageChannel,C=T.port2;T.port1.onmessage=function(){if(null!==k){var e=t.unstable_now();S=e+x;try{k(!0,e)?C.postMessage(null):(w=!1,k=null)}catch(e){throw C.postMessage(null),e}}else w=!1},o=function(e){k=e,w||(w=!0,C.postMessage(null))},l=function(e,n){E=h((function(){e(t.unstable_now())}),n)},i=function(){y(E),E=-1}}function P(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<N(o,t)))break e;e[r]=t,e[n]=o,n=r}}function _(e){return void 0===(e=e[0])?null:e}function O(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var l=2*(r+1)-1,i=e[l],a=l+1,u=e[a];if(void 0!==i&&0>N(i,n))void 0!==u&&0>N(u,i)?(e[r]=u,e[a]=n,r=a):(e[r]=i,e[l]=n,r=l);else{if(!(void 0!==u&&0>N(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var M=[],R=[],z=1,U=null,I=3,F=!1,L=!1,A=!1;function D(e){for(var t=_(R);null!==t;){if(null===t.callback)O(R);else{if(!(t.startTime<=e))break;O(R),t.sortIndex=t.expirationTime,P(M,t)}t=_(R)}}function j(e){if(A=!1,D(e),!L)if(null!==_(M))L=!0,o($);else{var t=_(R);null!==t&&l(j,t.startTime-e)}}function $(e,n){L=!1,A&&(A=!1,i()),F=!0;var r=I;try{for(D(n),U=_(M);null!==U&&(!(U.expirationTime>n)||e&&!a());){var o=U.callback;if(null!==o){U.callback=null,I=U.priorityLevel;var u=o(U.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?U.callback=u:U===_(M)&&O(M),D(n)}else O(M);U=_(M)}if(null!==U)var c=!0;else{var s=_(R);null!==s&&l(j,s.startTime-n),c=!1}return c}finally{U=null,I=r,F=!1}}function W(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var V=u;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=I;I=e;try{return t()}finally{I=n}},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var n=I;I=t;try{return e()}finally{I=n}},t.unstable_scheduleCallback=function(e,n,a){var u=t.unstable_now();if("object"===r(a)&&null!==a){var c=a.delay;c="number"==typeof c&&0<c?u+c:u,a="number"==typeof a.timeout?a.timeout:W(e)}else a=W(e),c=u;return e={id:z++,callback:n,priorityLevel:e,startTime:c,expirationTime:a=c+a,sortIndex:-1},c>u?(e.sortIndex=c,P(R,e),null===_(M)&&e===_(R)&&(A?i():A=!0,l(j,c-u))):(e.sortIndex=a,P(M,e),L||F||(L=!0,o($))),e},t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_wrapCallback=function(e){var t=I;return function(){var n=I;I=t;try{return e.apply(this,arguments)}finally{I=n}}},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=_(M);return n!==U&&null!==U&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<U.expirationTime||a()},t.unstable_requestPaint=V,t.unstable_continueExecution=function(){L||F||(L=!0,o($))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return _(M)},t.unstable_Profiling=null},,function(e,t,n){"use strict";var r=n(16);function o(){}function l(){}l.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,l,i){if(i!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===("undefined"==typeof window?"undefined":n(window))&&(r=window)}e.exports=r},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&Symbol.for,l=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.async_mode"):60111,p=o?Symbol.for("react.concurrent_mode"):60111,m=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,y=o?Symbol.for("react.suspense_list"):60120,v=o?Symbol.for("react.memo"):60115,g=o?Symbol.for("react.lazy"):60116,b=o?Symbol.for("react.fundamental"):60117,w=o?Symbol.for("react.responder"):60118,k=o?Symbol.for("react.scope"):60119;function E(e){if("object"===r(e)&&null!==e){var t=e.$$typeof;switch(t){case l:switch(e=e.type){case d:case p:case a:case c:case u:case h:return e;default:switch(e=e&&e.$$typeof){case f:case m:case s:return e;default:return t}}case g:case v:case i:return t}}}function x(e){return E(e)===p}t.typeOf=E,t.AsyncMode=d,t.ConcurrentMode=p,t.ContextConsumer=f,t.ContextProvider=s,t.Element=l,t.ForwardRef=m,t.Fragment=a,t.Lazy=g,t.Memo=v,t.Portal=i,t.Profiler=c,t.StrictMode=u,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===p||e===c||e===u||e===h||e===y||"object"===r(e)&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===s||e.$$typeof===f||e.$$typeof===m||e.$$typeof===b||e.$$typeof===w||e.$$typeof===k)},t.isAsyncMode=function(e){return x(e)||E(e)===d},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===f},t.isContextProvider=function(e){return E(e)===s},t.isElement=function(e){return"object"===r(e)&&null!==e&&e.$$typeof===l},t.isForwardRef=function(e){return E(e)===m},t.isFragment=function(e){return E(e)===a},t.isLazy=function(e){return E(e)===g},t.isMemo=function(e){return E(e)===v},t.isPortal=function(e){return E(e)===i},t.isProfiler=function(e){return E(e)===c},t.isStrictMode=function(e){return E(e)===u},t.isSuspense=function(e){return E(e)===h}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),l=n(7),i=n.n(l);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function d(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var p=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],l=e&&f(e),i=t&&f(t),a=l||i;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),c++):c&&(d(o,s),c--)}if(!a)for(;c--;c)o.unshift("..");!a||""===o[0]||o[0]&&f(o[0])||o.unshift("");var m=o.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m};function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var y=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"===m(t)||"object"===m(n)){var r=h(t),o=h(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1},v=!0,g="Invariant failed";var b=function(e,t){if(!e)throw v?new Error(g):new Error(g+": "+(t||""))};function w(e){return"/"===e.charAt(0)?e:"/"+e}function k(e){return"/"===e.charAt(0)?e.substr(1):e}function E(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function x(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function S(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function T(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var l=t.indexOf("?");return-1!==l&&(n=t.substr(l),t=t.substr(0,l)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function C(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var l="function"==typeof e?e(t,n):e;"string"==typeof l?"function"==typeof r?r(l,o):o(!0):o(!1!==l)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var P=!("undefined"==typeof window||!window.document||!window.document.createElement);function _(e,t){t(window.confirm(e))}var O="popstate",N="hashchange";function M(){try{return window.history.state||{}}catch(e){return{}}}function R(e){void 0===e&&(e={}),P||b(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),l=e,i=l.forceRefresh,a=void 0!==i&&i,u=l.getUserConfirmation,c=void 0===u?_:u,f=l.keyLength,d=void 0===f?6:f,p=e.basename?x(w(e.basename)):"";function m(e){var t=e||{},n=t.key,r=t.state,o=window.location,l=o.pathname+o.search+o.hash;return p&&(l=E(l,p)),T(l,r,n)}function h(){return Math.random().toString(36).substr(2,d)}var y=C();function v(e){s($,e),$.length=n.length,y.notifyListeners($.location,$.action)}function g(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||z(m(e.state))}function k(){z(m(M()))}var R=!1;function z(e){if(R)R=!1,v();else{y.confirmTransitionTo(e,"POP",c,(function(t){t?v({action:"POP",location:e}):function(e){var t=$.location,n=I.indexOf(t.key);-1===n&&(n=0);var r=I.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(R=!0,L(o))}(e)}))}}var U=m(M()),I=[U.key];function F(e){return p+S(e)}function L(e){n.go(e)}var A=0;function D(e){1===(A+=e)&&1===e?(window.addEventListener(O,g),o&&window.addEventListener(N,k)):0===A&&(window.removeEventListener(O,g),o&&window.removeEventListener(N,k))}var j=!1;var $={length:n.length,action:"POP",location:U,createHref:F,push:function(e,t){var o=T(e,t,h(),$.location);y.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=F(o),l=o.key,i=o.state;if(r)if(n.pushState({key:l,state:i},null,t),a)window.location.href=t;else{var u=I.indexOf($.location.key),c=I.slice(0,u+1);c.push(o.key),I=c,v({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=T(e,t,h(),$.location);y.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=F(o),l=o.key,i=o.state;if(r)if(n.replaceState({key:l,state:i},null,t),a)window.location.replace(t);else{var u=I.indexOf($.location.key);-1!==u&&(I[u]=o.key),v({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=y.setPrompt(e);return j||(D(1),j=!0),function(){return j&&(j=!1,D(-1)),t()}},listen:function(e){var t=y.appendListener(e);return D(1),function(){D(-1),t()}}};return $}var z="hashchange",U={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+k(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:k,decodePath:w},slash:{encodePath:w,decodePath:w}};function I(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function F(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function L(e){window.location.replace(I(window.location.href)+"#"+e)}function A(e){void 0===e&&(e={}),P||b(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?_:r,l=n.hashType,i=void 0===l?"slash":l,a=e.basename?x(w(e.basename)):"",u=U[i],c=u.encodePath,f=u.decodePath;function d(){var e=f(F());return a&&(e=E(e,a)),T(e)}var p=C();function m(e){s(j,e),j.length=t.length,p.notifyListeners(j.location,j.action)}var h=!1,y=null;function v(){var e,t,n=F(),r=c(n);if(n!==r)L(r);else{var l=d(),i=j.location;if(!h&&(t=l,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(y===S(l))return;y=null,function(e){if(h)h=!1,m();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?m({action:"POP",location:e}):function(e){var t=j.location,n=N.lastIndexOf(S(t));-1===n&&(n=0);var r=N.lastIndexOf(S(e));-1===r&&(r=0);var o=n-r;o&&(h=!0,M(o))}(e)}))}}(l)}}var g=F(),k=c(g);g!==k&&L(k);var O=d(),N=[S(O)];function M(e){t.go(e)}var R=0;function A(e){1===(R+=e)&&1===e?window.addEventListener(z,v):0===R&&window.removeEventListener(z,v)}var D=!1;var j={length:t.length,action:"POP",location:O,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=I(window.location.href)),n+"#"+c(a+S(e))},push:function(e,t){var n=T(e,void 0,void 0,j.location);p.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=S(n),r=c(a+t);if(F()!==r){y=t,function(e){window.location.hash=e}(r);var o=N.lastIndexOf(S(j.location)),l=N.slice(0,o+1);l.push(t),N=l,m({action:"PUSH",location:n})}else m()}}))},replace:function(e,t){var n=T(e,void 0,void 0,j.location);p.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=S(n),r=c(a+t);F()!==r&&(y=t,L(r));var o=N.indexOf(S(j.location));-1!==o&&(N[o]=t),m({action:"REPLACE",location:n})}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return D||(A(1),D=!0),function(){return D&&(D=!1,A(-1)),t()}},listen:function(e){var t=p.appendListener(e);return A(1),function(){A(-1),t()}}};return j}function D(e,t,n){return Math.min(Math.max(e,t),n)}var j=n(3),$=n.n(j),W=n(8),V=n.n(W),B=1073741823;var H=o.a.createContext||function(e,t){var n,o,l="__create-react-context-"+V()()+"__",i=function(e){function n(){var t,n,r;return(t=e.apply(this,arguments)||this).emitter=(n=t.props.value,r=[],{on:function(e){r.push(e)},off:function(e){r=r.filter((function(t){return t!==e}))},get:function(){return n},set:function(e,t){n=e,r.forEach((function(e){return e(n,t)}))}}),t}$()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[l]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((l=r)===(i=o)?0!==l||1/l==1/i:l!=l&&i!=i)?n=0:(n="function"==typeof t?t(r,o):B,0!==(n|=0)&&this.emitter.set(e.value,n))}var l,i},r.render=function(){return this.props.children},n}(r.Component);i.childContextTypes=((n={})[l]=c.a.object.isRequired,n);var a=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}$()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?B:t},r.componentDidMount=function(){this.context[l]&&this.context[l].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?B:e},r.componentWillUnmount=function(){this.context[l]&&this.context[l].off(this.onUpdate)},r.getValue=function(){return this.context[l]?this.context[l].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return a.contextTypes=((o={})[l]=c.a.object,o),{Provider:i,Consumer:a}},Q=n(4),K=n.n(Q);n(6);function q(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(9);var Y=function(e){var t=H();return t.displayName=e,t}("Router"),X=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(Y.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;var G=function(e){function t(){return e.apply(this,arguments)||this}a(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.a.Component);var J={},Z=1e4,ee=0;function te(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(J[e])return J[e];var t=K.a.compile(e);return ee<Z&&(J[e]=t,ee++),t}(e)(t,{pretty:!0})}function ne(e){var t=e.computedMatch,n=e.to,r=e.push,l=void 0!==r&&r;return o.a.createElement(Y.Consumer,null,(function(e){e||b(!1);var r=e.history,i=e.staticContext,a=l?r.push:r.replace,u=T(t?"string"==typeof n?te(n,t.params):s({},n,{pathname:te(n.pathname,t.params)}):n);return i?(a(u),null):o.a.createElement(G,{onMount:function(){a(u)},onUpdate:function(e,t){var n,r,o=T(t.to);n=o,r=s({},u,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&y(n.state,r.state)||a(u)},to:n})}))}var re={},oe=1e4,le=0;function ie(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,l=void 0!==o&&o,i=n.strict,a=void 0!==i&&i,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=re[n]||(re[n]={});if(r[e])return r[e];var o=[],l={regexp:K()(e,o,t),keys:o};return le<oe&&(r[e]=l,le++),l}(n,{end:l,strict:a,sensitive:c}),o=r.regexp,i=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return l&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var ae=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(Y.Consumer,null,(function(t){t||b(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ie(n.pathname,e.props):t.match}),l=e.props,i=l.children,a=l.component,u=l.render;return Array.isArray(i)&&0===i.length&&(i=null),o.a.createElement(Y.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:a?o.a.createElement(a,r):u?u(r):null:"function"==typeof i?i(r):null)}))},t}(o.a.Component);function ue(e){return"/"===e.charAt(0)?e:"/"+e}function ce(e,t){if(!e)return t;var n=ue(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function se(e){return"string"==typeof e?e:S(e)}function fe(e){return function(){b(!1)}}function de(){}o.a.Component;var pe=function(e){function t(){return e.apply(this,arguments)||this}return a(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(Y.Consumer,null,(function(t){t||b(!1);var n,r,l=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?ie(l.pathname,s({},e.props,{path:i})):t.match}})),r?o.a.cloneElement(n,{location:l,computedMatch:r}):null}))},t}(o.a.Component);o.a.useContext;var me=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return a(t,e),t.prototype.render=function(){return o.a.createElement(X,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var he=function(e,t){return"function"==typeof e?e(t):e},ye=function(e,t){return"string"==typeof e?T(e,null,null,t):e},ve=function(e){return e},ge=o.a.forwardRef;void 0===ge&&(ge=ve);var be=ge((function(e,t){var n=e.innerRef,r=e.navigate,l=e.onClick,i=q(e,["innerRef","navigate","onClick"]),a=i.target,u=s({},i,{onClick:function(e){try{l&&l(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||a&&"_self"!==a||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=ve!==ge&&t||n,o.a.createElement("a",u)}));var we=ge((function(e,t){var n=e.component,r=void 0===n?be:n,l=e.replace,i=e.to,a=e.innerRef,u=q(e,["component","replace","to","innerRef"]);return o.a.createElement(Y.Consumer,null,(function(e){e||b(!1);var n=e.history,c=ye(he(i,e.location),e.location),f=c?n.createHref(c):"",d=s({},u,{href:f,navigate:function(){var t=he(i,e.location);(l?n.replace:n.push)(t)}});return ve!==ge?d.ref=t||a:d.innerRef=a,o.a.createElement(r,d)}))})),ke=function(e){return e},Ee=o.a.forwardRef;void 0===Ee&&(Ee=ke);Ee((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,l=e.activeClassName,i=void 0===l?"active":l,a=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,d=e.location,p=e.strict,m=e.style,h=e.to,y=e.innerRef,v=q(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(Y.Consumer,null,(function(e){e||b(!1);var n=d||e.location,l=ye(he(h,n),n),g=l.pathname,w=g&&g.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?ie(n.pathname,{path:w,exact:c,strict:p}):null,E=!!(f?f(k,n):k),x=E?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,i):u,S=E?s({},m,{},a):m,T=s({"aria-current":E&&r||null,className:x,style:S,to:l},v);return ke!==Ee?T.ref=t||y:T.innerRef=y,o.a.createElement(we,T)}))}));function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Se(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Te(e,t){return!t||"object"!==xe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ce(e){return(Ce=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Pe(e,t){return(Pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _e={opening:{screen:{position:"fixed",display:"flex",width:"100vw",height:"100vh",justifyContent:"center",alignItems:"center"},name:{background:'url("./resource/colorful.jpg") repeat',backgroundPosition:"center",backgroundSize:"cover",textAlign:"center",backgroundClip:"text",WebkitBackgroundClip:"text",WebkitTextFillColor:"transparent",font:'900 0.5vw "Open Sans", sans-serif',whiteSpace:"nowrap",cursor:"default"},button:{position:"absolute",bottom:"15%",left:"50%",transform:"translateX(-50%)",fontSize:"50px",display:"none",cursor:"pointer",fontWeight:"900",color:"white",textShadow:"2px 2px 6px #000",transitionDuration:"1s"},ask:{position:"absolute",bottom:"10%",left:"5%",transform:"translateX(-10%)"},control:{position:"absolute",bottom:"5%",left:"5%",content:'url("./resource/forward_button.png")',height:"30px",width:"50px",cursor:"pointer"}}}.opening,Oe=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Te(this,Ce(t).call(this,e))).state={jump:"",hold:!1},n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pe(e,t)}(t,e),n=t,(r=[{key:"mouseDrag",value:function(e){if(this.state.hold){var t=document.querySelector(".control"),n=document.querySelector(".name"),r=e.clientX/window.outerWidth*100,o=12*r*.01,l=document.querySelector(".go"),i=document.querySelector(".ask");r>=5&&r<=90&&(t.style.left=r+"%",n.style.fontSize=o+"vw",i.style.left=r+"%"),l.style.display=r>=90?"block":"none"}}},{key:"mouseDown",value:function(e){document.querySelector(".ask").style.display="none",this.setState({hold:!0})}},{key:"mouseUp",value:function(e){document.querySelector(".ask").style.display="block",this.setState({hold:!1})}},{key:"next",value:function(e){this.setState({jump:"/main"})}},{key:"render",value:function(){var e=this;return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",{style:_e.screen,onMouseMove:function(t){return e.mouseDrag(t)},onMouseUp:function(t){return e.mouseUp(t)},onMouseLeave:function(t){return e.mouseUp(t)}},o.a.createElement("h1",{class:"name",style:_e.name},"PARK SANG UN"),o.a.createElement("p",{class:"go",style:_e.button,onMouseOver:function(e){return e.target.style.color="black"},onMouseOut:function(e){return e.target.style.color="white"},onClick:function(t){return e.next(t)}},"Let's find out"),o.a.createElement("p",{class:"ask",style:_e.ask},"Drag me!"),o.a.createElement("img",{class:"control",style:_e.control,onMouseDown:function(t){return e.mouseDown(t)}}))}}])&&Se(n.prototype,r),l&&Se(n,l),t}(r.Component);i.a.render(o.a.createElement((function(){return o.a.createElement(me,null,o.a.createElement("div",null,o.a.createElement(pe,null,o.a.createElement(ae,{path:"/opening",component:Oe}),o.a.createElement(ae,{component:Oe}))))}),null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ndWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9lc20vdmFsdWUtZXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JvdXRlckNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9MaWZlY3ljbGUuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL2hvb2tzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy91dGlscy9sb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0xpbmsuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvTmF2TGluay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvb3BlbmluZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJlcXVpcmUiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJzdHIiLCJvcHRpb25zIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJSZWdFeHAiLCJqb2luIiwicmVzIiwidG9rZW5zIiwiaW5kZXgiLCJwYXRoIiwiZGVmYXVsdERlbGltaXRlciIsImRlbGltaXRlciIsImV4ZWMiLCJlc2NhcGVkIiwib2Zmc2V0Iiwic2xpY2UiLCJsZW5ndGgiLCJuZXh0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInB1c2giLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJyZXBsYWNlIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJzb3VyY2UiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiYXJndW1lbnRzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJwcm9jZXNzIiwiY29uc29sZSIsImVycm9yIiwiZ2xvYmFsIiwiUmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsImUiLCJoIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsImFhIiwiQSIsIml0ZXJhdG9yIiwiQiIsImEiLCJiIiwiQyIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJEIiwiRSIsInRoaXMiLCJwcm9wcyIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiRXJyb3IiLCJmb3JjZVVwZGF0ZSIsIkgiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkkiLCJjdXJyZW50IiwiSiIsIksiLCJMIiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiZyIsImYiLCJjaGlsZHJlbiIsImsiLCIkJHR5cGVvZiIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJwb3AiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJSIiwiVSIsIlMiLCJUIiwiaXNBcnJheSIsImRvbmUiLCJlc2NhcGUiLCJjYSIsImRhIiwiViIsImJhIiwiVyIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJZIiwiZGVmYXVsdCIsIloiLCJpbmRleE9mIiwiZWEiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsImZhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJoYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJpYSIsImphIiwiZGVwZW5kZW5jaWVzIiwia2EiLCJhcHBseSIsIm9uRXJyb3IiLCJsYSIsIm1hIiwibmEiLCJvYSIsInBhIiwicWEiLCJzYSIsInVhIiwidmEiLCJ3YSIsImN1cnJlbnRUYXJnZXQiLCJyYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJSYSIsIlNhIiwiVGEiLCJVYSIsIldhIiwiWGEiLCJ0YWciLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsIllhIiwid2luZG93IiwiZG9jdW1lbnQiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsIk1hcCIsImxiIiwibWIiLCJuYiIsIm9iIiwicmIiLCJhY2NlcHRzQm9vbGVhbnMiLCJ0b0xvd2VyQ2FzZSIsInFiIiwiaXNOYU4iLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJzYiIsInRiIiwidWIiLCJ2YiIsInBiIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ3YiIsIm5vZGVOYW1lIiwieWIiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInhiIiwiemIiLCJjaGVja2VkIiwiQWIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkJiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkNiIiwiRWIiLCJGYiIsIkdiIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJJYiIsIkhiIiwiSmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIktiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJMYiIsIk1iIiwiTmIiLCJ0ZXh0Q29udGVudCIsInhsaW5rSHJlZiIsIk9iIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsIlBiIiwiUWIiLCJSYiIsIlNiIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIlRiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJVYiIsIlZiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiV2IiLCJYYiIsIlliIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJkYyIsImVjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZmMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImdjIiwiaWMiLCJjaGlsZCIsInNpYmxpbmciLCJoYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJvYyIsInBjIiwicWMiLCJyYyIsInNjIiwidGMiLCJ1YyIsInZjIiwiemMiLCJibG9ja2VkT24iLCJ0b3BMZXZlbFR5cGUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJBYyIsInBvaW50ZXJJZCIsIkJjIiwiQ2MiLCJFYyIsIkZjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwic2hpZnQiLCJLYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkxjIiwiTWMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwiTmMiLCJPYyIsImRpc3BhdGNoQ29uZmlnIiwiUGMiLCJfdGFyZ2V0SW5zdCIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJXYyIsImV2ZW50UG9vbCIsIlhjIiwiZGVzdHJ1Y3RvciIsIlZjIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIlljIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIlpjIiwiY2xpcGJvYXJkRGF0YSIsIiRjIiwidmlldyIsImRldGFpbCIsImFkIiwicmVsYXRlZFRhcmdldCIsImJkIiwia2V5Q29kZSIsImNoYXJDb2RlIiwiY2QiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiZWQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwiZmQiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiZ2QiLCJnZXRNb2RpZmllclN0YXRlIiwiaGQiLCJpZCIsImxvY2F0aW9uIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImxvY2FsZSIsIndoaWNoIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiYnV0dG9uIiwiYnV0dG9ucyIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwib2QiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJwZCIsImRhdGFUcmFuc2ZlciIsInFkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInJkIiwic2QiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInRkIiwidWQiLCJ2ZCIsInhkIiwieWQiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsIkVkIiwiZ2V0RXZlbnRQcmlvcml0eSIsIkZkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJHZCIsIkhkIiwiSWQiLCJKZCIsIktkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJhZGRFdmVudExpc3RlbmVyIiwiUWQiLCJEYyIsIlJkIiwiU2QiLCJXZWFrTWFwIiwieGMiLCJTZXQiLCJ5YyIsImhhcyIsImFkZCIsIlRkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJVZCIsIlZkIiwidHJpbSIsIldkIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJYZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIllkIiwiWmQiLCJpcyIsIiRkIiwiYWUiLCJiZSIsImJvZHkiLCJjZSIsImRlIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiZmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiZ2UiLCJjb250ZW50RWRpdGFibGUiLCJoZSIsImllIiwiamUiLCJrZSIsImxlIiwibWUiLCJuZSIsImF1dG9Gb2N1cyIsIm9lIiwiX19odG1sIiwicGUiLCJzZXRUaW1lb3V0IiwicWUiLCJjbGVhclRpbWVvdXQiLCJzZSIsInByZXZpb3VzU2libGluZyIsInRlIiwiTWF0aCIsInJhbmRvbSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIkFlIiwiQmUiLCJDZSIsIkRlIiwiRWUiLCJGZSIsIkdlIiwiSGUiLCJkb2N1bWVudE1vZGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJNZSIsIk5lIiwiT2UiLCJQZSIsIlNlIiwiUWUiLCJSZSIsIlRlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlVlIiwiVmUiLCJjaGFuZ2UiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGV0YWNoRXZlbnQiLCJkZiIsImVmIiwiYXR0YWNoRXZlbnQiLCJmZiIsImdmIiwiaGYiLCJsZiIsImpmIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsImtmIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJtZiIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93Iiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsInNlbGVjdCIsInRmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwieWYiLCJvblNlbGVjdCIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIk9mIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJQZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlFmIiwidW5zdGFibGVfbm93IiwiUmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlNmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJUZiIsIlVmIiwiVmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIldmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsInRnIiwidWciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwidmciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsIndnIiwieGciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwieWciLCJ6ZyIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdEVmZmVjdCIsImxhc3RFZmZlY3QiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiQWciLCJCZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsImNhbGxiYWNrIiwibmV4dEVmZmVjdCIsIkNnIiwiRGciLCJ1cGRhdGVRdWV1ZSIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJTZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJQZyIsIlFnIiwiUmciLCJUZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIlVnIiwic3RhdGUiLCJWZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIldnIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJYZyIsIllnIiwiX3N0cmluZ1JlZiIsIlpnIiwiJGciLCJhaCIsImJoIiwiZWxlbWVudFR5cGUiLCJjaCIsImltcGxlbWVudGF0aW9uIiwiZGgiLCJlaCIsInRhIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsImtoIiwibGgiLCJtaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJuaCIsIm9oIiwicGgiLCJxaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsInJoIiwicmVzcG9uZGVyIiwic2giLCJ0aCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJxdWV1ZSIsImJhc2VVcGRhdGUiLCJPaCIsIlBoIiwiUWgiLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJsYXN0IiwibGFzdFJlbmRlcmVkU3RhdGUiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJkZXN0cm95IiwiZGVwcyIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidW5zdGFibGVfbmV4dCIsImNpIiwiZGkiLCJlaSIsImZpIiwiZ2kiLCJoaSIsInBlbmRpbmdQcm9wcyIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwidmkiLCJ3aSIsInBlbmRpbmdDb250ZXh0IiwiSGkiLCJJaSIsIkppIiwiS2kiLCJ4aSIsInJldHJ5VGltZSIsInlpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInppIiwiQWkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInRhaWwiLCJ0YWlsRXhwaXJhdGlvbiIsInRhaWxNb2RlIiwiQmkiLCJDaSIsIkxpIiwiTWkiLCJOaSIsInN0YWNrIiwib25DbGljayIsIm9uY2xpY2siLCJPaSIsIldlYWtTZXQiLCJQaSIsIlNpIiwiUmkiLCJUaSIsIlVpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaSIsIldpIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJRaSIsIlhpIiwiWWkiLCJaaSIsIiRpIiwiaW5zdGFuY2UiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiYWoiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwiYmoiLCJkaXNwbGF5IiwiY2oiLCJkaiIsInRoZW4iLCJlaiIsImZqIiwiZWxlbWVudCIsImdqIiwiaGoiLCJpaiIsImNvbXBvbmVudERpZENhdGNoIiwiamoiLCJjb21wb25lbnRTdGFjayIsImdrIiwia2oiLCJjZWlsIiwibGoiLCJtaiIsIm5qIiwib2oiLCJwaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJ0aW1lb3V0TXMiLCJLaiIsIkxqIiwiTWoiLCJOaiIsIk9qIiwibGFzdEV4cGlyZWRUaW1lIiwiUGoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIlFqIiwidGltZW91dCIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkRXhwaXJhdGlvblRpbWUiLCJsYXN0U3VzcGVuZGVkVGltZSIsIlhqIiwidGltZW91dEhhbmRsZSIsIllqIiwiYnVzeU1pbkR1cmF0aW9uTXMiLCJidXN5RGVsYXlNcyIsIlpqIiwiYmsiLCJjayIsInBpbmdDYWNoZSIsImRrIiwiZWsiLCJmayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImlrIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIkRiIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImprIiwiZWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIkRoIiwiY2MiLCJkZCIsImhrIiwiRWgiLCJGaCIsInhrIiwiRGkiLCJFaSIsIkZpIiwid2QiLCJHaSIsImtrIiwibGsiLCJtayIsImhpZGRlbiIsIlZhIiwibmsiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJwayIsInBlbmRpbmdDaGlsZHJlbiIsInFrIiwicmsiLCJzayIsInRrIiwidWsiLCJ3ayIsIndjIiwiX2ludGVybmFsUm9vdCIsInlrIiwiQWsiLCJoYXNBdHRyaWJ1dGUiLCJ6ayIsIkJrIiwidmsiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsInVubW91bnQiLCJhayIsIkNrIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsImZsdXNoU3luYyIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvayIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiRGsiLCJFayIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJwcmlvcml0eUxldmVsIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIkZ1bmN0aW9uIiwiYXJyIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiTGF6eSIsIk1lbW8iLCJQb3J0YWwiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJfaW5oZXJpdHNMb29zZSIsIl9leHRlbmRzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwibGlzdCIsInJlc29sdmVQYXRobmFtZSIsInVuZGVmaW5lZCIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiaXRlbSIsImFWYWx1ZSIsImJWYWx1ZSIsImlzUHJvZHVjdGlvbiIsImludmFyaWFudCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsImZpbHRlciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiUmVhY3QiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiZ3VkIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiaGFuZGxlcnMiLCJlbWl0dGVyIiwib24iLCJoYW5kbGVyIiwib2ZmIiwibmV3VmFsdWUiLCJjaGFuZ2VkQml0cyIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsImNyZWF0ZU5hbWVkQ29udGV4dCIsIlJvdXRlciIsImNvbXB1dGVSb290TWF0Y2giLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3BlbmRpbmdMb2NhdGlvbiIsIlJvdXRlckNvbnRleHQiLCJzdGF0aWNDb250ZXh0IiwiTGlmZWN5Y2xlIiwib25Nb3VudCIsInByZXZQcm9wcyIsIm9uVW5tb3VudCIsImNhY2hlIiwiY2FjaGVMaW1pdCIsImNhY2hlQ291bnQiLCJnZW5lcmF0ZVBhdGgiLCJnZW5lcmF0b3IiLCJjb21waWxlUGF0aCIsIlJlZGlyZWN0IiwiY29tcHV0ZWRNYXRjaCIsIm1ldGhvZCIsIm1hdGNoUGF0aCIsIm1hdGNoZWQiLCJjYWNoZUtleSIsInBhdGhDYWNoZSIsInJlZ2V4cCIsInZhbHVlcyIsIlJvdXRlIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiU3dpdGNoIiwiQnJvd3NlclJvdXRlciIsImNyZWF0ZUhpc3RvcnkiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkxpbmtBbmNob3IiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiZm9yd2FyZGVkUmVmIiwiTGluayIsImFyaWFDdXJyZW50IiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJvcGVuaW5nIiwic2NyZWVuIiwicG9zaXRpb24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJiYWNrZ3JvdW5kIiwiYmFja2dyb3VuZFBvc2l0aW9uIiwiYmFja2dyb3VuZFNpemUiLCJ0ZXh0QWxpZ24iLCJiYWNrZ3JvdW5kQ2xpcCIsIldlYmtpdEJhY2tncm91bmRDbGlwIiwiV2Via2l0VGV4dEZpbGxDb2xvciIsImZvbnQiLCJ3aGl0ZVNwYWNlIiwiY3Vyc29yIiwiYm90dG9tIiwidHJhbnNmb3JtIiwiZm9udFNpemUiLCJ0ZXh0U2hhZG93IiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiYXNrIiwiY29udHJvbCIsImNvbnRlbnQiLCJPcGVuaW5nIiwianVtcCIsImhvbGQiLCJpbWdfdyIsIm91dGVyV2lkdGgiLCJuYW1lX3MiLCJvbk1vdXNlTW92ZSIsIm1vdXNlRHJhZyIsIm9uTW91c2VVcCIsIm1vdXNlVXAiLCJvbk1vdXNlTGVhdmUiLCJjbGFzcyIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9uTW91c2VEb3duIiwibW91c2VEb3duIiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFB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QUFNLFNBQ3ZDdzBCLFdBQVksU0FBQS8rQyxHQUFDLE9BQUlBLEVBQUVoRCxPQUFPb1YsTUFBTW1ZLE1BQVEsU0FDeEMwVCxRQUFTLFNBQUFqK0IsR0FBQyxPQUFJLEVBQUtySCxLQUFLcUgsS0FIMUIsa0JBSUEsdUJBQUc2K0MsTUFBTSxNQUFNenNDLE1BQU9BLEdBQU0yckMsS0FBNUIsWUFDQSx5QkFBS2MsTUFBTSxVQUFVenNDLE1BQU9BLEdBQU00ckMsUUFDaENnQixZQUFhLFNBQUFoL0MsR0FBQyxPQUFJLEVBQUtpL0MsVUFBVWovQyxZLGdDQXpETjRFLGFFVXJDczZDLElBQVMvL0MsT0FDUCxtQkFaYSxrQkFDYixrQkFBQyxHQUFELEtBQ0UsNkJBQ0Usa0JBQUMsR0FBRCxLQUNFLGtCQUFDLEdBQUQsQ0FBT2hILEtBQUssV0FBVzZHLFVBQVdrL0MsS0FDbEMsa0JBQUMsR0FBRCxDQUFPbC9DLFVBQVdrL0MsVUFPeEIsTUFDQXR5QyxTQUFTdXpDLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBAZmxvd1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGdsb2JhbFtrZXldID0gKGdsb2JhbFtrZXldIHx8IDApICsgMTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gICAgbWl4aW5zOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgICBuYW1lOiB0cnVlLFxuICAgIGxlbmd0aDogdHJ1ZSxcbiAgICBwcm90b3R5cGU6IHRydWUsXG4gICAgY2FsbGVyOiB0cnVlLFxuICAgIGNhbGxlZTogdHJ1ZSxcbiAgICBhcmd1bWVudHM6IHRydWUsXG4gICAgYXJpdHk6IHRydWVcbn07XG5cbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAgICckJHR5cGVvZic6IHRydWUsXG4gICAgcmVuZGVyOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWVcbn07XG5cbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgICBjb21wYXJlOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW1JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAgIGlmIChSZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gICAgfVxuICAgIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTEuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGg9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTM7biYmU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7XG52YXIgej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGFhPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7biYmU3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpO24mJlN5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik7biYmU3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpO3ZhciBBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIEIoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWN8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWN8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7aChILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPXtjdXJyZW50Om51bGx9LEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGw9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYobD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGs9QXJyYXkoZiksbT0wO208ZjttKyspa1ttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWt9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6bCxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gYmEoYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE4oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTz0vXFwvKy9nLFA9W107ZnVuY3Rpb24gUShhLGIsYyxlKXtpZihQLmxlbmd0aCl7dmFyIGQ9UC5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XG5mdW5jdGlvbiBTKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitUKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBsPTA7bDxhLmxlbmd0aDtsKyspe2Q9YVtsXTt2YXIgZj1iK1QoZCxsKTtnKz1TKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QSYmYVtBXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxsPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVChkLGwrKyksZys9UyhkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEIoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGNhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGRhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1YoYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9YmEoYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBWKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsZSxkKTtVKGEsZGEsYik7UihiKX1mdW5jdGlvbiBXKCl7dmFyIGE9SS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEIoMzIxKSk7cmV0dXJuIGF9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtWKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGMpO1UoYSxjYSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVShhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1YoYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTihhKSl0aHJvdyBFcnJvcihCKDE0MykpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpFLFB1cmVDb21wb25lbnQ6RyxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6YWEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19LG1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsYyl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGMpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsUHJvZmlsZXI6dSxTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eSxjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihCKDI2NyxhKSk7dmFyIGU9aCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsbD1hLl9vd25lcjtcbmlmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixsPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihrIGluIGIpSy5jYWxsKGIsaykmJiFMLmhhc093blByb3BlcnR5KGspJiYoZVtrXT12b2lkIDA9PT1iW2tdJiZ2b2lkIDAhPT1mP2Zba106YltrXSl9dmFyIGs9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1rKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8ayl7Zj1BcnJheShrKTtmb3IodmFyIG09MDttPGs7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmx9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi4xMS4wXCIsXG5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpJLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246aH19LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTEuMFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO3ZhciBiYT1udWxsLGNhPXt9O1xuZnVuY3Rpb24gZGEoKXtpZihiYSlmb3IodmFyIGEgaW4gY2Epe3ZhciBiPWNhW2FdLGM9YmEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFlYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtlYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKGZhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO2ZhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJmhhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhoYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gaGEoYSxiLGMpe2lmKGlhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTtpYVthXT1iO2phW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIGVhPVtdLGZhPXt9LGlhPXt9LGphPXt9O2Z1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBsYT0hMSxtYT1udWxsLG5hPSExLG9hPW51bGwscGE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7bGE9ITA7bWE9YX19O2Z1bmN0aW9uIHFhKGEsYixjLGQsZSxmLGcsaCxrKXtsYT0hMTttYT1udWxsO2thLmFwcGx5KHBhLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiByYShhLGIsYyxkLGUsZixnLGgsayl7cWEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGxhKXtpZihsYSl7dmFyIGw9bWE7bGE9ITE7bWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7bmF8fChuYT0hMCxvYT1sKX19dmFyIHNhPW51bGwsdWE9bnVsbCx2YT1udWxsO2Z1bmN0aW9uIHdhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD12YShjKTtyYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHhhKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBCYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSl7eWEoYSxBYSk7aWYoemEpdGhyb3cgRXJyb3IodSg5NSkpO2lmKG5hKXRocm93IGE9b2EsbmE9ITEsb2E9bnVsbCxhO319XG52YXIgQ2E9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7aWYoYmEpdGhyb3cgRXJyb3IodSgxMDEpKTtiYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtkYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIWNhLmhhc093blByb3BlcnR5KGMpfHxjYVtjXSE9PWQpe2lmKGNhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtjYVtjXT1kO2I9ITB9fWImJmRhKCl9fTtcbmZ1bmN0aW9uIERhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9c2EoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsYix0eXBlb2YgYykpO1xucmV0dXJuIGN9dmFyIEVhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO0VhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KEVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO0VhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChFYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xudmFyIEZhPS9eKC4qKVtcXFxcXFwvXS8sdz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLEdhPXc/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsSGE9dz9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LElhPXc/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LEphPXc/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LEthPXc/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LExhPXc/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LE1hPXc/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsTmE9dz9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLE9hPXc/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLFBhPXc/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLFFhPXc/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxSYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LFNhPXc/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7dyYmU3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpO3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik7dyYmU3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpO3ZhciBUYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gVWEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPVRhJiZhW1RhXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gVmEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBXYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIElhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIEhhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBLYTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBKYTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIFBhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIFFhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIE1hOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgTGE6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBPYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgUmE6cmV0dXJuIFdhKGEudHlwZSk7Y2FzZSBTYTppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIFdhKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIFhhKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1XYShhLnR5cGUpO2M9bnVsbDtkJiYoYz1XYShkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKEZhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIgWWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLFphPW51bGwsJGE9bnVsbCxhYj1udWxsO2Z1bmN0aW9uIGJiKGEpe2lmKGE9dWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBaYSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPXNhKGEuc3RhdGVOb2RlKTtaYShhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIGNiKGEpeyRhP2FiP2FiLnB1c2goYSk6YWI9W2FdOiRhPWF9ZnVuY3Rpb24gZGIoKXtpZigkYSl7dmFyIGE9JGEsYj1hYjthYj0kYT1udWxsO2JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYihiW2FdKX19ZnVuY3Rpb24gZWIoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBmYihhLGIsYyxkKXtyZXR1cm4gYShiLGMsZCl9ZnVuY3Rpb24gZ2IoKXt9XG52YXIgaGI9ZWIsaWI9ITEsamI9ITE7ZnVuY3Rpb24ga2IoKXtpZihudWxsIT09JGF8fG51bGwhPT1hYilnYigpLGRiKCl9bmV3IE1hcDt2YXIgbGI9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLG1iPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbmI9e30sb2I9e307XG5mdW5jdGlvbiBwYihhKXtpZihtYi5jYWxsKG9iLGEpKXJldHVybiEwO2lmKG1iLmNhbGwobmIsYSkpcmV0dXJuITE7aWYobGIudGVzdChhKSlyZXR1cm4gb2JbYV09ITA7bmJbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcWIoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiByYihhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxxYihhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBzYj0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHRiKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHNiLFxudGIpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShzYix0Yik7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShzYix0Yik7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO2Z1bmN0aW9uIHViKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIHZiKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHJiKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9wYihiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gd2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHhiKGEpe3ZhciBiPXdiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB5YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9eGIoYSkpfWZ1bmN0aW9uIHpiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD13YihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEJiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXViKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQ2IoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ2YihhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gRWIoYSxiKXtDYihhLGIpO3ZhciBjPXViKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0ZiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkZiKGEsYi50eXBlLHViKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gR2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEhiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEliKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9SGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3ViKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBLYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIExiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuZGVmYXVsdFZhbHVlO2I9Yi5jaGlsZHJlbjtpZihudWxsIT1iKXtpZihudWxsIT1jKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGIpKXtpZighKDE+PWIubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yj1iWzBdfWM9Yn1udWxsPT1jJiYoYz1cIlwiKX1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp1YihjKX19XG5mdW5jdGlvbiBNYihhLGIpe3ZhciBjPXViKGIudmFsdWUpLGQ9dWIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBOYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBPYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBQYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIFFiKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9QYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBSYixTYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1PYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtSYj1SYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtSYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1SYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBUYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFViKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFZiPXthbmltYXRpb25lbmQ6VWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpVYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpVYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFdiPXt9LFhiPXt9O1xuWWEmJihYYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBWYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBWYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBWYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBWYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFliKGEpe2lmKFdiW2FdKXJldHVybiBXYlthXTtpZighVmJbYV0pcmV0dXJuIGE7dmFyIGI9VmJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWGIpcmV0dXJuIFdiW2FdPWJbY107cmV0dXJuIGF9dmFyIFpiPVliKFwiYW5pbWF0aW9uZW5kXCIpLCRiPVliKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGFjPVliKFwiYW5pbWF0aW9uc3RhcnRcIiksYmM9WWIoXCJ0cmFuc2l0aW9uZW5kXCIpLGRjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGVjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZ2MoYSl7aWYoZWMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gaGMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZWMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZ2MoZSksYTtpZihmPT09ZClyZXR1cm4gZ2MoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBpYyhhKXthPWhjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIGpjLGtjLGxjLG1jPSExLG5jPVtdLG9jPW51bGwscGM9bnVsbCxxYz1udWxsLHJjPW5ldyBNYXAsc2M9bmV3IE1hcCx0Yz1bXSx1Yz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLHZjPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPXhjKGEpO3VjLmZvckVhY2goZnVuY3Rpb24oYyl7eWMoYyxhLGIpfSk7dmMuZm9yRWFjaChmdW5jdGlvbihjKXt5YyhjLGEsYil9KX1mdW5jdGlvbiB6YyhhLGIsYyxkKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmR9fWZ1bmN0aW9uIEFjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6b2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOnBjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOnFjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpyYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpzYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIEJjKGEsYixjLGQsZSl7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1lKXJldHVybiBhPXpjKGIsYyxkLGUpLG51bGwhPT1iJiYoYj1DYyhiKSxudWxsIT09YiYma2MoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfWZ1bmN0aW9uIERjKGEsYixjLGQpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gb2M9QmMob2MsYSxiLGMsZCksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBwYz1CYyhwYyxhLGIsYyxkKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIHFjPUJjKHFjLGEsYixjLGQpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBlPWQucG9pbnRlcklkO3JjLnNldChlLEJjKHJjLmdldChlKXx8bnVsbCxhLGIsYyxkKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGU9ZC5wb2ludGVySWQsc2Muc2V0KGUsQmMoc2MuZ2V0KGUpfHxudWxsLGEsYixjLGQpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIEVjKGEpe3ZhciBiPUZjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZWMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZmMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7cS51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2xjKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBHYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9SGMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1DYyhiKTtudWxsIT09YyYma2MoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIEljKGEsYixjKXtHYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gSmMoKXtmb3IobWM9ITE7MDxuYy5sZW5ndGg7KXt2YXIgYT1uY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2MoYS5ibG9ja2VkT24pO251bGwhPT1hJiZqYyhhKTticmVha312YXIgYj1IYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpuYy5zaGlmdCgpfW51bGwhPT1vYyYmR2Mob2MpJiYob2M9bnVsbCk7bnVsbCE9PXBjJiZHYyhwYykmJihwYz1udWxsKTtudWxsIT09cWMmJkdjKHFjKSYmKHFjPW51bGwpO3JjLmZvckVhY2goSWMpO3NjLmZvckVhY2goSWMpfWZ1bmN0aW9uIEtjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxtY3x8KG1jPSEwLHEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhxLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEpjKSkpfVxuZnVuY3Rpb24gTGMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gS2MoYixhKX1pZigwPG5jLmxlbmd0aCl7S2MobmNbMF0sYSk7Zm9yKHZhciBjPTE7YzxuYy5sZW5ndGg7YysrKXt2YXIgZD1uY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PW9jJiZLYyhvYyxhKTtudWxsIT09cGMmJktjKHBjLGEpO251bGwhPT1xYyYmS2MocWMsYSk7cmMuZm9yRWFjaChiKTtzYy5mb3JFYWNoKGIpO2ZvcihjPTA7Yzx0Yy5sZW5ndGg7YysrKWQ9dGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHRjLmxlbmd0aCYmKGM9dGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspRWMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZ0Yy5zaGlmdCgpfVxuZnVuY3Rpb24gTWMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIE5jKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gT2MoYSxiLGMpe2lmKGI9RGEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIFBjKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TmMoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU9jKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspT2MoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gUWMoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9RGEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBSYyhhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlFjKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFNjKGEpe3lhKGEsUGMpfWZ1bmN0aW9uIFRjKCl7cmV0dXJuITB9ZnVuY3Rpb24gVWMoKXtyZXR1cm4hMX1mdW5jdGlvbiBFKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9UYzpVYzt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPVVjO3JldHVybiB0aGlzfVxubihFLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPVRjKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPVRjKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PVRjfSxpc1BlcnNpc3RlbnQ6VWMsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9VWM7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtFLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkUuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7VmMoYyk7cmV0dXJuIGN9O1ZjKEUpO2Z1bmN0aW9uIFdjKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gWGMoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gVmMoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9V2M7YS5yZWxlYXNlPVhjfXZhciBZYz1FLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksWmM9RS5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSwkYz1FLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksYWQ9JGMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtcbmZ1bmN0aW9uIGJkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIGNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxlZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sZmQ9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIGdkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9ZmRbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBoZCgpe3JldHVybiBnZH1cbnZhciBpZD0kYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9Y2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9YmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2VkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpoZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/YmQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9iZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLGpkPTAsa2Q9MCxsZD0hMSxtZD0hMSxuZD0kYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6aGQsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9amQ7amQ9YS5zY3JlZW5YO3JldHVybiBsZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1cbmI6MDoobGQ9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7dmFyIGI9a2Q7a2Q9YS5zY3JlZW5ZO3JldHVybiBtZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KG1kPSEwLDApfX0pLG9kPW5kLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxwZD1uZC5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSkscWQ9JGMuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6aGR9KSxyZD1FLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsXG5lbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHNkPW5kLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYmx1clwiLFwiYmx1clwiLDBdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCIsMF0sW1wiY2xpY2tcIixcImNsaWNrXCIsMF0sW1wiY2xvc2VcIixcImNsb3NlXCIsMF0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCIsMF0sW1wiY29weVwiLFwiY29weVwiLDBdLFtcImN1dFwiLFwiY3V0XCIsMF0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCIsMF0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCIsMF0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiLFxuMF0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIiwwXSxbXCJkcm9wXCIsXCJkcm9wXCIsMF0sW1wiZm9jdXNcIixcImZvY3VzXCIsMF0sW1wiaW5wdXRcIixcImlucHV0XCIsMF0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiLDBdLFtcImtleWRvd25cIixcImtleURvd25cIiwwXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIiwwXSxbXCJrZXl1cFwiLFwia2V5VXBcIiwwXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiLDBdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIiwwXSxbXCJwYXN0ZVwiLFwicGFzdGVcIiwwXSxbXCJwYXVzZVwiLFwicGF1c2VcIiwwXSxbXCJwbGF5XCIsXCJwbGF5XCIsMF0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiLDBdLFtcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiLDBdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCIsMF0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiLDBdLFtcInJlc2V0XCIsXCJyZXNldFwiLDBdLFtcInNlZWtlZFwiLFwic2Vla2VkXCIsMF0sW1wic3VibWl0XCIsXCJzdWJtaXRcIiwwXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIixcbjBdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiLDBdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIiwwXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiLDBdLFtcImRyYWdcIixcImRyYWdcIiwxXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiLDFdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiLDFdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCIsMV0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCIsMV0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIiwxXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIiwxXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiLDFdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiLDFdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIiwxXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIiwxXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiLDFdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCIsMV0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIiwxXSxbXCJ3aGVlbFwiLFwid2hlZWxcIiwxXSxbXCJhYm9ydFwiLFwiYWJvcnRcIixcbjJdLFtaYixcImFuaW1hdGlvbkVuZFwiLDJdLFskYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLDJdLFthYyxcImFuaW1hdGlvblN0YXJ0XCIsMl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiLDJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLDJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLDJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIiwyXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLDJdLFtcImVuZGVkXCIsXCJlbmRlZFwiLDJdLFtcImVycm9yXCIsXCJlcnJvclwiLDJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLDJdLFtcImxvYWRcIixcImxvYWRcIiwyXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsMl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsMl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIiwyXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLDJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIiwyXSxbXCJwcm9ncmVzc1wiLFxuXCJwcm9ncmVzc1wiLDJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIiwyXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsMl0sW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiLDJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwyXSxbYmMsXCJ0cmFuc2l0aW9uRW5kXCIsMl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiLDJdXSx1ZD17fSx2ZD17fSx4ZD0wO2Zvcig7eGQ8dGQubGVuZ3RoO3hkKyspe3ZhciB5ZD10ZFt4ZF0semQ9eWRbMF0sQWQ9eWRbMV0sQmQ9eWRbMl0sQ2Q9XCJvblwiKyhBZFswXS50b1VwcGVyQ2FzZSgpK0FkLnNsaWNlKDEpKSxEZD17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6Q2QsY2FwdHVyZWQ6Q2QrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbemRdLGV2ZW50UHJpb3JpdHk6QmR9O3VkW0FkXT1EZDt2ZFt6ZF09RGR9XG52YXIgRWQ9e2V2ZW50VHlwZXM6dWQsZ2V0RXZlbnRQcmlvcml0eTpmdW5jdGlvbihhKXthPXZkW2FdO3JldHVybiB2b2lkIDAhPT1hP2EuZXZlbnRQcmlvcml0eToyfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09YmQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPWlkO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1hZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPW5kO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG5wZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXFkO2JyZWFrO2Nhc2UgWmI6Y2FzZSAkYjpjYXNlIGFjOmE9WWM7YnJlYWs7Y2FzZSBiYzphPXJkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPSRjO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9c2Q7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1aYzticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPW9kO2JyZWFrO2RlZmF1bHQ6YT1FfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7U2MoYik7cmV0dXJuIGJ9fSxGZD1xLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFxuR2Q9cS51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSGQ9RWQuZ2V0RXZlbnRQcmlvcml0eSxJZD0xMCxKZD1bXTtcbmZ1bmN0aW9uIEtkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz1GYyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1NYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzLGg9bnVsbCxrPTA7azxlYS5sZW5ndGg7aysrKXt2YXIgbD1lYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPXhhKGgsbCkpfUJhKGgpfX1cbnZhciBMZD0hMDtmdW5jdGlvbiBGKGEsYil7TWQoYixhLCExKX1mdW5jdGlvbiBNZChhLGIsYyl7c3dpdGNoKEhkKGIpKXtjYXNlIDA6dmFyIGQ9TmQuYmluZChudWxsLGIsMSk7YnJlYWs7Y2FzZSAxOmQ9T2QuYmluZChudWxsLGIsMSk7YnJlYWs7ZGVmYXVsdDpkPVBkLmJpbmQobnVsbCxiLDEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gTmQoYSxiLGMpe2lifHxnYigpO3ZhciBkPVBkLGU9aWI7aWI9ITA7dHJ5e2ZiKGQsYSxiLGMpfWZpbmFsbHl7KGliPWUpfHxrYigpfX1mdW5jdGlvbiBPZChhLGIsYyl7R2QoRmQsUGQuYmluZChudWxsLGEsYixjKSl9XG5mdW5jdGlvbiBRZChhLGIsYyxkKXtpZihKZC5sZW5ndGgpe3ZhciBlPUpkLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWI7ZS5uYXRpdmVFdmVudD1jO2UudGFyZ2V0SW5zdD1kO2E9ZX1lbHNlIGE9e3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6YixuYXRpdmVFdmVudDpjLHRhcmdldEluc3Q6ZCxhbmNlc3RvcnM6W119O3RyeXtpZihiPUtkLGM9YSxqYiliKGMsdm9pZCAwKTtlbHNle2piPSEwO3RyeXtoYihiLGMsdm9pZCAwKX1maW5hbGx5e2piPSExLGtiKCl9fX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLEpkLmxlbmd0aDxJZCYmSmQucHVzaChhKX19XG5mdW5jdGlvbiBQZChhLGIsYyl7aWYoTGQpaWYoMDxuYy5sZW5ndGgmJi0xPHVjLmluZGV4T2YoYSkpYT16YyhudWxsLGEsYixjKSxuYy5wdXNoKGEpO2Vsc2V7dmFyIGQ9SGMoYSxiLGMpO251bGw9PT1kP0FjKGEsYyk6LTE8dWMuaW5kZXhPZihhKT8oYT16YyhkLGEsYixjKSxuYy5wdXNoKGEpKTpEYyhkLGEsYixjKXx8KEFjKGEsYyksUWQoYSxiLGMsbnVsbCkpfX1mdW5jdGlvbiBIYyhhLGIsYyl7dmFyIGQ9TWMoYyk7ZD1GYyhkKTtpZihudWxsIT09ZCl7dmFyIGU9ZWMoZCk7aWYobnVsbD09PWUpZD1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtkPWZjKGUpO2lmKG51bGwhPT1kKXJldHVybiBkO2Q9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2Q9bnVsbH1lbHNlIGUhPT1kJiYoZD1udWxsKX19UWQoYSxiLGMsZCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSZChhKXtpZighWWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIFNkPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIHhjKGEpe3ZhciBiPVNkLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgU2V0LFNkLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHljKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6TWQoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOk1kKGIsXCJmb2N1c1wiLCEwKTtNZChiLFwiYmx1clwiLCEwKTtjLmFkZChcImJsdXJcIik7Yy5hZGQoXCJmb2N1c1wiKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6UmQoYSkmJk1kKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWRjLmluZGV4T2YoYSkmJkYoYSxiKX1jLmFkZChhKX19XG52YXIgVGQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sVWQ9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKFRkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1VkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7VGRbYl09VGRbYV19KX0pO2Z1bmN0aW9uIFZkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxUZC5oYXNPd25Qcm9wZXJ0eShhKSYmVGRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gV2QoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9VmQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgWGQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIFlkKGEsYil7aWYoYil7aWYoWGRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBaZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24gJGQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9eGMoYSk7Yj1qYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl5YyhiW2RdLGEsYyl9ZnVuY3Rpb24gYWUoKXt9XG5mdW5jdGlvbiBiZShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gY2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9Y2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9Y2UoYyl9fVxuZnVuY3Rpb24gZWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9lZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24gZmUoKXtmb3IodmFyIGE9d2luZG93LGI9YmUoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9YmUoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiBnZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciBoZT1cIiRcIixpZT1cIi8kXCIsamU9XCIkP1wiLGtlPVwiJCFcIixsZT1udWxsLG1lPW51bGw7ZnVuY3Rpb24gbmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gb2UoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBwZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxxZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcmUoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBzZShhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1oZXx8Yz09PWtlfHxjPT09amUpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1pZSYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRlPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHVlPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrdGUsdmU9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIit0ZSx3ZT1cIl9fcmVhY3RDb250YWluZXJlJFwiK3RlO1xuZnVuY3Rpb24gRmMoYSl7dmFyIGI9YVt1ZV07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbd2VdfHxjW3VlXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNlKGEpO251bGwhPT1hOyl7aWYoYz1hW3VlXSlyZXR1cm4gYzthPXNlKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYyhhKXthPWFbdWVdfHxhW3dlXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24geGUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24geWUoYSl7cmV0dXJuIGFbdmVdfHxudWxsfXZhciB6ZT1udWxsLEFlPW51bGwsQmU9bnVsbDtcbmZ1bmN0aW9uIENlKCl7aWYoQmUpcmV0dXJuIEJlO3ZhciBhLGI9QWUsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gemU/emUudmFsdWU6emUudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gQmU9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX12YXIgRGU9RS5leHRlbmQoe2RhdGE6bnVsbH0pLEVlPUUuZXh0ZW5kKHtkYXRhOm51bGx9KSxGZT1bOSwxMywyNywzMl0sR2U9WWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LEhlPW51bGw7WWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKEhlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgSWU9WWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFIZSxKZT1ZYSYmKCFHZXx8SGUmJjg8SGUmJjExPj1IZSksS2U9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksTGU9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sTWU9ITE7XG5mdW5jdGlvbiBOZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PUZlLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gT2UoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgUGU9ITE7ZnVuY3Rpb24gUWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIE9lKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtNZT0hMDtyZXR1cm4gS2U7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09S2UmJk1lP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIFJlKGEsYil7aWYoUGUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IUdlJiZOZShhLGIpPyhhPUNlKCksQmU9QWU9emU9bnVsbCxQZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gSmUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIFNlPXtldmVudFR5cGVzOkxlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoR2UpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9TGUuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9TGUuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPUxlLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBQZT9OZShhLGMpJiYoZj1MZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPUxlLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KEplJiZcImtvXCIhPT1jLmxvY2FsZSYmKFBlfHxmIT09TGUuY29tcG9zaXRpb25TdGFydD9mPT09TGUuY29tcG9zaXRpb25FbmQmJlBlJiYoZT1DZSgpKTooemU9ZCxBZT1cInZhbHVlXCJpbiB6ZT96ZS52YWx1ZTp6ZS50ZXh0Q29udGVudCxQZT0hMCkpLGY9RGUuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1PZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksU2MoZiksZT1mKTplPW51bGw7KGE9SWU/UWUoYSxjKTpSZShhLGMpKT8oYj1FZS5nZXRQb29sZWQoTGUuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFNjKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LFRlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFVlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhVGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIFZlPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIFdlKGEsYixjKXthPUUuZ2V0UG9vbGVkKFZlLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7Y2IoYyk7U2MoYSk7cmV0dXJuIGF9dmFyIFhlPW51bGwsWWU9bnVsbDtmdW5jdGlvbiBaZShhKXtCYShhKX1mdW5jdGlvbiAkZShhKXt2YXIgYj14ZShhKTtpZih6YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBhZihhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBiZj0hMTtZYSYmKGJmPVJkKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gY2YoKXtYZSYmKFhlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLGRmKSxZZT1YZT1udWxsKX1mdW5jdGlvbiBkZihhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmJGUoWWUpKWlmKGE9V2UoWWUsYSxNYyhhKSksaWIpQmEoYSk7ZWxzZXtpYj0hMDt0cnl7ZWIoWmUsYSl9ZmluYWxseXtpYj0hMSxrYigpfX19ZnVuY3Rpb24gZWYoYSxiLGMpe1wiZm9jdXNcIj09PWE/KGNmKCksWGU9YixZZT1jLFhlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLGRmKSk6XCJibHVyXCI9PT1hJiZjZigpfWZ1bmN0aW9uIGZmKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuICRlKFllKX1mdW5jdGlvbiBnZihhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuICRlKGIpfWZ1bmN0aW9uIGhmKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuICRlKGIpfVxudmFyIGpmPXtldmVudFR5cGVzOlZlLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6YmYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP3hlKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9YWY7ZWxzZSBpZihVZShlKSlpZihiZilnPWhmO2Vsc2V7Zz1mZjt2YXIgaD1lZn1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9Z2YpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIFdlKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRmIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sa2Y9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixcbmRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGxmLG1mPXtldmVudFR5cGVzOmtmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO1xuZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9GYyhiKTpudWxsLG51bGwhPT1iJiYoZj1lYyhiKSxiIT09Znx8NSE9PWIudGFnJiY2IT09Yi50YWcpKWI9bnVsbH1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSl7dmFyIGg9bmQ7dmFyIGs9a2YubW91c2VMZWF2ZTt2YXIgbD1rZi5tb3VzZUVudGVyO3ZhciBtPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSloPW9kLGs9a2YucG9pbnRlckxlYXZlLGw9a2YucG9pbnRlckVudGVyLG09XCJwb2ludGVyXCI7YT1udWxsPT1nP2U6eGUoZyk7ZT1udWxsPT1iP2U6eGUoYik7az1oLmdldFBvb2xlZChrLGcsYyxkKTtrLnR5cGU9bStcImxlYXZlXCI7ay50YXJnZXQ9XG5hO2sucmVsYXRlZFRhcmdldD1lO2Q9aC5nZXRQb29sZWQobCxiLGMsZCk7ZC50eXBlPW0rXCJlbnRlclwiO2QudGFyZ2V0PWU7ZC5yZWxhdGVkVGFyZ2V0PWE7aD1nO209YjtpZihoJiZtKWE6e2w9aDthPW07Zz0wO2ZvcihiPWw7YjtiPU5jKGIpKWcrKztiPTA7Zm9yKGU9YTtlO2U9TmMoZSkpYisrO2Zvcig7MDxnLWI7KWw9TmMobCksZy0tO2Zvcig7MDxiLWc7KWE9TmMoYSksYi0tO2Zvcig7Zy0tOyl7aWYobD09PWF8fGw9PT1hLmFsdGVybmF0ZSlicmVhayBhO2w9TmMobCk7YT1OYyhhKX1sPW51bGx9ZWxzZSBsPW51bGw7YT1sO2ZvcihsPVtdO2gmJmghPT1hOyl7Zz1oLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWEpYnJlYWs7bC5wdXNoKGgpO2g9TmMoaCl9Zm9yKGg9W107bSYmbSE9PWE7KXtnPW0uYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09YSlicmVhaztoLnB1c2gobSk7bT1OYyhtKX1mb3IobT0wO208bC5sZW5ndGg7bSsrKVFjKGxbbV0sXCJidWJibGVkXCIsayk7Zm9yKG09XG5oLmxlbmd0aDswPG0tLTspUWMoaFttXSxcImNhcHR1cmVkXCIsZCk7aWYoYz09PWxmKXJldHVybiBsZj1udWxsLFtrXTtsZj1jO3JldHVybltrLGRdfX07ZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpuZixwZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIHFmKGEsYil7aWYob2YoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFwZi5jYWxsKGIsY1tkXSl8fCFvZihhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIHJmPVlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsc2Y9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LHRmPW51bGwsdWY9bnVsbCx2Zj1udWxsLHdmPSExO1xuZnVuY3Rpb24geGYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZih3Znx8bnVsbD09dGZ8fHRmIT09YmUoYykpcmV0dXJuIG51bGw7Yz10ZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZnZShjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiB2ZiYmcWYodmYsYyk/bnVsbDoodmY9YyxhPUUuZ2V0UG9vbGVkKHNmLnNlbGVjdCx1ZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PXRmLFNjKGEpLGEpfVxudmFyIHlmPXtldmVudFR5cGVzOnNmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPXhjKGUpO2Y9amEub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP3hlKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoVWUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpdGY9ZSx1Zj1iLHZmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjp2Zj11Zj10Zj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjp3Zj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIHdmPSExLHhmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKHJmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4geGYoYyxkKX1yZXR1cm4gbnVsbH19O0NhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dmFyIHpmPUNjO3NhPXllO3VhPXpmO3ZhPXhlO0NhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46RWQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOm1mLENoYW5nZUV2ZW50UGx1Z2luOmpmLFNlbGVjdEV2ZW50UGx1Z2luOnlmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46U2V9KTtuZXcgU2V0O3ZhciBBZj1bXSxCZj0tMTtmdW5jdGlvbiBHKGEpezA+QmZ8fChhLmN1cnJlbnQ9QWZbQmZdLEFmW0JmXT1udWxsLEJmLS0pfVxuZnVuY3Rpb24gSShhLGIpe0JmKys7QWZbQmZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sSj17Y3VycmVudDpDZn0sSz17Y3VycmVudDohMX0sRGY9Q2Y7ZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBGZihhKXtHKEssYSk7RyhKLGEpfWZ1bmN0aW9uIEdmKGEpe0coSyxhKTtHKEosYSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKEouY3VycmVudCE9PUNmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIsYSk7SShLLGMsYSl9ZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxXYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gSmYoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1KLmN1cnJlbnQ7SShKLGIsYSk7SShLLEsuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGI9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRyhLLGEpLEcoSixhKSxJKEosYixhKSk6RyhLLGEpO0koSyxjLGEpfVxudmFyIExmPXEudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE1mPXEudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxOZj1xLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLE9mPXEudW5zdGFibGVfc2hvdWxkWWllbGQsUGY9cS51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsUWY9cS51bnN0YWJsZV9ub3csUmY9cS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxTZj1xLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFRmPXEudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksVWY9cS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxWZj1xLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFdmPXEudW5zdGFibGVfSWRsZVByaW9yaXR5LFhmPXt9LFlmPXZvaWQgMCE9PVBmP1BmOmZ1bmN0aW9uKCl7fSxaZj1udWxsLCRmPW51bGwsYWc9ITEsYmc9UWYoKSxjZz0xRTQ+Ymc/UWY6ZnVuY3Rpb24oKXtyZXR1cm4gUWYoKS1iZ307XG5mdW5jdGlvbiBkZygpe3N3aXRjaChSZigpKXtjYXNlIFNmOnJldHVybiA5OTtjYXNlIFRmOnJldHVybiA5ODtjYXNlIFVmOnJldHVybiA5NztjYXNlIFZmOnJldHVybiA5NjtjYXNlIFdmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBlZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gU2Y7Y2FzZSA5ODpyZXR1cm4gVGY7Y2FzZSA5NzpyZXR1cm4gVWY7Y2FzZSA5NjpyZXR1cm4gVmY7Y2FzZSA5NTpyZXR1cm4gV2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gZmcoYSxiKXthPWVnKGEpO3JldHVybiBMZihhLGIpfWZ1bmN0aW9uIGdnKGEsYixjKXthPWVnKGEpO3JldHVybiBNZihhLGIsYyl9ZnVuY3Rpb24gaGcoYSl7bnVsbD09PVpmPyhaZj1bYV0sJGY9TWYoU2YsaWcpKTpaZi5wdXNoKGEpO3JldHVybiBYZn1mdW5jdGlvbiBqZygpe2lmKG51bGwhPT0kZil7dmFyIGE9JGY7JGY9bnVsbDtOZihhKX1pZygpfVxuZnVuY3Rpb24gaWcoKXtpZighYWcmJm51bGwhPT1aZil7YWc9ITA7dmFyIGE9MDt0cnl7dmFyIGI9WmY7ZmcoOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1pmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVpmJiYoWmY9WmYuc2xpY2UoYSsxKSksTWYoU2YsamcpLGM7fWZpbmFsbHl7YWc9ITF9fX12YXIga2c9MztmdW5jdGlvbiBsZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBtZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgbmc9e2N1cnJlbnQ6bnVsbH0sb2c9bnVsbCxwZz1udWxsLHFnPW51bGw7ZnVuY3Rpb24gcmcoKXtxZz1wZz1vZz1udWxsfVxuZnVuY3Rpb24gc2coYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7SShuZyxjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gdGcoYSl7dmFyIGI9bmcuY3VycmVudDtHKG5nLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gdWcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19XG5mdW5jdGlvbiB2ZyhhLGIpe29nPWE7cWc9cGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYod2c9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfWZ1bmN0aW9uIHhnKGEsYil7aWYocWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXFnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1wZyl7aWYobnVsbD09PW9nKXRocm93IEVycm9yKHUoMzA4KSk7cGc9YjtvZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIHBnPXBnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB5Zz0hMTtcbmZ1bmN0aW9uIHpnKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBBZyhhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBCZyhhLGIpe3JldHVybntleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gQ2coYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gRGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPXpnKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPXpnKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPXpnKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1BZyhlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1BZyhkKSk7bnVsbD09PWV8fGQ9PT1lP0NnKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8oQ2coZCxiKSxDZyhlLGIpKTooQ2coZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBFZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPXpnKGEubWVtb2l6ZWRTdGF0ZSk6RmcoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiBGZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1BZyhiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBHZyhhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSAyOnlnPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXt5Zz0hMTtiPUZnKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLGw9ZjtudWxsIT09azspe3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9ayxmPWwpLGg8bSYmKGg9bSkpOihJZyhtLGsuc3VzcGVuc2VDb25maWcpLGw9R2coYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpKTtrPWsubmV4dH1tPW51bGw7Zm9yKGs9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1rOyl7dmFyIEM9ay5leHBpcmF0aW9uVGltZTtDPGU/KG51bGw9PT1tJiYobT1rLG51bGw9PT1nJiYoZj1sKSksaDxDJiYoaD1DKSk6KGw9R2coYSxiLGssbCxjLGQpLG51bGwhPT1cbmsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpKTtrPWsubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWwpO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO0pnKGgpO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9bH1cbmZ1bmN0aW9uIEtnKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtMZyhiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7TGcoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIExnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMTkxLGMpKTtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxudmFyIE1nPUVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLE5nPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIE9nKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIFNnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9lYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UGcoKSxlPU1nLnN1c3BlbnNlO2Q9UWcoZCxhLGUpO2U9QmcoZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7RGcoYSxlKTtSZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1QZygpLGU9TWcuc3VzcGVuc2U7ZD1RZyhkLGEsZSk7ZT1CZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO0RnKGEsZSk7UmcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9UGcoKSxkPU1nLnN1c3BlbnNlO1xuYz1RZyhjLGEsZCk7ZD1CZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO0RnKGEsZCk7UmcoYSxjKX19O2Z1bmN0aW9uIFRnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IXFmKGMsZCl8fCFxZihlLGYpOiEwfVxuZnVuY3Rpb24gVWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9eGcoZik6KGU9TChiKT9EZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9U2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gVmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJlNnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gV2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1OZzt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXhnKGYpOihmPUwoYik/RGY6Si5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJihIZyhhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoT2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmU2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoSGcoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBYZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gWWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PU5nJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBaZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gJGcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1haChhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWJoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1ZZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9Y2goYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9WWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1kaChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1laChjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQyhhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9YmgoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgR2E6cmV0dXJuIGM9Y2goYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9WWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIEhhOnJldHVybiBiPWRoKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihYZyhiKXx8XG5VYShiKSlyZXR1cm4gYj1laChiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtaZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgR2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1JYT9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgSGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoWGcoYyl8fFVhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtaZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEgoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBHYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09SWE/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgSGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoWGcoZCl8fFVhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtaZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHI9Zyx4PWc9MCxBPW51bGw7bnVsbCE9PXImJng8aC5sZW5ndGg7eCsrKXtyLmluZGV4Png/KEE9cixyPW51bGwpOkE9ci5zaWJsaW5nO3ZhciBwPXkoZSxyLGhbeF0sayk7aWYobnVsbD09PXApe251bGw9PT1yJiYocj1BKTticmVha31hJiZcbnImJm51bGw9PT1wLmFsdGVybmF0ZSYmYihlLHIpO2c9ZihwLGcseCk7bnVsbD09PW0/bD1wOm0uc2libGluZz1wO209cDtyPUF9aWYoeD09PWgubGVuZ3RoKXJldHVybiBjKGUsciksbDtpZihudWxsPT09cil7Zm9yKDt4PGgubGVuZ3RoO3grKylyPUMoZSxoW3hdLGspLG51bGwhPT1yJiYoZz1mKHIsZyx4KSxudWxsPT09bT9sPXI6bS5zaWJsaW5nPXIsbT1yKTtyZXR1cm4gbH1mb3Iocj1kKGUscik7eDxoLmxlbmd0aDt4KyspQT1IKHIsZSx4LGhbeF0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJnIuZGVsZXRlKG51bGw9PT1BLmtleT94OkEua2V5KSxnPWYoQSxnLHgpLG51bGw9PT1tP2w9QTptLnNpYmxpbmc9QSxtPUEpO2EmJnIuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdGEoZSxnLGgsayl7dmFyIGw9VWEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IodSgxNTApKTtoPWwuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09bD1udWxsLHI9Zyx4PWc9MCxBPW51bGwscD1oLm5leHQoKTtudWxsIT09ciYmIXAuZG9uZTt4KysscD1oLm5leHQoKSl7ci5pbmRleD54PyhBPXIscj1udWxsKTpBPXIuc2libGluZzt2YXIgej15KGUscixwLnZhbHVlLGspO2lmKG51bGw9PT16KXtudWxsPT09ciYmKHI9QSk7YnJlYWt9YSYmciYmbnVsbD09PXouYWx0ZXJuYXRlJiZiKGUscik7Zz1mKHosZyx4KTtudWxsPT09bT9sPXo6bS5zaWJsaW5nPXo7bT16O3I9QX1pZihwLmRvbmUpcmV0dXJuIGMoZSxyKSxsO2lmKG51bGw9PT1yKXtmb3IoOyFwLmRvbmU7eCsrLHA9aC5uZXh0KCkpcD1DKGUscC52YWx1ZSxrKSxudWxsIT09cCYmKGc9ZihwLGcseCksbnVsbD09PW0/bD1wOm0uc2libGluZz1wLG09cCk7cmV0dXJuIGx9Zm9yKHI9ZChlLHIpOyFwLmRvbmU7eCsrLHA9aC5uZXh0KCkpcD1IKHIsZSx4LHAudmFsdWUsayksbnVsbCE9PXAmJihhJiZudWxsIT09XG5wLmFsdGVybmF0ZSYmci5kZWxldGUobnVsbD09PXAua2V5P3g6cC5rZXkpLGc9ZihwLGcseCksbnVsbD09PW0/bD1wOm0uc2libGluZz1wLG09cCk7YSYmci5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09SWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgR2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1JYTprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1JYT9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9WWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsXG5rKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1JYT8oZD1laChmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9Y2goZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9WWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIEhhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9ZGgoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PVxudHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWJoKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFhnKGYpKXJldHVybiB6KGEsZCxmLGgpO2lmKFVhKGYpKXJldHVybiB0YShhLGQsZixoKTtsJiZaZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgZmg9JGcoITApLGdoPSRnKCExKSxoaD17fSxpaD17Y3VycmVudDpoaH0samg9e2N1cnJlbnQ6aGh9LGtoPXtjdXJyZW50OmhofTtmdW5jdGlvbiBsaChhKXtpZihhPT09aGgpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIG1oKGEsYil7SShraCxiLGEpO0koamgsYSxhKTtJKGloLGhoLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOlFiKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1RYihiLGMpfUcoaWgsYSk7SShpaCxiLGEpfWZ1bmN0aW9uIG5oKGEpe0coaWgsYSk7RyhqaCxhKTtHKGtoLGEpfWZ1bmN0aW9uIG9oKGEpe2xoKGtoLmN1cnJlbnQpO3ZhciBiPWxoKGloLmN1cnJlbnQpO3ZhciBjPVFiKGIsYS50eXBlKTtiIT09YyYmKEkoamgsYSxhKSxJKGloLGMsYSkpfWZ1bmN0aW9uIHBoKGEpe2poLmN1cnJlbnQ9PT1hJiYoRyhpaCxhKSxHKGpoLGEpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIHFoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PWplfHxjLmRhdGE9PT1rZSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiByaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBzaD1FYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLE49RWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsdGg9MCx1aD1udWxsLE89bnVsbCx2aD1udWxsLHdoPW51bGwsUD1udWxsLHhoPW51bGwseWg9MCx6aD1udWxsLEFoPTAsQmg9ITEsQ2g9bnVsbCxHaD0wO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBIaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFvZihhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gSWgoYSxiLGMsZCxlLGYpe3RoPWY7dWg9Yjt2aD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtzaC5jdXJyZW50PW51bGw9PT12aD9KaDpLaDtiPWMoZCxlKTtpZihCaCl7ZG8gQmg9ITEsR2grPTEsdmg9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGwseGg9d2gsemg9UD1PPW51bGwsc2guY3VycmVudD1LaCxiPWMoZCxlKTt3aGlsZShCaCk7Q2g9bnVsbDtHaD0wfXNoLmN1cnJlbnQ9TGg7YT11aDthLm1lbW9pemVkU3RhdGU9d2g7YS5leHBpcmF0aW9uVGltZT15aDthLnVwZGF0ZVF1ZXVlPXpoO2EuZWZmZWN0VGFnfD1BaDthPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O3RoPTA7eGg9UD13aD12aD1PPXVoPW51bGw7eWg9MDt6aD1udWxsO0FoPTA7aWYoYSl0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBifVxuZnVuY3Rpb24gTWgoKXtzaC5jdXJyZW50PUxoO3RoPTA7eGg9UD13aD12aD1PPXVoPW51bGw7eWg9MDt6aD1udWxsO0FoPTA7Qmg9ITE7Q2g9bnVsbDtHaD0wfWZ1bmN0aW9uIE5oKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP3doPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIE9oKCl7aWYobnVsbCE9PXhoKVA9eGgseGg9UC5uZXh0LE89dmgsdmg9bnVsbCE9PU8/Ty5uZXh0Om51bGw7ZWxzZXtpZihudWxsPT09dmgpdGhyb3cgRXJyb3IodSgzMTApKTtPPXZoO3ZhciBhPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUscXVldWU6Ty5xdWV1ZSxiYXNlVXBkYXRlOk8uYmFzZVVwZGF0ZSxuZXh0Om51bGx9O1A9bnVsbD09PVA/d2g9YTpQLm5leHQ9YTt2aD1PLm5leHR9cmV0dXJuIFB9XG5mdW5jdGlvbiBQaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIFFoKGEpe3ZhciBiPU9oKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7aWYoMDxHaCl7dmFyIGQ9Yy5kaXNwYXRjaDtpZihudWxsIT09Q2gpe3ZhciBlPUNoLmdldChjKTtpZih2b2lkIDAhPT1lKXtDaC5kZWxldGUoYyk7dmFyIGY9Yi5tZW1vaXplZFN0YXRlO2RvIGY9YShmLGUuYWN0aW9uKSxlPWUubmV4dDt3aGlsZShudWxsIT09ZSk7b2YoZixiLm1lbW9pemVkU3RhdGUpfHwod2c9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT09PWMubGFzdCYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9ZjtyZXR1cm5bZixkXX19cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxkXX1kPWMubGFzdDt2YXIgZz1iLmJhc2VVcGRhdGU7Zj1iLmJhc2VTdGF0ZTtudWxsIT09Zz8obnVsbCE9PWQmJihkLm5leHQ9bnVsbCksZD1nLm5leHQpOmQ9bnVsbCE9PWQ/ZC5uZXh0Om51bGw7aWYobnVsbCE9PVxuZCl7dmFyIGg9ZT1udWxsLGs9ZCxsPSExO2Rve3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTx0aD8obHx8KGw9ITAsaD1nLGU9ZiksbT55aCYmKHloPW0sSmcoeWgpKSk6KElnKG0say5zdXNwZW5zZUNvbmZpZyksZj1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZixrLmFjdGlvbikpO2c9aztrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWQpO2x8fChoPWcsZT1mKTtvZihmLGIubWVtb2l6ZWRTdGF0ZSl8fCh3Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIFJoKGEpe3ZhciBiPU5oKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOlBoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1TaC5iaW5kKG51bGwsdWgsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBUaChhKXtyZXR1cm4gUWgoUGgsYSl9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O251bGw9PT16aD8oemg9e2xhc3RFZmZlY3Q6bnVsbH0semgubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9emgubGFzdEVmZmVjdCxudWxsPT09Yj96aC5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9Yyx6aC5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPU5oKCk7QWh8PWE7ZS5tZW1vaXplZFN0YXRlPVVoKGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIFdoKGEsYixjLGQpe3ZhciBlPU9oKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmSGgoZCxnLmRlcHMpKXtVaCgwLGMsZixkKTtyZXR1cm59fUFofD1hO2UubWVtb2l6ZWRTdGF0ZT1VaChiLGMsZixkKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsMTkyLGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gV2goNTE2LDE5MixhLGIpfVxuZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiAkaCgpe31mdW5jdGlvbiBhaShhLGIpe05oKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1PaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmSGgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBTaChhLGIsYyl7aWYoISgyNT5HaCkpdGhyb3cgRXJyb3IodSgzMDEpKTt2YXIgZD1hLmFsdGVybmF0ZTtpZihhPT09dWh8fG51bGwhPT1kJiZkPT09dWgpaWYoQmg9ITAsYT17ZXhwaXJhdGlvblRpbWU6dGgsc3VzcGVuc2VDb25maWc6bnVsbCxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxudWxsPT09Q2gmJihDaD1uZXcgTWFwKSxjPUNoLmdldChiKSx2b2lkIDA9PT1jKUNoLnNldChiLGEpO2Vsc2V7Zm9yKGI9YztudWxsIT09Yi5uZXh0OyliPWIubmV4dDtiLm5leHQ9YX1lbHNle3ZhciBlPVBnKCksZj1NZy5zdXNwZW5zZTtlPVFnKGUsYSxmKTtmPXtleHBpcmF0aW9uVGltZTplLHN1c3BlbnNlQ29uZmlnOmYsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGc9Yi5sYXN0O2lmKG51bGw9PT1nKWYubmV4dD1mO2Vsc2V7dmFyIGg9Zy5uZXh0O251bGwhPT1oJiZcbihmLm5leHQ9aCk7Zy5uZXh0PWZ9Yi5sYXN0PWY7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09ZHx8MD09PWQuZXhwaXJhdGlvblRpbWUpJiYoZD1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWQpKXRyeXt2YXIgaz1iLmxhc3RSZW5kZXJlZFN0YXRlLGw9ZChrLGMpO2YuZWFnZXJSZWR1Y2VyPWQ7Zi5lYWdlclN0YXRlPWw7aWYob2YobCxrKSlyZXR1cm59Y2F0Y2gobSl7fWZpbmFsbHl7fVJnKGEsZSl9fVxudmFyIExoPXtyZWFkQ29udGV4dDp4Zyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxKaD17cmVhZENvbnRleHQ6eGcsdXNlQ2FsbGJhY2s6YWksdXNlQ29udGV4dDp4Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMzYsWmguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBWaCg0LDM2LGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1OaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVxuW2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPU5oKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9U2guYmluZChudWxsLHVoLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1OaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpSaCx1c2VEZWJ1Z1ZhbHVlOiRoLHVzZVJlc3BvbmRlcjpyaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9UmgoYSksZD1jWzBdLGU9Y1sxXTtYaChmdW5jdGlvbigpe3EudW5zdGFibGVfbmV4dChmdW5jdGlvbigpe3ZhciBjPU4uc3VzcGVuc2U7Ti5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e04uc3VzcGVuc2U9XG5jfX0pfSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9UmgoITEpLGM9YlswXSxkPWJbMV07cmV0dXJuW2FpKGZ1bmN0aW9uKGIpe2QoITApO3EudW5zdGFibGVfbmV4dChmdW5jdGlvbigpe3ZhciBjPU4uc3VzcGVuc2U7Ti5zdXNwZW5zZT12b2lkIDA9PT1hP251bGw6YTt0cnl7ZCghMSksYigpfWZpbmFsbHl7Ti5zdXNwZW5zZT1jfX0pfSxbYSxjXSksY119fSxLaD17cmVhZENvbnRleHQ6eGcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp4Zyx1c2VFZmZlY3Q6WWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFdoKDQsMzYsWmguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXaCg0LDM2LGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1PaCgpO2I9dm9pZCAwPT09Yj9cbm51bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZIaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpRaCx1c2VSZWY6ZnVuY3Rpb24oKXtyZXR1cm4gT2goKS5tZW1vaXplZFN0YXRlfSx1c2VTdGF0ZTpUaCx1c2VEZWJ1Z1ZhbHVlOiRoLHVzZVJlc3BvbmRlcjpyaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9VGgoYSksZD1jWzBdLGU9Y1sxXTtZaChmdW5jdGlvbigpe3EudW5zdGFibGVfbmV4dChmdW5jdGlvbigpe3ZhciBjPU4uc3VzcGVuc2U7Ti5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVRoKCExKSxjPWJbMF0sZD1iWzFdO3JldHVybltiaShmdW5jdGlvbihiKXtkKCEwKTtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1cbk4uc3VzcGVuc2U7Ti5zdXNwZW5zZT12b2lkIDA9PT1hP251bGw6YTt0cnl7ZCghMSksYigpfWZpbmFsbHl7Ti5zdXNwZW5zZT1jfX0pfSxbYSxjXSksY119fSxjaT1udWxsLGRpPW51bGwsZWk9ITE7ZnVuY3Rpb24gZmkoYSxiKXt2YXIgYz1naSg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gaGkoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIGlpKGEpe2lmKGVpKXt2YXIgYj1kaTtpZihiKXt2YXIgYz1iO2lmKCFoaShhLGIpKXtiPXJlKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhaGkoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtlaT0hMTtjaT1hO3JldHVybn1maShjaSxjKX1jaT1hO2RpPXJlKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLGVpPSExLGNpPWF9fWZ1bmN0aW9uIGppKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtjaT1hfVxuZnVuY3Rpb24ga2koYSl7aWYoYSE9PWNpKXJldHVybiExO2lmKCFlaSlyZXR1cm4gamkoYSksZWk9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFvZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9ZGk7YjspZmkoYSxiKSxiPXJlKGIubmV4dFNpYmxpbmcpO2ppKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09aWUpe2lmKDA9PT1iKXtkaT1yZShhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT1oZSYmYyE9PWtlJiZjIT09amV8fGIrK31hPWEubmV4dFNpYmxpbmd9ZGk9bnVsbH19ZWxzZSBkaT1jaT9yZShhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIGxpKCl7ZGk9Y2k9bnVsbDtlaT0hMX12YXIgbWk9RWEuUmVhY3RDdXJyZW50T3duZXIsd2c9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP2doKGIsbnVsbCxjLGQpOmZoKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIG5pKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt2ZyhiLGUpO2Q9SWgoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhd2cpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxvaShhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhcWkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcscmkoYSxiLGcsZCxlLGYpO2E9Y2goYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpxZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBvaShhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1haChnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gcmkoYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmcWYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYod2c9ITEsZTxmKT9vaShhLGIsZik6c2koYSxiLGMsZCxmKX1mdW5jdGlvbiB0aShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIHNpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9EZjpKLmN1cnJlbnQ7Zj1FZihiLGYpO3ZnKGIsZSk7Yz1JaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF3ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLG9pKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gdWkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dmcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLFVnKGIsYyxkLGUpLFdnKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXhnKGwpOihsPUwoYyk/RGY6Si5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7Q3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJlZnKGIsZyxkLGwpO3lnPSExO3ZhciB5PWIubWVtb2l6ZWRTdGF0ZTtrPWcuc3RhdGU9eTt2YXIgSD1iLnVwZGF0ZVF1ZXVlO251bGwhPT1IJiYoSGcoYixILGQsZyxlKSxrPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHkhPT1rfHxLLmN1cnJlbnR8fHlnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKE9nKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD15Z3x8VGcoYixjLGgsZCx5LGssbCkpPyhDfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9eGcobCk6KGw9TChjKT9EZjpKLmN1cnJlbnQsbD1FZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChDPVxuXCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZWZyhiLGcsZCxsKSx5Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSx5PWcuc3RhdGU9ayxIPWIudXBkYXRlUXVldWUsbnVsbCE9PUgmJihIZyhiLEgsZCxnLGUpLHk9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8ayE9PXl8fEsuY3VycmVudHx8eWc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoT2coYixjLG0sZCkseT1iLm1lbW9pemVkU3RhdGUpLChtPXlnfHxUZyhiLGMsaCxkLGsseSxsKSk/KEN8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHxcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx5LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseSxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9XG5kLGIubWVtb2l6ZWRTdGF0ZT15KSxnLnByb3BzPWQsZy5zdGF0ZT15LGcuY29udGV4dD1sLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiB2aShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiB2aShhLGIsYyxkLGUsZil7dGkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksb2koYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7bWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9ZmgoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1maChiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHdpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO21oKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciB4aT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIHlpKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEsYik7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJmlpKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPWVoKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9ZWgoZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT14aTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPWdoKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1haChhLGEucGVuZGluZ1Byb3BzLDApO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9YWgoZCxlLGQuZXhwaXJhdGlvblRpbWUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPXhpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPWZoKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1cbm51bGw7cmV0dXJuIGIuY2hpbGQ9Y31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9ZWgobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1laChnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT14aTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9ZmgoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiB6aShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dWcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gQWkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBCaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmemkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpemkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQsYik7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PXFoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7QWkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09cWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfUFpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpBaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkpnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1haChhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1haChhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gQ2koYSl7YS5lZmZlY3RUYWd8PTR9dmFyIEhpLElpLEppLEtpO1xuSGk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0lpPWZ1bmN0aW9uKCl7fTtcbkppPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtsaChpaC5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9QWIoZyxmKTtkPUFiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1LYihnLGYpO2Q9S2IoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1hZSl9WWQoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihpYS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLFwiXCIrbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYoaWEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJiRkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYmQ2koYil9fTtLaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmQ2koYil9O1xuZnVuY3Rpb24gTGkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gTWkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZGZihhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOm5oKGEpO0dmKGEpO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBwaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEcoTSxhKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEcoTSxhKSxudWxsO2Nhc2UgNDpyZXR1cm4gbmgoYSksbnVsbDtjYXNlIDEwOnJldHVybiB0ZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIE5pKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6WGEoYil9fVxudmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIFBpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9WGEoYykpO251bGwhPT1jJiZXYShjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZXYShhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBRaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7UmkoYSxjKX19ZnVuY3Rpb24gU2koYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7UmkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gVGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VWkoMiwwLGIpO2JyZWFrO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOm1nKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9YnJlYWs7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MykpO319XG5mdW5jdGlvbiBVaShhLGIsYyl7Yz1jLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2Rve2lmKDAhPT0oZC50YWcmYSkpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0wIT09KGQudGFnJmIpJiYoZT1kLmNyZWF0ZSxkLmRlc3Ryb3k9ZSgpKTtkPWQubmV4dH13aGlsZShkIT09Yyl9fVxuZnVuY3Rpb24gVmkoYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBXaSYmV2koYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7ZmcoOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe1JpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpTaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZRaShiLGMpO2JyZWFrO2Nhc2UgNTpTaShiKTticmVhaztjYXNlIDQ6WGkoYSxiLGMpfX1cbmZ1bmN0aW9uIFlpKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7bnVsbCE9PWImJllpKGIpfWZ1bmN0aW9uIFppKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gJGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoWmkoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFRiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxaaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe3ZhciBmPTU9PT1lLnRhZ3x8Nj09PWUudGFnO2lmKGYpe3ZhciBnPWY/ZS5zdGF0ZU5vZGU6ZS5zdGF0ZU5vZGUuaW5zdGFuY2U7aWYoYylpZihkKXtmPWI7dmFyIGg9ZztnPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShoLGcpOmYuaW5zZXJ0QmVmb3JlKGgsZyl9ZWxzZSBiLmluc2VydEJlZm9yZShnLGMpO2Vsc2UgZD8oaD1iLDg9PT1oLm5vZGVUeXBlPyhmPWgucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShnLGgpKTooZj1oLGYuYXBwZW5kQ2hpbGQoZykpLGg9aC5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1oJiZ2b2lkIDAhPT1ofHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPWFlKSk6Yi5hcHBlbmRDaGlsZChnKX1lbHNlIGlmKDQhPT1cbmUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiBYaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKFZpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWs7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihWaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gYWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpVaSg0LDgsYik7YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t2ZV09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQ2IoYyxkKTtaZChhLGUpO2I9WmQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP1dkKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9TYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/VGIoYyxoKTp2YihjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6RWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpNYihjLFxuZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SmIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0piKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpKYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fWJyZWFrO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxMYyhiLmNvbnRhaW5lckluZm8pKTticmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/ZD0hMTooZD0hMCxjPWIuY2hpbGQsYmo9Y2coKSk7XG5pZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9VmQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9Zjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1cbmE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9Y2ooYik7YnJlYWs7Y2FzZSAxOTpjaihiKTticmVhaztjYXNlIDE3OmJyZWFrO2Nhc2UgMjA6YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1mdW5jdGlvbiBjaihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBPaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWRqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fXZhciBlaj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtcbmZ1bmN0aW9uIGZqKGEsYixjKXtjPUJnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7Z2p8fChnaj0hMCxoaj1kKTtQaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIGlqKGEsYixjKXtjPUJnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe1BpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1qaj9qaj1uZXcgU2V0KFt0aGlzXSk6amouYWRkKHRoaXMpLFBpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGtqPU1hdGguY2VpbCxsaj1FYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLG1qPUVhLlJlYWN0Q3VycmVudE93bmVyLFM9MCxuaj04LG9qPTE2LHBqPTMyLHFqPTAscmo9MSxzaj0yLHRqPTMsdWo9NCx2aj01LFQ9UyxVPW51bGwsVj1udWxsLFc9MCxYPXFqLHdqPW51bGwseGo9MTA3Mzc0MTgyMyx5aj0xMDczNzQxODIzLHpqPW51bGwsQWo9MCxCaj0hMSxiaj0wLENqPTUwMCxZPW51bGwsZ2o9ITEsaGo9bnVsbCxqaj1udWxsLERqPSExLEVqPW51bGwsRmo9OTAsR2o9bnVsbCxIaj0wLElqPW51bGwsSmo9MDtmdW5jdGlvbiBQZygpe3JldHVybihUJihvanxwaikpIT09Uz8xMDczNzQxODIxLShjZygpLzEwfDApOjAhPT1Kaj9KajpKaj0xMDczNzQxODIxLShjZygpLzEwfDApfVxuZnVuY3Rpb24gUWcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1kZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVCZvaikhPT1TKXJldHVybiBXO2lmKG51bGwhPT1jKWE9bGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9bGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1sZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVUmJmE9PT1XJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKDUwPEhqKXRocm93IEhqPTAsSWo9bnVsbCxFcnJvcih1KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9ZGcoKTsxMDczNzQxODIzPT09Yj8oVCZuaikhPT1TJiYoVCYob2p8cGopKT09PVM/TGooYSk6KFooYSksVD09PVMmJmpnKCkpOlooYSk7KFQmNCk9PT1TfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT1Haj9Haj1uZXcgTWFwKFtbYSxiXV0pOihjPUdqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmR2ouc2V0KGEsYikpKX19XG5mdW5jdGlvbiBLaihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVT09PWUmJihKZyhiKSxYPT09dWomJk1qKGUsVykpLE5qKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gT2ooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIVBqKGEsYikpcmV0dXJuIGI7Yj1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7cmV0dXJuIGI+YT9iOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9aGcoTGouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPU9qKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1QZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1YZiYmTmYoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2hnKExqLmJpbmQobnVsbCxhKSk6Z2coZCxRai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktY2coKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIFFqKGEsYil7Smo9MDtpZihiKXJldHVybiBiPVBnKCksUmooYSxiKSxaKGEpLG51bGw7dmFyIGM9T2ooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7U2ooKTthPT09VSYmYz09PVd8fFRqKGEsYyk7aWYobnVsbCE9PVYpe3ZhciBkPVQ7VHw9b2o7dmFyIGU9VWooYSk7ZG8gdHJ5e1ZqKCk7YnJlYWt9Y2F0Y2goaCl7V2ooYSxoKX13aGlsZSgxKTtyZygpO1Q9ZDtsai5jdXJyZW50PWU7aWYoWD09PXJqKXRocm93IGI9d2osVGooYSxjKSxNaihhLGMpLFooYSksYjtpZihudWxsPT09Vilzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9WCxVPW51bGwsZCl7Y2FzZSBxajpjYXNlIHJqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBzajpSaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdGo6TWooYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPVhqKGUpKTtpZigxMDczNzQxODIzPT09eGomJihlPWJqK0NqLWNnKCksMTA8ZSkpe2lmKEJqKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7VGooYSxjKTticmVha319Zj1PaihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPXBlKFlqLmJpbmQobnVsbCxhKSxlKTticmVha31ZaihhKTticmVhaztjYXNlIHVqOk1qKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9WGooZSkpO2lmKEJqJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO1RqKGEsYyk7YnJlYWt9ZT1PaihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09eWo/ZD0xMCooMTA3Mzc0MTgyMS15aiktY2coKToxMDczNzQxODIzPT09eGo/ZD0wOihkPTEwKigxMDczNzQxODIxLXhqKS01RTMsZT1jZygpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqa2ooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9cGUoWWouYmluZChudWxsLGEpLGQpO2JyZWFrfVlqKGEpO2JyZWFrO2Nhc2Ugdmo6aWYoMTA3Mzc0MTgyMyE9PXhqJiZudWxsIT09emope2Y9eGo7dmFyIGc9emo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9Y2coKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXtNaihhLGMpO2EudGltZW91dEhhbmRsZT1cbnBlKFlqLmJpbmQobnVsbCxhKSxkKTticmVha319WWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gUWouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIExqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT09PWIpWWooYSk7ZWxzZXtpZigoVCYob2p8cGopKSE9PVMpdGhyb3cgRXJyb3IodSgzMjcpKTtTaigpO2E9PT1VJiZiPT09V3x8VGooYSxiKTtpZihudWxsIT09Vil7dmFyIGM9VDtUfD1vajt2YXIgZD1VaihhKTtkbyB0cnl7WmooKTticmVha31jYXRjaChlKXtXaihhLGUpfXdoaWxlKDEpO3JnKCk7VD1jO2xqLmN1cnJlbnQ9ZDtpZihYPT09cmopdGhyb3cgYz13aixUaihhLGIpLE1qKGEsYiksWihhKSxjO2lmKG51bGwhPT1WKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtVPW51bGw7WWooYSk7WihhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBhaygpe2lmKG51bGwhPT1Hail7dmFyIGE9R2o7R2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtSaihjLGEpO1ooYyl9KTtqZygpfX1mdW5jdGlvbiBiayhhLGIpe3ZhciBjPVQ7VHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtUPWMsVD09PVMmJmpnKCl9fWZ1bmN0aW9uIGNrKGEsYil7dmFyIGM9VDtUJj0tMjtUfD1uajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtUPWMsVD09PVMmJmpnKCl9fVxuZnVuY3Rpb24gVGooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscWUoYykpO2lmKG51bGwhPT1WKWZvcihjPVYucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTp2YXIgZT1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWUmJnZvaWQgMCE9PWUmJkZmKGQpO2JyZWFrO2Nhc2UgMzpuaChkKTtHZihkKTticmVhaztjYXNlIDU6cGgoZCk7YnJlYWs7Y2FzZSA0Om5oKGQpO2JyZWFrO2Nhc2UgMTM6RyhNLGQpO2JyZWFrO2Nhc2UgMTk6RyhNLGQpO2JyZWFrO2Nhc2UgMTA6dGcoZCl9Yz1jLnJldHVybn1VPWE7Vj1haChhLmN1cnJlbnQsbnVsbCxiKTtXPWI7WD1xajt3aj1udWxsO3lqPXhqPTEwNzM3NDE4MjM7emo9bnVsbDtBaj0wO0JqPSExfVxuZnVuY3Rpb24gV2ooYSxiKXtkb3t0cnl7cmcoKTtNaCgpO2lmKG51bGw9PT1WfHxudWxsPT09Vi5yZXR1cm4pcmV0dXJuIFg9cmosd2o9YixudWxsO2E6e3ZhciBjPWEsZD1WLnJldHVybixlPVYsZj1iO2I9VztlLmVmZmVjdFRhZ3w9MjA0ODtlLmZpcnN0RWZmZWN0PWUubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1mJiZcIm9iamVjdFwiPT09dHlwZW9mIGYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnRoZW4pe3ZhciBnPWYsaD0wIT09KE0uY3VycmVudCYxKSxrPWQ7ZG97dmFyIGw7aWYobD0xMz09PWsudGFnKXt2YXIgbT1rLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PW0pbD1udWxsIT09bS5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIEM9ay5tZW1vaXplZFByb3BzO2w9dm9pZCAwPT09Qy5mYWxsYmFjaz8hMTohMCE9PUMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6aD8hMTohMH19aWYobCl7dmFyIHk9ay51cGRhdGVRdWV1ZTtpZihudWxsPT09eSl7dmFyIEg9bmV3IFNldDtcbkguYWRkKGcpO2sudXBkYXRlUXVldWU9SH1lbHNlIHkuYWRkKGcpO2lmKDA9PT0oay5tb2RlJjIpKXtrLmVmZmVjdFRhZ3w9NjQ7ZS5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1lLnRhZylpZihudWxsPT09ZS5hbHRlcm5hdGUpZS50YWc9MTc7ZWxzZXt2YXIgej1CZygxMDczNzQxODIzLG51bGwpO3oudGFnPTI7RGcoZSx6KX1lLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1mPXZvaWQgMDtlPWI7dmFyIHRhPWMucGluZ0NhY2hlO251bGw9PT10YT8odGE9Yy5waW5nQ2FjaGU9bmV3IGVqLGY9bmV3IFNldCx0YS5zZXQoZyxmKSk6KGY9dGEuZ2V0KGcpLHZvaWQgMD09PWYmJihmPW5ldyBTZXQsdGEuc2V0KGcsZikpKTtpZighZi5oYXMoZSkpe2YuYWRkKGUpO3ZhciByPWRrLmJpbmQobnVsbCxjLGcsZSk7Zy50aGVuKHIscil9ay5lZmZlY3RUYWd8PTQwOTY7ay5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9az1rLnJldHVybn13aGlsZShudWxsIT09ayk7Zj1FcnJvcigoV2EoZS50eXBlKXx8XG5cIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrWGEoZSkpfVghPT12aiYmKFg9c2opO2Y9TmkoZixlKTtrPWQ7ZG97c3dpdGNoKGsudGFnKXtjYXNlIDM6Zz1mO2suZWZmZWN0VGFnfD00MDk2O2suZXhwaXJhdGlvblRpbWU9Yjt2YXIgeD1maihrLGcsYik7RWcoayx4KTticmVhayBhO2Nhc2UgMTpnPWY7dmFyIEE9ay50eXBlLHA9ay5zdGF0ZU5vZGU7aWYoMD09PShrLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1wJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcC5jb21wb25lbnREaWRDYXRjaCYmXG4obnVsbD09PWpqfHwhamouaGFzKHApKSkpe2suZWZmZWN0VGFnfD00MDk2O2suZXhwaXJhdGlvblRpbWU9Yjt2YXIgdD1paihrLGcsYik7RWcoayx0KTticmVhayBhfX1rPWsucmV0dXJufXdoaWxlKG51bGwhPT1rKX1WPWVrKFYpfWNhdGNoKHYpe2I9djtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiBVaigpe3ZhciBhPWxqLmN1cnJlbnQ7bGouY3VycmVudD1MaDtyZXR1cm4gbnVsbD09PWE/TGg6YX1mdW5jdGlvbiBJZyhhLGIpe2E8eGomJjI8YSYmKHhqPWEpO251bGwhPT1iJiZhPHlqJiYyPGEmJih5aj1hLHpqPWIpfWZ1bmN0aW9uIEpnKGEpe2E+QWomJihBaj1hKX1mdW5jdGlvbiBaaigpe2Zvcig7bnVsbCE9PVY7KVY9ZmsoVil9ZnVuY3Rpb24gVmooKXtmb3IoO251bGwhPT1WJiYhT2YoKTspVj1mayhWKX1cbmZ1bmN0aW9uIGZrKGEpe3ZhciBiPWdrKGEuYWx0ZXJuYXRlLGEsVyk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1layhhKSk7bWouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gZWsoYSl7Vj1hO2Rve3ZhciBiPVYuYWx0ZXJuYXRlO2E9Vi5yZXR1cm47aWYoMD09PShWLmVmZmVjdFRhZyYyMDQ4KSl7YTp7dmFyIGM9YjtiPVY7dmFyIGQ9Vzt2YXIgZT1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgMTU6Y2FzZSAwOmJyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkZmKGIpO2JyZWFrO2Nhc2UgMzpuaChiKTtHZihiKTtlPWIuc3RhdGVOb2RlO2UucGVuZGluZ0NvbnRleHQmJihlLmNvbnRleHQ9ZS5wZW5kaW5nQ29udGV4dCxlLnBlbmRpbmdDb250ZXh0PW51bGwpOyhudWxsPT09Y3x8bnVsbD09PWMuY2hpbGQpJiZraShiKSYmQ2koYik7SWkoYik7YnJlYWs7Y2FzZSA1OnBoKGIpO2Q9bGgoa2guY3VycmVudCk7dmFyIGY9Yi50eXBlO2lmKG51bGwhPT1jJiZudWxsIT1iLnN0YXRlTm9kZSlKaShjLGIsZixlLGQpLGMucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNlIGlmKGUpe3ZhciBnPVxubGgoaWguY3VycmVudCk7aWYoa2koYikpe2U9Yjt2YXIgaD1lLnN0YXRlTm9kZTtjPWUudHlwZTt2YXIgaz1lLm1lbW9pemVkUHJvcHMsbD1kO2hbdWVdPWU7aFt2ZV09aztmPXZvaWQgMDtkPWg7c3dpdGNoKGMpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8ZGMubGVuZ3RoO2grKylGKGRjW2hdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkJiKGQsayk7RihcImludmFsaWRcIixkKTskZChsLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWsubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7JGQobCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkxiKGQsayksRihcImludmFsaWRcIixkKSwkZChsLFwib25DaGFuZ2VcIil9WWQoYyxrKTtoPW51bGw7Zm9yKGYgaW4gaylrLmhhc093blByb3BlcnR5KGYpJiYoZz1rW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBnP2QudGV4dENvbnRlbnQhPT1nJiYoaD1bXCJjaGlsZHJlblwiLGddKTpcIm51bWJlclwiPT09dHlwZW9mIGcmJmQudGV4dENvbnRlbnQhPT1cIlwiK2cmJihoPVtcImNoaWxkcmVuXCIsXCJcIitnXSk6aWEuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWcmJiRkKGwsZikpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjp5YihkKTtHYihkLGssITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnliKGQpO05iKGQsayk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLm9uQ2xpY2smJlxuKGQub25jbGljaz1hZSl9Zj1oO2UudXBkYXRlUXVldWU9ZjtlPW51bGwhPT1mPyEwOiExO2UmJkNpKGIpfWVsc2V7Yz1iO2w9ZjtrPWU7aD05PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudDtnPT09T2IuaHRtbCYmKGc9UGIobCkpO2c9PT1PYi5odG1sP1wic2NyaXB0XCI9PT1sPyhrPWguY3JlYXRlRWxlbWVudChcImRpdlwiKSxrLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGg9ay5yZW1vdmVDaGlsZChrLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGsuaXM/aD1oLmNyZWF0ZUVsZW1lbnQobCx7aXM6ay5pc30pOihoPWguY3JlYXRlRWxlbWVudChsKSxcInNlbGVjdFwiPT09bCYmKGw9aCxrLm11bHRpcGxlP2wubXVsdGlwbGU9ITA6ay5zaXplJiYobC5zaXplPWsuc2l6ZSkpKTpoPWguY3JlYXRlRWxlbWVudE5TKGcsbCk7az1oO2tbdWVdPWM7a1t2ZV09ZTtIaShrLGIsITEsITEpO2Iuc3RhdGVOb2RlPWs7bD1mO2M9ZTt2YXIgbT1kLEM9WmQobCxjKTtzd2l0Y2gobCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuayk7ZD1jO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihkPTA7ZDxkYy5sZW5ndGg7ZCsrKUYoZGNbZF0sayk7ZD1jO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsayk7RihcImxvYWRcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixrKTtGKFwic3VibWl0XCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGspO2Q9YzticmVhaztjYXNlIFwiaW5wdXRcIjpCYihrLGMpO2Q9QWIoayxjKTtGKFwiaW52YWxpZFwiLGspOyRkKG0sXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZD1JYihrLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjprLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhYy5tdWx0aXBsZX07ZD1uKHt9LGMse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsayk7JGQobSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkxiKGssXG5jKTtkPUtiKGssYyk7RihcImludmFsaWRcIixrKTskZChtLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpkPWN9WWQobCxkKTtoPXZvaWQgMDtnPWw7dmFyIHk9ayxIPWQ7Zm9yKGggaW4gSClpZihILmhhc093blByb3BlcnR5KGgpKXt2YXIgej1IW2hdO1wic3R5bGVcIj09PWg/V2QoeSx6KTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyh6PXo/ei5fX2h0bWw6dm9pZCAwLG51bGwhPXomJlNiKHkseikpOlwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiB6PyhcInRleHRhcmVhXCIhPT1nfHxcIlwiIT09eikmJlRiKHkseik6XCJudW1iZXJcIj09PXR5cGVvZiB6JiZUYih5LFwiXCIreik6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKGlhLmhhc093blByb3BlcnR5KGgpP251bGwhPXomJiRkKG0saCk6bnVsbCE9eiYmdmIoeSxoLHosQykpfXN3aXRjaChsKXtjYXNlIFwiaW5wdXRcIjp5YihrKTtcbkdiKGssYywhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eWIoayk7TmIoayxjKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9Yy52YWx1ZSYmay5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrdWIoYy52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkPWs7ZC5tdWx0aXBsZT0hIWMubXVsdGlwbGU7az1jLnZhbHVlO251bGwhPWs/SmIoZCwhIWMubXVsdGlwbGUsaywhMSk6bnVsbCE9Yy5kZWZhdWx0VmFsdWUmJkpiKGQsISFjLm11bHRpcGxlLGMuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihrLm9uY2xpY2s9YWUpfShlPW5lKGYsZSkpJiZDaShiKX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIGlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO2JyZWFrO2Nhc2UgNjppZihjJiZudWxsIT1iLnN0YXRlTm9kZSlLaShjLGIsYy5tZW1vaXplZFByb3BzLGUpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PVxudHlwZW9mIGUmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO2Q9bGgoa2guY3VycmVudCk7bGgoaWguY3VycmVudCk7a2koYik/KGU9YixmPWUuc3RhdGVOb2RlLGQ9ZS5tZW1vaXplZFByb3BzLGZbdWVdPWUsKGU9Zi5ub2RlVmFsdWUhPT1kKSYmQ2koYikpOihmPWIsZT0oOT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGUpLGVbdWVdPWYsYi5zdGF0ZU5vZGU9ZSl9YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOkcoTSxiKTtlPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1kO2JyZWFrIGF9ZT1udWxsIT09ZTtmPSExO251bGw9PT1jP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYma2koYik6KGQ9Yy5tZW1vaXplZFN0YXRlLGY9bnVsbCE9PWQsZXx8bnVsbD09PWR8fChkPWMuY2hpbGQuc2libGluZyxudWxsIT09ZCYmKGs9Yi5maXJzdEVmZmVjdCxcbm51bGwhPT1rPyhiLmZpcnN0RWZmZWN0PWQsZC5uZXh0RWZmZWN0PWspOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1kLGQubmV4dEVmZmVjdD1udWxsKSxkLmVmZmVjdFRhZz04KSkpO2lmKGUmJiFmJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YyYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVg9PT1xaiYmKFg9dGopO2Vsc2V7aWYoWD09PXFqfHxYPT09dGopWD11ajswIT09QWomJm51bGwhPT1VJiYoTWooVSxXKSxOaihVLEFqKSl9aWYoZXx8ZiliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0Om5oKGIpO0lpKGIpO2JyZWFrO2Nhc2UgMTA6dGcoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpMKGIudHlwZSkmJkZmKGIpO2JyZWFrO2Nhc2UgMTk6RyhNLGIpO2U9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1cbmUpYnJlYWs7Zj0wIT09KGIuZWZmZWN0VGFnJjY0KTtrPWUucmVuZGVyaW5nO2lmKG51bGw9PT1rKWlmKGYpTGkoZSwhMSk7ZWxzZXtpZihYIT09cWp8fG51bGwhPT1jJiYwIT09KGMuZWZmZWN0VGFnJjY0KSlmb3IoYz1iLmNoaWxkO251bGwhPT1jOyl7az1xaChjKTtpZihudWxsIT09ayl7Yi5lZmZlY3RUYWd8PTY0O0xpKGUsITEpO2Y9ay51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWUubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWUubGFzdEVmZmVjdDtlPWQ7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZD1mLGM9ZSxkLmVmZmVjdFRhZyY9MixkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwsaz1kLmFsdGVybmF0ZSxudWxsPT09az8oZC5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZC5leHBpcmF0aW9uVGltZT1jLGQuY2hpbGQ9bnVsbCxcbmQubWVtb2l6ZWRQcm9wcz1udWxsLGQubWVtb2l6ZWRTdGF0ZT1udWxsLGQudXBkYXRlUXVldWU9bnVsbCxkLmRlcGVuZGVuY2llcz1udWxsKTooZC5jaGlsZEV4cGlyYXRpb25UaW1lPWsuY2hpbGRFeHBpcmF0aW9uVGltZSxkLmV4cGlyYXRpb25UaW1lPWsuZXhwaXJhdGlvblRpbWUsZC5jaGlsZD1rLmNoaWxkLGQubWVtb2l6ZWRQcm9wcz1rLm1lbW9pemVkUHJvcHMsZC5tZW1vaXplZFN0YXRlPWsubWVtb2l6ZWRTdGF0ZSxkLnVwZGF0ZVF1ZXVlPWsudXBkYXRlUXVldWUsYz1rLmRlcGVuZGVuY2llcyxkLmRlcGVuZGVuY2llcz1udWxsPT09Yz9udWxsOntleHBpcmF0aW9uVGltZTpjLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpjLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmMucmVzcG9uZGVyc30pLGY9Zi5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyLGIpO2I9Yi5jaGlsZDticmVhayBhfWM9Yy5zaWJsaW5nfX1lbHNle2lmKCFmKWlmKGM9cWgoayksbnVsbCE9PWMpe2lmKGIuZWZmZWN0VGFnfD1cbjY0LGY9ITAsZD1jLnVwZGF0ZVF1ZXVlLG51bGwhPT1kJiYoYi51cGRhdGVRdWV1ZT1kLGIuZWZmZWN0VGFnfD00KSxMaShlLCEwKSxudWxsPT09ZS50YWlsJiZcImhpZGRlblwiPT09ZS50YWlsTW9kZSl7Yj1iLmxhc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0O251bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpO2JyZWFrfX1lbHNlIGNnKCk+ZS50YWlsRXhwaXJhdGlvbiYmMTxkJiYoYi5lZmZlY3RUYWd8PTY0LGY9ITAsTGkoZSwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9ZC0xKTtlLmlzQmFja3dhcmRzPyhrLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWspOihkPWUubGFzdCxudWxsIT09ZD9kLnNpYmxpbmc9azpiLmNoaWxkPWssZS5sYXN0PWspfWlmKG51bGwhPT1lLnRhaWwpezA9PT1lLnRhaWxFeHBpcmF0aW9uJiYoZS50YWlsRXhwaXJhdGlvbj1jZygpKzUwMCk7ZD1lLnRhaWw7ZS5yZW5kZXJpbmc9ZDtlLnRhaWw9ZC5zaWJsaW5nO2UubGFzdEVmZmVjdD1cbmIubGFzdEVmZmVjdDtkLnNpYmxpbmc9bnVsbDtlPU0uY3VycmVudDtlPWY/ZSYxfDI6ZSYxO0koTSxlLGIpO2I9ZDticmVhayBhfWJyZWFrO2Nhc2UgMjA6YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fWI9bnVsbH1lPVY7aWYoMT09PVd8fDEhPT1lLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Y9MDtmb3IoZD1lLmNoaWxkO251bGwhPT1kOyljPWQuZXhwaXJhdGlvblRpbWUsaz1kLmNoaWxkRXhwaXJhdGlvblRpbWUsYz5mJiYoZj1jKSxrPmYmJihmPWspLGQ9ZC5zaWJsaW5nO2UuY2hpbGRFeHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVYuZmlyc3RFZmZlY3QpLG51bGwhPT1WLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Vi5maXJzdEVmZmVjdCksXG5hLmxhc3RFZmZlY3Q9Vi5sYXN0RWZmZWN0KSwxPFYuZWZmZWN0VGFnJiYobnVsbCE9PWEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1WOmEuZmlyc3RFZmZlY3Q9VixhLmxhc3RFZmZlY3Q9VikpfWVsc2V7Yj1NaShWLFcpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1WLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7Vj1hfXdoaWxlKG51bGwhPT1WKTtYPT09cWomJihYPXZqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBYaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIFlqKGEpe3ZhciBiPWRnKCk7ZmcoOTksaWsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gaWsoYSxiKXtTaigpO2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9WGooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJlxuKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VSYmKFY9VT1udWxsLFc9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VDtUfD1wajttai5jdXJyZW50PW51bGw7bGU9TGQ7dmFyIGc9ZmUoKTtpZihnZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsbT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7XG50cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKERiKXtoPW51bGw7YnJlYWsgYX12YXIgQz0wLHk9LTEsSD0tMSx6PTAsdGE9MCxyPWcseD1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7ciE9PWh8fDAhPT1sJiYzIT09ci5ub2RlVHlwZXx8KHk9QytsKTtyIT09bXx8MCE9PWsmJjMhPT1yLm5vZGVUeXBlfHwoSD1DK2spOzM9PT1yLm5vZGVUeXBlJiYoQys9ci5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9ci5maXJzdENoaWxkKSlicmVhazt4PXI7cj1BfWZvcig7Oyl7aWYocj09PWcpYnJlYWsgYjt4PT09aCYmKyt6PT09bCYmKHk9Qyk7eD09PW0mJisrdGE9PT1rJiYoSD1DKTtpZihudWxsIT09KEE9ci5uZXh0U2libGluZykpYnJlYWs7cj14O3g9ci5wYXJlbnROb2RlfXI9QX1oPS0xPT09eXx8LTE9PT1IP251bGw6e3N0YXJ0OnksZW5kOkh9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO21lPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O1xuTGQ9ITE7WT1lO2RvIHRyeXtqaygpfWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHA9WS5lZmZlY3RUYWc7cCYxNiYmVGIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocCYxMjgpe3ZhciB0PVkuYWx0ZXJuYXRlO2lmKG51bGwhPT10KXt2YXIgdj10LnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2gocCYxMDM4KXtjYXNlIDI6JGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjokaShZKTtZLmVmZmVjdFRhZyY9LTM7YWooWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPS0xMDI1O2FqKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDphaihZLmFsdGVybmF0ZSxcblkpO2JyZWFrO2Nhc2UgODpsPVksWGkoZyxsLGgpLFlpKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaChEYil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtSaShZLERiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dj1tZTt0PWZlKCk7cD12LmZvY3VzZWRFbGVtO2g9di5zZWxlY3Rpb25SYW5nZTtpZih0IT09cCYmcCYmcC5vd25lckRvY3VtZW50JiZlZShwLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHApKXtudWxsIT09aCYmZ2UocCkmJih0PWguc3RhcnQsdj1oLmVuZCx2b2lkIDA9PT12JiYodj10KSxcInNlbGVjdGlvblN0YXJ0XCJpbiBwPyhwLnNlbGVjdGlvblN0YXJ0PXQscC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odixwLnZhbHVlLmxlbmd0aCkpOih2PSh0PXAub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZ0LmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksbD1wLnRleHRDb250ZW50Lmxlbmd0aCxcbmc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXYuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD1kZShwLGcpLG09ZGUocCxoKSxsJiZtJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09bC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PW0ubm9kZXx8di5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKHQ9dC5jcmVhdGVSYW5nZSgpLHQuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8odi5hZGRSYW5nZSh0KSx2LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKToodC5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx2LmFkZFJhbmdlKHQpKSkpKSk7dD1bXTtmb3Iodj1wO3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmdC5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09XG50eXBlb2YgcC5mb2N1cyYmcC5mb2N1cygpO2ZvcihwPTA7cDx0Lmxlbmd0aDtwKyspdj10W3BdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfW1lPW51bGw7TGQ9ISFsZTtsZT1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHA9ZDtudWxsIT09WTspe3ZhciBEaD1ZLmVmZmVjdFRhZztpZihEaCYzNil7dmFyIGNjPVkuYWx0ZXJuYXRlO3Q9WTt2PXA7c3dpdGNoKHQudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDE2LDMyLHQpO2JyZWFrO2Nhc2UgMTp2YXIgZGQ9dC5zdGF0ZU5vZGU7aWYodC5lZmZlY3RUYWcmNClpZihudWxsPT09Y2MpZGQuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoaz10LmVsZW1lbnRUeXBlPT09dC50eXBlP2NjLm1lbW9pemVkUHJvcHM6bWcodC50eXBlLGNjLm1lbW9pemVkUHJvcHMpO2RkLmNvbXBvbmVudERpZFVwZGF0ZShoayxjYy5tZW1vaXplZFN0YXRlLGRkLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgRWg9XG50LnVwZGF0ZVF1ZXVlO251bGwhPT1FaCYmS2codCxFaCxkZCx2KTticmVhaztjYXNlIDM6dmFyIEZoPXQudXBkYXRlUXVldWU7aWYobnVsbCE9PUZoKXtnPW51bGw7aWYobnVsbCE9PXQuY2hpbGQpc3dpdGNoKHQuY2hpbGQudGFnKXtjYXNlIDU6Zz10LmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Zz10LmNoaWxkLnN0YXRlTm9kZX1LZyh0LEZoLGcsdil9YnJlYWs7Y2FzZSA1OnZhciB4az10LnN0YXRlTm9kZTtudWxsPT09Y2MmJnQuZWZmZWN0VGFnJjQmJm5lKHQudHlwZSx0Lm1lbW9pemVkUHJvcHMpJiZ4ay5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmlmKG51bGw9PT10Lm1lbW9pemVkU3RhdGUpe3ZhciBEaT10LmFsdGVybmF0ZTtpZihudWxsIT09RGkpe3ZhciBFaT1EaS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1FaSl7dmFyIEZpPUVpLmRlaHlkcmF0ZWQ7bnVsbCE9PUZpJiZMYyhGaSl9fX1icmVhaztcbmNhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MykpO319aWYoRGgmMTI4KXt0PXZvaWQgMDt2YXIgd2Q9WS5yZWY7aWYobnVsbCE9PXdkKXt2YXIgR2k9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6dD1HaTticmVhaztkZWZhdWx0OnQ9R2l9XCJmdW5jdGlvblwiPT09dHlwZW9mIHdkP3dkKHQpOndkLmN1cnJlbnQ9dH19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPW51bGw7WWYoKTtUPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihEailEaj0hMSxFaj1hLEZqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihqaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09SWo/SGorKzooSGo9XG4wLElqPWEpOkhqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIGtrJiZrayhjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKGdqKXRocm93IGdqPSExLGE9aGosaGo9bnVsbCxhO2lmKChUJm5qKSE9PVMpcmV0dXJuIG51bGw7amcoKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBqaygpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmVGkoWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fERqfHwoRGo9ITAsZ2coOTcsZnVuY3Rpb24oKXtTaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1mdW5jdGlvbiBTaigpe2lmKDkwIT09Rmope3ZhciBhPTk3PEZqPzk3OkZqO0ZqPTkwO3JldHVybiBmZyhhLGxrKX19XG5mdW5jdGlvbiBsaygpe2lmKG51bGw9PT1FailyZXR1cm4hMTt2YXIgYT1FajtFaj1udWxsO2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVQ7VHw9cGo7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpVaSgxMjgsMCxjKSxVaSgwLDY0LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVQ9YjtqZygpO3JldHVybiEwfWZ1bmN0aW9uIG1rKGEsYixjKXtiPU5pKGMsYik7Yj1maihhLGIsMTA3Mzc0MTgyMyk7RGcoYSxiKTthPUtqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9XG5mdW5jdGlvbiBSaShhLGIpe2lmKDM9PT1hLnRhZyltayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe21rKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWpqfHwhamouaGFzKGQpKSl7YT1OaShiLGEpO2E9aWooYyxhLDEwNzM3NDE4MjMpO0RnKGMsYSk7Yz1LaihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIGRrKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VT09PWEmJlc9PT1jP1g9PT11anx8WD09PXRqJiYxMDczNzQxODIzPT09eGomJmNnKCktYmo8Q2o/VGooYSxXKTpCaj0hMDpQaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPT09YyYmKGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wLGEuZmluaXNoZWRXb3JrPW51bGwpLFooYSkpKX1mdW5jdGlvbiBkaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPVBnKCksYj1RZyhiLGEsbnVsbCkpO2E9S2ooYSxiKTtudWxsIT09YSYmWihhKX12YXIgZ2s7XG5naz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXdnPSEwO2Vsc2V7aWYoZDxjKXt3Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzp3aShiKTtsaSgpO2JyZWFrO2Nhc2UgNTpvaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0Om1oKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpzZyhiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZD49YylyZXR1cm4geWkoYSxiLGMpO0koTSxNLmN1cnJlbnQmXG4xLGIpO2I9b2koYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEsYik7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gQmkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQsYik7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuIG9pKGEsYixjKX13Zz0hMX19ZWxzZSB3Zz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLEouY3VycmVudCk7dmcoYixjKTtlPUloKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtNaCgpO2lmKEwoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZPZyhiLGQsZyxhKTtlLnVwZGF0ZXI9U2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtXZyhiLGQsYSxjKTtiPXZpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO1ZhKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O1xuZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1uayhlKTthPW1nKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPXNpKG51bGwsYixlLGEsYyk7YnJlYWs7Y2FzZSAxOmI9dWkobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDExOmI9bmkobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDE0OmI9cGkobnVsbCxiLGUsbWcoZS50eXBlLGEpLGQsYyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLHNpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLHVpKGEsYixkLGUsYyk7Y2FzZSAzOndpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50OlxubnVsbDtIZyhiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKWxpKCksYj1vaShhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpZGk9cmUoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxjaT1iLGU9ZWk9ITA7aWYoZSlmb3IoYz1naChiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksbGkoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBvaChiKSxudWxsPT09YSYmaWkoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixvZShkLGUpP2c9bnVsbDpudWxsIT09ZiYmb2UoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksdGkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPVxuYi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmaWkoYiksbnVsbDtjYXNlIDEzOnJldHVybiB5aShhLGIsYyk7Y2FzZSA0OnJldHVybiBtaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1maChiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bWcoZCxlKSxuaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O1xuZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7c2coYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtmPW9mKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9b2koYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPUJnKGMsbnVsbCksbC50YWc9MixEZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPVxuYyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTt1ZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdmcoYixjKSxlPXhnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7XG5jYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPW1nKGUsYi5wZW5kaW5nUHJvcHMpLGY9bWcoZS50eXBlLGYpLHBpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiByaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEpmKGIpKTphPSExLHZnKGIsYyksVWcoYixkLGUsYyksV2coYixkLGUsYyksdmkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBCaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBraz1udWxsLFdpPW51bGw7XG5mdW5jdGlvbiBvayhhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtraz1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtXaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIHBrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gZ2koYSxiLGMsZCl7cmV0dXJuIG5ldyBwayhhLGIsYyxkKX1cbmZ1bmN0aW9uIHFpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gbmsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIHFpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1PYSlyZXR1cm4gMTE7aWYoYT09PVJhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIGFoKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9Z2koYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBjaChhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcWkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgSWE6cmV0dXJuIGVoKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgTmE6Zz04O2V8PTc7YnJlYWs7Y2FzZSBKYTpnPTg7ZXw9MTticmVhaztjYXNlIEthOnJldHVybiBhPWdpKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9S2EsYS50eXBlPUthLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgUGE6cmV0dXJuIGE9Z2koMTMsYyxiLGUpLGEudHlwZT1QYSxhLmVsZW1lbnRUeXBlPVBhLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgUWE6cmV0dXJuIGE9Z2koMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9UWEsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIExhOmc9XG4xMDticmVhayBhO2Nhc2UgTWE6Zz05O2JyZWFrIGE7Y2FzZSBPYTpnPTExO2JyZWFrIGE7Y2FzZSBSYTpnPTE0O2JyZWFrIGE7Y2FzZSBTYTpnPTE2O2Q9bnVsbDticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9Z2koZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBlaChhLGIsYyxkKXthPWdpKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBiaChhLGIsYyl7YT1naSg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBkaChhLGIsYyl7Yj1naSg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBQaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIE5qKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gUmooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiByayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1QZygpLGc9TWcuc3VzcGVuc2U7Zj1RZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihlYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9QmcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTtEZyhlLGIpO1JnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gc2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiB0ayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gdWsoYSxiKXt0ayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmdGsoYSxiKX1cbmZ1bmN0aW9uIHZrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6SGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319amM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9bGcoUGcoKSwxNTAsMTAwKTtSZyhhLGIpO3VrKGEsYil9fTtrYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXtQZygpO3ZhciBiPWtnKys7UmcoYSxiKTt1ayhhLGIpfX07bGM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9UGcoKTtiPVFnKGIsYSxudWxsKTtSZyhhLGIpO3VrKGEsYil9fTtcblphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6RWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPXllKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt6YihkKTtFYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkpiKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiB3ayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgcWsoYSxiLGMpLGU9Z2koMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7YVt3ZV09ZC5jdXJyZW50O2MmJjAhPT1iJiZ3Yyg5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9d2sucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdDtyayhhLGMsbnVsbCx2b2lkIDA9PT1iP251bGw6Yil9O3drLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtyayhudWxsLGIsbnVsbCx2b2lkIDA9PT1hP251bGw6YSl9O1xuZnVuY3Rpb24geWsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWViPWJrO2ZiPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVQ7VHw9NDt0cnl7cmV0dXJuIGZnKDk4LGEuYmluZChudWxsLGIsYyxkKSl9ZmluYWxseXtUPWUsVD09PVMmJmpnKCl9fTtnYj1mdW5jdGlvbigpeyhUJigxfG9qfHBqKSk9PT1TJiYoYWsoKSxTaigpKX07aGI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1UO1R8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX07XG5mdW5jdGlvbiB6ayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHdrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gQWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1zayhnKTtoLmNhbGwoYSl9fXJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9emsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9c2soZyk7ay5jYWxsKGEpfX1jayhmdW5jdGlvbigpe3JrKGIsZyxhLGUpfSl9cmV0dXJuIHNrKGcpfWZ1bmN0aW9uIEJrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXlrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIHZrKGEsYixudWxsLGMpfVxudmFyIENrPXtjcmVhdGVQb3J0YWw6QmssZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1pYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe2lmKCF5ayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBBayhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtpZigheWsoYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gQWsobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe2lmKCF5ayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO1xuaWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gQWsoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7aWYoIXlrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhjayhmdW5jdGlvbigpe0FrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIEJrLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpiayxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtpZigoVCYob2p8cGopKSE9PVMpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1UO1R8PTE7dHJ5e3JldHVybiBmZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtUPWMsamcoKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0NjLFxueGUseWUsQ2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLGZhLFNjLGZ1bmN0aW9uKGEpe3lhKGEsUmMpfSxjYixkYixQZCxCYSxTaix7Y3VycmVudDohMX1dfX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gb2sobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOkVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1pYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOkZjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTEuMFwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7dmFyIERrPXtkZWZhdWx0OkNrfSxFaz1EayYmQ2t8fERrO21vZHVsZS5leHBvcnRzPUVrLmRlZmF1bHR8fEVrO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xNy4wXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0LEE9d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSxCPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIHcmJlxuXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEM9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUN9fXZhciBEPSExLEU9bnVsbCxGPS0xLEc9NSxIPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1IfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rz0wPGE/TWF0aC5mbG9vcigxRTMvYSk6MzMuMzN9O3ZhciBJPW5ldyBNZXNzYWdlQ2hhbm5lbCxKPUkucG9ydDI7SS5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1FKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0g9YStHO3RyeXtFKCEwLGEpP0oucG9zdE1lc3NhZ2UobnVsbCk6KEQ9ITEsRT1udWxsKX1jYXRjaChiKXt0aHJvdyBKLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEQ9ITF9O2Y9ZnVuY3Rpb24oYSl7RT1hO0R8fChEPSEwLEoucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Rj15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEYpO0Y9LTF9fWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPU1hdGguZmxvb3IoKGMtMSkvMiksZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8TChlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTShhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTihhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5MKG4sYykpdm9pZCAwIT09ciYmMD5MKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5MKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBPPVtdLFA9W10sUT0xLFI9bnVsbCxTPTMsVD0hMSxVPSExLFY9ITE7XG5mdW5jdGlvbiBXKGEpe2Zvcih2YXIgYj1NKFApO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTihQKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU4oUCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxLKE8sYik7ZWxzZSBicmVhaztiPU0oUCl9fWZ1bmN0aW9uIFgoYSl7Vj0hMTtXKGEpO2lmKCFVKWlmKG51bGwhPT1NKE8pKVU9ITAsZihZKTtlbHNle3ZhciBiPU0oUCk7bnVsbCE9PWImJmcoWCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBZKGEsYil7VT0hMTtWJiYoVj0hMSxoKCkpO1Q9ITA7dmFyIGM9Uzt0cnl7VyhiKTtmb3IoUj1NKE8pO251bGwhPT1SJiYoIShSLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVIuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1IuY2FsbGJhY2s9bnVsbDtTPVIucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFIuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9SLmNhbGxiYWNrPWU6Uj09PU0oTykmJk4oTyk7VyhiKX1lbHNlIE4oTyk7Uj1NKE8pfWlmKG51bGwhPT1SKXZhciBtPSEwO2Vsc2V7dmFyIG49TShQKTtudWxsIT09biYmZyhYLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtSPW51bGwsUz1jLFQ9ITF9fVxuZnVuY3Rpb24gWihhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBhYT1sO2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UztTPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtTPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUyl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9U312YXIgYz1TO1M9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1M9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpaKGEpfWVsc2UgYz1aKGEpLGU9ZDtjPWUrYzthPXtpZDpRKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxLKFAsYSksbnVsbD09PU0oTykmJmE9PT1NKFApJiYoVj9oKCk6Vj0hMCxnKFgsZS1kKSkpOihhLnNvcnRJbmRleD1jLEsoTyxhKSxVfHxUfHwoVT0hMCxmKFkpKSk7cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVM7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UztTPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1M9Y319fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFN9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1coYSk7dmFyIGI9TShPKTtyZXR1cm4gYiE9PVImJm51bGwhPT1SJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFIuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9YWE7ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1V8fFR8fChVPSEwLGYoWSkpfTtcbmV4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTShPKX07ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjExLjBcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xudmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtmdW5jdGlvbiB5KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgdDpjYXNlIHI6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24geihhKXtyZXR1cm4geShhKT09PW19XG5leHBvcnRzLnR5cGVPZj15O2V4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXZ8fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eCl9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSl8fHkoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9ejtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWh9O1xuZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT10fTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsImZ1bmN0aW9uIHZhbHVlT2Yob2JqKSB7XG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xufVxuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgLy8gVGVzdCBmb3Igc3RyaWN0IGVxdWFsaXR5IGZpcnN0LlxuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgLy8gT3RoZXJ3aXNlLCBpZiBlaXRoZXIgb2YgdGhlbSA9PSBudWxsIHRoZXkgYXJlIG5vdCBlcXVhbC5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiAoXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXG4gICAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICAgIGEuZXZlcnkoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcbiAgICB2YXIgYlZhbHVlID0gdmFsdWVPZihiKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgYSwgYikpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBndWQgZnJvbSAnZ3VkJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBndWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSBcIm1pbmktY3JlYXRlLXJlYWN0LWNvbnRleHRcIjtcblxuY29uc3QgY3JlYXRlTmFtZWRDb250ZXh0ID0gbmFtZSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuXG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuY29uc3QgY29udGV4dCA9IC8qI19fUFVSRV9fKi8gY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyXCIpO1xuZXhwb3J0IGRlZmF1bHQgY29udGV4dDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuaW1wb3J0IFJvdXRlckNvbnRleHQgZnJvbSBcIi4vUm91dGVyQ29udGV4dFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuY2xhc3MgUm91dGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4geyBwYXRoOiBcIi9cIiwgdXJsOiBcIi9cIiwgcGFyYW1zOiB7fSwgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiIH07XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07XG5cbiAgICAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuICAgIHRoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIHRoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3Rlbihsb2NhdGlvbiA9PiB7XG4gICAgICAgIGlmICh0aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvbiB9KTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyQ29udGV4dC5Qcm92aWRlclxuICAgICAgICBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsfVxuICAgICAgICB2YWx1ZT17e1xuICAgICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICAgIH19XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uKHByZXZQcm9wcykge1xuICAgIHdhcm5pbmcoXG4gICAgICBwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCJcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuY2xhc3MgTWVtb3J5Um91dGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkodGhpcy5wcm9wcyk7XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8Um91dGVyIGhpc3Rvcnk9e3RoaXMuaGlzdG9yeX0gY2hpbGRyZW49e3RoaXMucHJvcHMuY2hpbGRyZW59IC8+O1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIXRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCJcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBNZW1vcnlSb3V0ZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmNsYXNzIExpZmVjeWNsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMaWZlY3ljbGU7XG4iLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG5jb25zdCBjYWNoZSA9IHt9O1xuY29uc3QgY2FjaGVMaW1pdCA9IDEwMDAwO1xubGV0IGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuXG4gIGNvbnN0IGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGggPSBcIi9cIiwgcGFyYW1zID0ge30pIHtcbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywgeyBwcmV0dHk6IHRydWUgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlUGF0aDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuXG5pbXBvcnQgTGlmZWN5Y2xlIGZyb20gXCIuL0xpZmVjeWNsZVwiO1xuaW1wb3J0IFJvdXRlckNvbnRleHQgZnJvbSBcIi4vUm91dGVyQ29udGV4dFwiO1xuaW1wb3J0IGdlbmVyYXRlUGF0aCBmcm9tIFwiLi9nZW5lcmF0ZVBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cbmZ1bmN0aW9uIFJlZGlyZWN0KHsgY29tcHV0ZWRNYXRjaCwgdG8sIHB1c2ggPSBmYWxzZSB9KSB7XG4gIHJldHVybiAoXG4gICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgIGludmFyaWFudChjb250ZXh0LCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICBjb25zdCB7IGhpc3RvcnksIHN0YXRpY0NvbnRleHQgfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgY29uc3QgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICAgICAgY29uc3QgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihcbiAgICAgICAgICBjb21wdXRlZE1hdGNoXG4gICAgICAgICAgICA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgICA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgICAgLi4udG8sXG4gICAgICAgICAgICAgICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA6IHRvXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAgICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG4gICAgICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPExpZmVjeWNsZVxuICAgICAgICAgICAgb25Nb3VudD17KCkgPT4ge1xuICAgICAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIG9uVXBkYXRlPXsoc2VsZiwgcHJldlByb3BzKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG4gICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAhbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAuLi5sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICB0bz17dG99XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIH19XG4gICAgPC9Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICApO1xufVxuXG5pZiAoX19ERVZfXykge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVkaXJlY3Q7XG4iLCJpbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gXCJwYXRoLXRvLXJlZ2V4cFwiO1xuXG5jb25zdCBjYWNoZSA9IHt9O1xuY29uc3QgY2FjaGVMaW1pdCA9IDEwMDAwO1xubGV0IGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoLCBvcHRpb25zKSB7XG4gIGNvbnN0IGNhY2hlS2V5ID0gYCR7b3B0aW9ucy5lbmR9JHtvcHRpb25zLnN0cmljdH0ke29wdGlvbnMuc2Vuc2l0aXZlfWA7XG4gIGNvbnN0IHBhdGhDYWNoZSA9IGNhY2hlW2NhY2hlS2V5XSB8fCAoY2FjaGVbY2FjaGVLZXldID0ge30pO1xuXG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG5cbiAgY29uc3Qga2V5cyA9IFtdO1xuICBjb25zdCByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIGNvbnN0IHJlc3VsdCA9IHsgcmVnZXhwLCBrZXlzIH07XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcbiAgfVxuXG4gIGNvbnN0IHsgcGF0aCwgZXhhY3QgPSBmYWxzZSwgc3RyaWN0ID0gZmFsc2UsIHNlbnNpdGl2ZSA9IGZhbHNlIH0gPSBvcHRpb25zO1xuXG4gIGNvbnN0IHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuXG4gIHJldHVybiBwYXRocy5yZWR1Y2UoKG1hdGNoZWQsIHBhdGgpID0+IHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgY29uc3QgeyByZWdleHAsIGtleXMgfSA9IGNvbXBpbGVQYXRoKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmVcbiAgICB9KTtcbiAgICBjb25zdCBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcblxuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuXG4gICAgY29uc3QgW3VybCwgLi4udmFsdWVzXSA9IG1hdGNoO1xuICAgIGNvbnN0IGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuXG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiB7XG4gICAgICBwYXRoLCAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLCAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3QsIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZSgobWVtbywga2V5LCBpbmRleCkgPT4ge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUGF0aDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gXCJyZWFjdC1pc1wiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuaW1wb3J0IFJvdXRlckNvbnRleHQgZnJvbSBcIi4vUm91dGVyQ29udGV4dFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgY29uc3QgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG5cbiAgd2FybmluZyhcbiAgICB2YWx1ZSAhPT0gdW5kZWZpbmVkLFxuICAgIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgK1xuICAgICAgYDxSb3V0ZSR7cGF0aCA/IGAgcGF0aD1cIiR7cGF0aH1cImAgOiBcIlwifT4sIGJ1dCB5b3UgYCArXG4gICAgICBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIlxuICApO1xuXG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cbmNsYXNzIFJvdXRlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICAgICAge2NvbnRleHQgPT4ge1xuICAgICAgICAgIGludmFyaWFudChjb250ZXh0LCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgICAgIGNvbnN0IG1hdGNoID0gdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoXG4gICAgICAgICAgICA/IHRoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgICAgICAgIDogdGhpcy5wcm9wcy5wYXRoXG4gICAgICAgICAgICA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgdGhpcy5wcm9wcylcbiAgICAgICAgICAgIDogY29udGV4dC5tYXRjaDtcblxuICAgICAgICAgIGNvbnN0IHByb3BzID0geyAuLi5jb250ZXh0LCBsb2NhdGlvbiwgbWF0Y2ggfTtcblxuICAgICAgICAgIGxldCB7IGNoaWxkcmVuLCBjb21wb25lbnQsIHJlbmRlciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICAgIC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJvdXRlckNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3Byb3BzfT5cbiAgICAgICAgICAgICAge3Byb3BzLm1hdGNoXG4gICAgICAgICAgICAgICAgPyBjaGlsZHJlblxuICAgICAgICAgICAgICAgICAgPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgICAgICAgICA/IF9fREVWX19cbiAgICAgICAgICAgICAgICAgICAgICA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHRoaXMucHJvcHMucGF0aClcbiAgICAgICAgICAgICAgICAgICAgICA6IGNoaWxkcmVuKHByb3BzKVxuICAgICAgICAgICAgICAgICAgICA6IGNoaWxkcmVuXG4gICAgICAgICAgICAgICAgICA6IGNvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpXG4gICAgICAgICAgICAgICAgICA6IHJlbmRlclxuICAgICAgICAgICAgICAgICAgPyByZW5kZXIocHJvcHMpXG4gICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgICAgICA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICAgICAgPyBfX0RFVl9fXG4gICAgICAgICAgICAgICAgICA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHRoaXMucHJvcHMucGF0aClcbiAgICAgICAgICAgICAgICAgIDogY2hpbGRyZW4ocHJvcHMpXG4gICAgICAgICAgICAgICAgOiBudWxsfVxuICAgICAgICAgICAgPC9Sb3V0ZXJDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgICAgICk7XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogKHByb3BzLCBwcm9wTmFtZSkgPT4ge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICAgICAgICBgSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudGBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKVxuICAgIF0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgd2FybmluZyhcbiAgICAgICEoXG4gICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW4gJiZcbiAgICAgICAgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJlxuICAgICAgICB0aGlzLnByb3BzLmNvbXBvbmVudFxuICAgICAgKSxcbiAgICAgIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIlxuICAgICk7XG5cbiAgICB3YXJuaW5nKFxuICAgICAgIShcbiAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJlxuICAgICAgICAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmXG4gICAgICAgIHRoaXMucHJvcHMucmVuZGVyXG4gICAgICApLFxuICAgICAgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiXG4gICAgKTtcblxuICAgIHdhcm5pbmcoXG4gICAgICAhKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSxcbiAgICAgIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCJcbiAgICApO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbihwcmV2UHJvcHMpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLFxuICAgICAgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nXG4gICAgKTtcblxuICAgIHdhcm5pbmcoXG4gICAgICAhKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksXG4gICAgICAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJ1xuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGNyZWF0ZVBhdGggfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5sb2NhdGlvbixcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICBjb25zdCBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcblxuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHJldHVybiB7XG4gICAgLi4ubG9jYXRpb24sXG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cblxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5jbGFzcyBTdGF0aWNSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICBjb25zdCB7IGJhc2VuYW1lID0gXCJcIiwgY29udGV4dCA9IHt9IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfVxuXG4gIGhhbmRsZVB1c2ggPSBsb2NhdGlvbiA9PiB0aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgaGFuZGxlUmVwbGFjZSA9IGxvY2F0aW9uID0+IHRoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICBoYW5kbGVMaXN0ZW4gPSAoKSA9PiBub29wO1xuICBoYW5kbGVCbG9jayA9ICgpID0+IG5vb3A7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYmFzZW5hbWUgPSBcIlwiLCBjb250ZXh0ID0ge30sIGxvY2F0aW9uID0gXCIvXCIsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogcGF0aCA9PiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpLFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcblxuICAgIHJldHVybiA8Um91dGVyIHsuLi5yZXN0fSBoaXN0b3J5PXtoaXN0b3J5fSBzdGF0aWNDb250ZXh0PXtjb250ZXh0fSAvPjtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIXRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgK1xuICAgICAgICBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCJcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBTdGF0aWNSb3V0ZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5jbGFzcyBTd2l0Y2ggZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuXG4gICAgICAgICAgbGV0IGVsZW1lbnQsIG1hdGNoO1xuXG4gICAgICAgICAgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuICAgICAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2godGhpcy5wcm9wcy5jaGlsZHJlbiwgY2hpbGQgPT4ge1xuICAgICAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcblxuICAgICAgICAgICAgICBjb25zdCBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuXG4gICAgICAgICAgICAgIG1hdGNoID0gcGF0aFxuICAgICAgICAgICAgICAgID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCB7IC4uLmNoaWxkLnByb3BzLCBwYXRoIH0pXG4gICAgICAgICAgICAgICAgOiBjb250ZXh0Lm1hdGNoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcmV0dXJuIG1hdGNoXG4gICAgICAgICAgICA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7IGxvY2F0aW9uLCBjb21wdXRlZE1hdGNoOiBtYXRjaCB9KVxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICB9fVxuICAgICAgPC9Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICk7XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uKHByZXZQcm9wcykge1xuICAgIHdhcm5pbmcoXG4gICAgICAhKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksXG4gICAgICAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nXG4gICAgKTtcblxuICAgIHdhcm5pbmcoXG4gICAgICAhKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksXG4gICAgICAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuXG5pbXBvcnQgQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0LmpzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aC5qc1wiO1xuXG5jb25zdCB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUhpc3RvcnkoKSB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIixcbiAgICAgIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KENvbnRleHQpLmhpc3Rvcnk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KENvbnRleHQpLmxvY2F0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VQYXJhbXMoKVwiXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXNlQ29udGV4dChDb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCJcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIHBhdGhcbiAgICA/IG1hdGNoUGF0aCh1c2VMb2NhdGlvbigpLnBhdGhuYW1lLCBwYXRoKVxuICAgIDogdXNlQ29udGV4dChDb250ZXh0KS5tYXRjaDtcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5jbGFzcyBCcm93c2VyUm91dGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkodGhpcy5wcm9wcyk7XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8Um91dGVyIGhpc3Rvcnk9e3RoaXMuaGlzdG9yeX0gY2hpbGRyZW49e3RoaXMucHJvcHMuY2hpbGRyZW59IC8+O1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgd2FybmluZyhcbiAgICAgICF0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCJcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IHsgY3JlYXRlSGFzaEhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5jbGFzcyBIYXNoUm91dGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkodGhpcy5wcm9wcyk7XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8Um91dGVyIGhpc3Rvcnk9e3RoaXMuaGlzdG9yeX0gY2hpbGRyZW49e3RoaXMucHJvcHMuY2hpbGRyZW59IC8+O1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgd2FybmluZyhcbiAgICAgICF0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCJcbiAgICApO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBIYXNoUm91dGVyO1xuIiwiaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tIFwiaGlzdG9yeVwiO1xuXG5leHBvcnQgY29uc3QgcmVzb2x2ZVRvTG9jYXRpb24gPSAodG8sIGN1cnJlbnRMb2NhdGlvbikgPT5cbiAgdHlwZW9mIHRvID09PSBcImZ1bmN0aW9uXCIgPyB0byhjdXJyZW50TG9jYXRpb24pIDogdG87XG5cbmV4cG9ydCBjb25zdCBub3JtYWxpemVUb0xvY2F0aW9uID0gKHRvLCBjdXJyZW50TG9jYXRpb24pID0+IHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIlxuICAgID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbilcbiAgICA6IHRvO1xufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IF9fUm91dGVyQ29udGV4dCBhcyBSb3V0ZXJDb250ZXh0IH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCB7IHJlc29sdmVUb0xvY2F0aW9uLCBub3JtYWxpemVUb0xvY2F0aW9uIH0gZnJvbSBcIi4vdXRpbHMvbG9jYXRpb25VdGlsc1wiO1xuXG4vLyBSZWFjdCAxNSBjb21wYXRcbmNvbnN0IGZvcndhcmRSZWZTaGltID0gQyA9PiBDO1xubGV0IHsgZm9yd2FyZFJlZiB9ID0gUmVhY3Q7XG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiA9IGZvcndhcmRSZWZTaGltO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG5jb25zdCBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihcbiAgKFxuICAgIHtcbiAgICAgIGlubmVyUmVmLCAvLyBUT0RPOiBkZXByZWNhdGVcbiAgICAgIG5hdmlnYXRlLFxuICAgICAgb25DbGljayxcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIGZvcndhcmRlZFJlZlxuICApID0+IHtcbiAgICBjb25zdCB7IHRhcmdldCB9ID0gcmVzdDtcblxuICAgIGxldCBwcm9wcyA9IHtcbiAgICAgIC4uLnJlc3QsXG4gICAgICBvbkNsaWNrOiBldmVudCA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKG9uQ2xpY2spIG9uQ2xpY2soZXZlbnQpO1xuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgdGhyb3cgZXg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICAgICAoIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gUmVhY3QgMTUgY29tcGF0XG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiA8YSB7Li4ucHJvcHN9IC8+O1xuICB9XG4pO1xuXG5pZiAoX19ERVZfXykge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5jb25zdCBMaW5rID0gZm9yd2FyZFJlZihcbiAgKFxuICAgIHtcbiAgICAgIGNvbXBvbmVudCA9IExpbmtBbmNob3IsXG4gICAgICByZXBsYWNlLFxuICAgICAgdG8sXG4gICAgICBpbm5lclJlZiwgLy8gVE9ETzogZGVwcmVjYXRlXG4gICAgICAuLi5yZXN0XG4gICAgfSxcbiAgICBmb3J3YXJkZWRSZWZcbiAgKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgICBjb25zdCB7IGhpc3RvcnkgfSA9IGNvbnRleHQ7XG5cbiAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24oXG4gICAgICAgICAgICByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksXG4gICAgICAgICAgICBjb250ZXh0LmxvY2F0aW9uXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIGNvbnN0IGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuICAgICAgICAgIGNvbnN0IHByb3BzID0ge1xuICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIGhyZWYsXG4gICAgICAgICAgICBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgICAgICAgY29uc3QgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgICAgICAgIGNvbnN0IG1ldGhvZCA9IHJlcGxhY2UgPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG5cbiAgICAgICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgLy8gUmVhY3QgMTUgY29tcGF0XG4gICAgICAgICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICAgICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxuKTtcblxuaWYgKF9fREVWX18pIHtcbiAgY29uc3QgdG9UeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICBQcm9wVHlwZXMub2JqZWN0LFxuICAgIFByb3BUeXBlcy5mdW5jXG4gIF0pO1xuICBjb25zdCByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICBQcm9wVHlwZXMuZnVuYyxcbiAgICBQcm9wVHlwZXMuc2hhcGUoeyBjdXJyZW50OiBQcm9wVHlwZXMuYW55IH0pXG4gIF0pO1xuXG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcblxuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IExpbms7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBfX1JvdXRlckNvbnRleHQgYXMgUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwidGlueS1pbnZhcmlhbnRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCIuL0xpbmtcIjtcbmltcG9ydCB7IHJlc29sdmVUb0xvY2F0aW9uLCBub3JtYWxpemVUb0xvY2F0aW9uIH0gZnJvbSBcIi4vdXRpbHMvbG9jYXRpb25VdGlsc1wiO1xuXG4vLyBSZWFjdCAxNSBjb21wYXRcbmNvbnN0IGZvcndhcmRSZWZTaGltID0gQyA9PiBDO1xubGV0IHsgZm9yd2FyZFJlZiB9ID0gUmVhY3Q7XG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiA9IGZvcndhcmRSZWZTaGltO1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcyguLi5jbGFzc25hbWVzKSB7XG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihpID0+IGkpLmpvaW4oXCIgXCIpO1xufVxuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5jb25zdCBOYXZMaW5rID0gZm9yd2FyZFJlZihcbiAgKFxuICAgIHtcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50ID0gXCJwYWdlXCIsXG4gICAgICBhY3RpdmVDbGFzc05hbWUgPSBcImFjdGl2ZVwiLFxuICAgICAgYWN0aXZlU3R5bGUsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVByb3AsXG4gICAgICBleGFjdCxcbiAgICAgIGlzQWN0aXZlOiBpc0FjdGl2ZVByb3AsXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb25Qcm9wLFxuICAgICAgc3RyaWN0LFxuICAgICAgc3R5bGU6IHN0eWxlUHJvcCxcbiAgICAgIHRvLFxuICAgICAgaW5uZXJSZWYsIC8vIFRPRE86IGRlcHJlY2F0ZVxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgZm9yd2FyZGVkUmVmXG4gICkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICAgICAge2NvbnRleHQgPT4ge1xuICAgICAgICAgIGludmFyaWFudChjb250ZXh0LCBcIllvdSBzaG91bGQgbm90IHVzZSA8TmF2TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgY3VycmVudExvY2F0aW9uID0gbG9jYXRpb25Qcm9wIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICAgICAgY29uc3QgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24oXG4gICAgICAgICAgICByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSxcbiAgICAgICAgICAgIGN1cnJlbnRMb2NhdGlvblxuICAgICAgICAgICk7XG4gICAgICAgICAgY29uc3QgeyBwYXRobmFtZTogcGF0aCB9ID0gdG9Mb2NhdGlvbjtcbiAgICAgICAgICAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuICAgICAgICAgIGNvbnN0IGVzY2FwZWRQYXRoID1cbiAgICAgICAgICAgIHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XG5cbiAgICAgICAgICBjb25zdCBtYXRjaCA9IGVzY2FwZWRQYXRoXG4gICAgICAgICAgICA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgICAgICAgICAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICAgICAgICAgICAgICBleGFjdCxcbiAgICAgICAgICAgICAgICBzdHJpY3RcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgICBjb25zdCBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcFxuICAgICAgICAgICAgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbilcbiAgICAgICAgICAgIDogbWF0Y2gpO1xuXG4gICAgICAgICAgY29uc3QgY2xhc3NOYW1lID0gaXNBY3RpdmVcbiAgICAgICAgICAgID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKVxuICAgICAgICAgICAgOiBjbGFzc05hbWVQcm9wO1xuICAgICAgICAgIGNvbnN0IHN0eWxlID0gaXNBY3RpdmUgPyB7IC4uLnN0eWxlUHJvcCwgLi4uYWN0aXZlU3R5bGUgfSA6IHN0eWxlUHJvcDtcblxuICAgICAgICAgIGNvbnN0IHByb3BzID0ge1xuICAgICAgICAgICAgXCJhcmlhLWN1cnJlbnRcIjogKGlzQWN0aXZlICYmIGFyaWFDdXJyZW50KSB8fCBudWxsLFxuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgc3R5bGUsXG4gICAgICAgICAgICB0bzogdG9Mb2NhdGlvbixcbiAgICAgICAgICAgIC4uLnJlc3RcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgLy8gUmVhY3QgMTUgY29tcGF0XG4gICAgICAgICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICAgICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIDxMaW5rIHsuLi5wcm9wc30gLz47XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxuKTtcblxuaWYgKF9fREVWX18pIHtcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xuXG4gIGNvbnN0IGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXG4gICAgXCJwYWdlXCIsXG4gICAgXCJzdGVwXCIsXG4gICAgXCJsb2NhdGlvblwiLFxuICAgIFwiZGF0ZVwiLFxuICAgIFwidGltZVwiLFxuICAgIFwidHJ1ZVwiXG4gIF0pO1xuXG4gIE5hdkxpbmsucHJvcFR5cGVzID0ge1xuICAgIC4uLkxpbmsucHJvcFR5cGVzLFxuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rO1xuIiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHtSZWRpcmVjdH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcydcclxuXHJcbmNvbnN0IHN0eWxlID0gc3R5bGVzLm9wZW5pbmdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wZW5pbmcgZXh0ZW5kcyBDb21wb25lbnR7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgc3VwZXIocHJvcHMpXHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICBqdW1wOiAnJywgaG9sZDogZmFsc2VcclxuICAgIH1cclxuICB9XHJcbiAgbW91c2VEcmFnKGUpe1xyXG4gICAgaWYodGhpcy5zdGF0ZS5ob2xkKXtcclxuICAgICAgY29uc3QgY29udHJvbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250cm9sJylcclxuICAgICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYW1lJylcclxuICAgICAgY29uc3QgaW1nX3cgPSAoZS5jbGllbnRYIC8gd2luZG93Lm91dGVyV2lkdGgpICogMTAwXHJcbiAgICAgIGNvbnN0IG5hbWVfcyA9IDEyICogaW1nX3cgKiAwLjAxXHJcbiAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbycpXHJcbiAgICAgIGNvbnN0IGFzayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hc2snKVxyXG4gICAgICBcclxuICAgICAgaWYoaW1nX3cgPj0gNSAmJiBpbWdfdyA8PSA5MCl7XHJcbiAgICAgICAgY29udHJvbC5zdHlsZS5sZWZ0ID0gaW1nX3cgKyAnJSdcclxuICAgICAgICBuYW1lLnN0eWxlLmZvbnRTaXplID0gbmFtZV9zICsgJ3Z3J1xyXG4gICAgICAgIGFzay5zdHlsZS5sZWZ0ID0gaW1nX3cgKyAnJSdcclxuICAgICAgfVxyXG4gICAgICBpZihpbWdfdyA+PSA5MCl7XHJcbiAgICAgICAgYnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBtb3VzZURvd24oZSl7XHJcbiAgICBjb25zdCBhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXNrJylcclxuICAgIGFzay5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcbiAgICB0aGlzLnNldFN0YXRlKHtob2xkOiB0cnVlfSlcclxuICB9XHJcbiAgbW91c2VVcChlKXtcclxuICAgIGNvbnN0IGFzayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hc2snKVxyXG4gICAgYXNrLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXHJcbiAgICB0aGlzLnNldFN0YXRlKHtob2xkOiBmYWxzZX0pXHJcbiAgfVxyXG4gIG5leHQoZSl7XHJcbiAgICB0aGlzLnNldFN0YXRlKHtqdW1wOiAnL21haW4nfSlcclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICBpZih0aGlzLnN0YXRlLmp1bXApe1xyXG4gICAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXt0aGlzLnN0YXRlLmp1bXB9IC8+XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZS5zY3JlZW59XHJcbiAgICAgICAgb25Nb3VzZU1vdmU9e2UgPT4gdGhpcy5tb3VzZURyYWcoZSl9XHJcbiAgICAgICAgb25Nb3VzZVVwPXtlID0+IHRoaXMubW91c2VVcChlKX1cclxuICAgICAgICBvbk1vdXNlTGVhdmU9e2UgPT4gdGhpcy5tb3VzZVVwKGUpfT5cclxuICAgICAgICA8aDEgY2xhc3M9XCJuYW1lXCIgc3R5bGU9e3N0eWxlLm5hbWV9PlBBUksgU0FORyBVTjwvaDE+XHJcbiAgICAgICAgPHAgY2xhc3M9XCJnb1wiIHN0eWxlPXtzdHlsZS5idXR0b259XHJcbiAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvcj1cImJsYWNrXCJ9IFxyXG4gICAgICAgICAgb25Nb3VzZU91dD17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvciA9IFwid2hpdGVcIn1cclxuICAgICAgICAgIG9uQ2xpY2s9e2UgPT4gdGhpcy5uZXh0KGUpfT5MZXQncyBmaW5kIG91dDwvcD5cclxuICAgICAgICA8cCBjbGFzcz1cImFza1wiIHN0eWxlPXtzdHlsZS5hc2t9PkRyYWcgbWUhPC9wPlxyXG4gICAgICAgIDxpbWcgY2xhc3M9XCJjb250cm9sXCIgc3R5bGU9e3N0eWxlLmNvbnRyb2x9XHJcbiAgICAgICAgICBvbk1vdXNlRG93bj17ZSA9PiB0aGlzLm1vdXNlRG93bihlKX0vPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn0iLCJjb25zdCBzdHlsZXMgPSB7XHJcbiAgb3BlbmluZzoge1xyXG4gICAgc2NyZWVuOntcclxuICAgICAgcG9zaXRpb246ICdmaXhlZCcsXHJcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGhlaWdodDogJzEwMHZoJyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xyXG4gICAgfSxcclxuICAgIG5hbWU6IHtcclxuICAgICAgYmFja2dyb3VuZDogJ3VybChcIi4vcmVzb3VyY2UvY29sb3JmdWwuanBnXCIpIHJlcGVhdCcsXHJcbiAgICAgIGJhY2tncm91bmRQb3NpdGlvbjogJ2NlbnRlcicsXHJcbiAgICAgIGJhY2tncm91bmRTaXplOiAnY292ZXInLFxyXG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICBiYWNrZ3JvdW5kQ2xpcDogJ3RleHQnLFxyXG4gICAgICBXZWJraXRCYWNrZ3JvdW5kQ2xpcDogJ3RleHQnLFxyXG4gICAgICBXZWJraXRUZXh0RmlsbENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICBmb250OiAnOTAwIDAuNXZ3IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWYnLFxyXG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcclxuICAgICAgY3Vyc29yOiAnZGVmYXVsdCdcclxuICAgIH0sXHJcbiAgICBidXR0b246IHtcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIGJvdHRvbTogJzE1JScsXHJcbiAgICAgIGxlZnQ6ICc1MCUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcclxuICAgICAgZm9udFNpemU6ICc1MHB4JyxcclxuICAgICAgZGlzcGxheTogJ25vbmUnLFxyXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICAgICAgZm9udFdlaWdodDogJzkwMCcsXHJcbiAgICAgIGNvbG9yOiAnd2hpdGUnLFxyXG4gICAgICB0ZXh0U2hhZG93OiAnMnB4IDJweCA2cHggIzAwMCcsXHJcbiAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogJzFzJ1xyXG4gICAgfSxcclxuICAgIGFzazp7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICBib3R0b206ICcxMCUnLFxyXG4gICAgICBsZWZ0OiAnNSUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMCUpJ1xyXG4gICAgfSxcclxuICAgIGNvbnRyb2w6e1xyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgYm90dG9tOiAnNSUnLFxyXG4gICAgICBsZWZ0OiAnNSUnLFxyXG4gICAgICBjb250ZW50OiAndXJsKFwiLi9yZXNvdXJjZS9mb3J3YXJkX2J1dHRvbi5wbmdcIiknLFxyXG4gICAgICBoZWlnaHQ6ICczMHB4JyxcclxuICAgICAgd2lkdGg6ICc1MHB4JyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcidcclxuICAgIH0gXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdHlsZXM7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xyXG5pbXBvcnQge0Jyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLCBSb3V0ZSwgU3dpdGNoIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IE9wZW5pbmcgZnJvbSAnLi9vcGVuaW5nLmpzJ1xyXG5cclxuY29uc3QgUFNVQXBwID0gKCkgPT4gKFxyXG4gIDxSb3V0ZXI+XHJcbiAgICA8ZGl2PlxyXG4gICAgICA8U3dpdGNoPlxyXG4gICAgICAgIDxSb3V0ZSBwYXRoPScvb3BlbmluZycgY29tcG9uZW50PXtPcGVuaW5nfSAvPlxyXG4gICAgICAgIDxSb3V0ZSBjb21wb25lbnQ9e09wZW5pbmd9IC8+XHJcbiAgICAgIDwvU3dpdGNoPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9Sb3V0ZXI+XHJcbilcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICA8UFNVQXBwIC8+LFxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuKSJdLCJzb3VyY2VSb290IjoiIn0=