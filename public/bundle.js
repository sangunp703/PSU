!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=19)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){e.exports=n(14)()},,function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(17);e.exports=h,e.exports.parse=a,e.exports.compile=function(e,t){return u(a(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var i=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],o=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=i.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],b=n[5],g=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,E="+"===g||"*"===g,x="?"===g||"*"===g,S=n[2]||u,T=v||b;r.push({name:y||o++,prefix:m||"",delimiter:S,optional:x,repeat:E,partial:k,asterisk:!!w,pattern:T?s(T):w?".*":"[^"+c(S)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"===r(e[n])&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,r){for(var i="",a=n||{},u=(r||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=a[s.name];if(null==p){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(o(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function f(e,t){return e.keys=t,e}function p(e){return e.sensitive?"":"i"}function d(e,t,n){o(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=c(u);else{var s=c(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+s+d+")*"),a+=d=u.optional?u.partial?s+"("+d+")?":"(?:"+s+"("+d+"))?":s+"("+d+")"}}var h=c(n.delimiter||"/"),m=a.slice(-h.length)===h;return r||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":r&&m?"":"(?="+h+"|$)",f(new RegExp("^"+a,p(n)),t)}function h(e,t,n){return o(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return f(e,t)}(e,t):o(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(h(e[o],t,n).source);return f(new RegExp("(?:"+r.join("|")+")",p(n)),t)}(e,t,n):function(e,t,n){return d(a(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(11)},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(16))},function(e,t,n){"use strict";var r=n(6),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=d(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),y=0;y<a.length;++y){var v=a[y];if(!(i[v]||r&&r[v]||m&&m[v]||l&&l[v])){var b=p(n,v);try{c(t,v,b)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(5),i="function"==typeof Symbol&&Symbol.for,a=i?Symbol.for("react.element"):60103,l=i?Symbol.for("react.portal"):60106,u=i?Symbol.for("react.fragment"):60107,c=i?Symbol.for("react.strict_mode"):60108,s=i?Symbol.for("react.profiler"):60114,f=i?Symbol.for("react.provider"):60109,p=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,h=i?Symbol.for("react.suspense"):60113;i&&Symbol.for("react.suspense_list");var m=i?Symbol.for("react.memo"):60115,y=i?Symbol.for("react.lazy"):60116;i&&Symbol.for("react.fundamental"),i&&Symbol.for("react.responder"),i&&Symbol.for("react.scope");var v="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function k(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){if("object"!==r(e)&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=k.prototype;var S=x.prototype=new E;S.constructor=x,o(S,k.prototype),S.isPureReactComponent=!0;var T={current:null},C={current:null},_=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)_.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:C.current}}function N(e){return"object"===r(e)&&null!==e&&e.$$typeof===a}var j=/\/+/g,M=[];function R(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function z(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function U(e,t,n){return null==e?0:function e(t,n,o,i){var u=r(t);"undefined"!==u&&"boolean"!==u||(t=null);var c=!1;if(null===t)c=!0;else switch(u){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case a:case l:c=!0}}if(c)return o(i,t,""===n?"."+I(t,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var f=n+I(u=t[s],s);c+=e(u,f,o,i)}else if(null===t||"object"!==r(t)?f=null:f="function"==typeof(f=v&&t[v]||t["@@iterator"])?f:null,"function"==typeof f)for(t=f.call(t),s=0;!(u=t.next()).done;)c+=e(u=u.value,f=n+I(u,s++),o,i);else if("object"===u)throw o=""+t,Error(b(31,"[object Object]"===o?"object with keys {"+Object.keys(t).join(", ")+"}":o,""));return c}(e,"",t,n)}function I(e,t){return"object"===r(e)&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(j,"$&/")+"/"),U(e,D,t=R(t,i,r,o)),z(t)}function L(){var e=T.current;if(null===e)throw Error(b(321));return e}var $={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;U(e,A,t=R(null,null,t,n)),z(t)},count:function(e){return U(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(b(143));return e}},createRef:function(){return{current:null}},Component:k,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return L().useCallback(e,t)},useContext:function(e,t){return L().useContext(e,t)},useEffect:function(e,t){return L().useEffect(e,t)},useImperativeHandle:function(e,t,n){return L().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return L().useLayoutEffect(e,t)},useMemo:function(e,t){return L().useMemo(e,t)},useReducer:function(e,t,n){return L().useReducer(e,t,n)},useRef:function(e){return L().useRef(e)},useState:function(e){return L().useState(e)},Fragment:u,Profiler:s,StrictMode:c,Suspense:h,createElement:O,cloneElement:function(e,t,n){if(null==e)throw Error(b(267,e));var r=o({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=C.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)_.call(t,s)&&!P.hasOwnProperty(s)&&(r[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];r.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:r,_owner:u}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.11.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:C,IsSomeRendererActing:{current:!1},assign:o}},W={default:$},B=W&&$||W;e.exports=B.default||B},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=n(0),i=n(5),a=n(12);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!o)throw Error(l(227));var u=null,c={};function s(){if(u)for(var e in c){var t=c[e],n=u.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!p[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in p[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,s=r;if(d.hasOwnProperty(s))throw Error(l(99,s));d[s]=i;var h=i.phasedRegistrationNames;if(h){for(o in h)h.hasOwnProperty(o)&&f(h[o],a,s);o=!0}else i.registrationName?(f(i.registrationName,a,s),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function f(e,t,n){if(h[e])throw Error(l(100,e));h[e]=t,m[e]=t.eventTypes[n].dependencies}var p=[],d={},h={},m={};function y(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var v=!1,b=null,g=!1,w=null,k={onError:function(e){v=!0,b=e}};function E(e,t,n,r,o,i,a,l,u){v=!1,b=null,y.apply(k,arguments)}var x=null,S=null,T=null;function C(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,a,u,c){if(E.apply(this,arguments),v){if(!v)throw Error(l(198));var s=b;v=!1,b=null,g||(g=!0,w=s)}}(r,t,void 0,e),e.currentTarget=null}function _(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function P(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function N(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)C(e,t[r],n[r]);else t&&C(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function j(e){if(null!==e&&(O=_(O,e)),e=O,O=null,e){if(P(e,N),O)throw Error(l(95));if(g)throw e=w,g=!1,w=null,e}}var M={injectEventPluginOrder:function(e){if(u)throw Error(l(101));u=Array.prototype.slice.call(e),s()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!c.hasOwnProperty(t)||c[t]!==r){if(c[t])throw Error(l(102,t));c[t]=r,n=!0}}n&&s()}};function R(e,t){var n=e.stateNode;if(!n)return null;var o=x(n);if(!o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(o=!o.disabled)||(o=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,r(n)));return n}var z=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;z.hasOwnProperty("ReactCurrentDispatcher")||(z.ReactCurrentDispatcher={current:null}),z.hasOwnProperty("ReactCurrentBatchConfig")||(z.ReactCurrentBatchConfig={suspense:null});var U=/^(.*)[\\\/]/,I="function"==typeof Symbol&&Symbol.for,A=I?Symbol.for("react.element"):60103,D=I?Symbol.for("react.portal"):60106,F=I?Symbol.for("react.fragment"):60107,L=I?Symbol.for("react.strict_mode"):60108,$=I?Symbol.for("react.profiler"):60114,W=I?Symbol.for("react.provider"):60109,B=I?Symbol.for("react.context"):60110,V=I?Symbol.for("react.concurrent_mode"):60111,H=I?Symbol.for("react.forward_ref"):60112,Q=I?Symbol.for("react.suspense"):60113,q=I?Symbol.for("react.suspense_list"):60120,K=I?Symbol.for("react.memo"):60115,Y=I?Symbol.for("react.lazy"):60116;I&&Symbol.for("react.fundamental"),I&&Symbol.for("react.responder"),I&&Symbol.for("react.scope");var X="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!==r(e)?null:"function"==typeof(e=X&&e[X]||e["@@iterator"])?e:null}function J(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case F:return"Fragment";case D:return"Portal";case $:return"Profiler";case L:return"StrictMode";case Q:return"Suspense";case q:return"SuspenseList"}if("object"===r(e))switch(e.$$typeof){case B:return"Context.Consumer";case W:return"Context.Provider";case H:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case K:return J(e.type);case Y:if(e=1===e._status?e._result:null)return J(e)}return null}function Z(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=J(e.type);n=null,r&&(n=J(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(U,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ee=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),te=null,ne=null,re=null;function oe(e){if(e=S(e)){if("function"!=typeof te)throw Error(l(280));var t=x(e.stateNode);te(e.stateNode,e.type,t)}}function ie(e){ne?re?re.push(e):re=[e]:ne=e}function ae(){if(ne){var e=ne,t=re;if(re=ne=null,oe(e),t)for(e=0;e<t.length;e++)oe(t[e])}}function le(e,t){return e(t)}function ue(e,t,n,r){return e(t,n,r)}function ce(){}var se=le,fe=!1,pe=!1;function de(){null===ne&&null===re||(ce(),ae())}new Map;var he=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,me=Object.prototype.hasOwnProperty,ye={},ve={};function be(e,t,n,o){if(null==t||function(e,t,n,o){if(null!==n&&0===n.type)return!1;switch(r(t)){case"function":case"symbol":return!0;case"boolean":return!o&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,o))return!0;if(o)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function ge(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var we={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){we[e]=new ge(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];we[t]=new ge(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){we[e]=new ge(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){we[e]=new ge(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){we[e]=new ge(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){we[e]=new ge(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){we[e]=new ge(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){we[e]=new ge(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){we[e]=new ge(e,5,!1,e.toLowerCase(),null,!1)}));var ke=/[\-:]([a-z])/g;function Ee(e){return e[1].toUpperCase()}function xe(e){switch(r(e)){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Se(e,t,n,r){var o=we.hasOwnProperty(t)?we[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(be(t,n,o,r)&&(n=null),r||null===o?function(e){return!!me.call(ve,e)||!me.call(ye,e)&&(he.test(e)?ve[e]=!0:(ye[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Te(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ce(e){e._valueTracker||(e._valueTracker=function(e){var t=Te(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function _e(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Te(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Pe(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Oe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=xe(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ne(e,t){null!=(t=t.checked)&&Se(e,"checked",t,!1)}function je(e,t){Ne(e,t);var n=xe(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Re(e,t.type,n):t.hasOwnProperty("defaultValue")&&Re(e,t.type,xe(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Me(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Re(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ze(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ue(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+xe(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ae(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw Error(l(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(l(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:xe(n)}}function De(e,t){var n=xe(t.value),r=xe(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Fe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(ke,Ee);we[t]=new ge(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(ke,Ee);we[t]=new ge(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(ke,Ee);we[t]=new ge(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){we[e]=new ge(e,1,!1,e.toLowerCase(),null,!1)})),we.xlinkHref=new ge("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){we[e]=new ge(e,1,!1,e.toLowerCase(),null,!0)}));var Le={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function $e(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function We(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?$e(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Be,Ve=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Le.svg||"innerHTML"in e)e.innerHTML=t;else{for((Be=Be||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Be.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function He(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Qe(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var qe={animationend:Qe("Animation","AnimationEnd"),animationiteration:Qe("Animation","AnimationIteration"),animationstart:Qe("Animation","AnimationStart"),transitionend:Qe("Transition","TransitionEnd")},Ke={},Ye={};function Xe(e){if(Ke[e])return Ke[e];if(!qe[e])return e;var t,n=qe[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ye)return Ke[e]=n[t];return e}ee&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete qe.animationend.animation,delete qe.animationiteration.animation,delete qe.animationstart.animation),"TransitionEvent"in window||delete qe.transitionend.transition);var Ge=Xe("animationend"),Je=Xe("animationiteration"),Ze=Xe("animationstart"),et=Xe("transitionend"),tt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function nt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function rt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function ot(e){if(nt(e)!==e)throw Error(l(188))}function it(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=nt(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return ot(o),e;if(i===r)return ot(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var at,lt,ut,ct=!1,st=[],ft=null,pt=null,dt=null,ht=new Map,mt=new Map,yt=[],vt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),bt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function gt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function wt(e,t){switch(e){case"focus":case"blur":ft=null;break;case"dragenter":case"dragleave":pt=null;break;case"mouseover":case"mouseout":dt=null;break;case"pointerover":case"pointerout":ht.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":mt.delete(t.pointerId)}}function kt(e,t,n,r,o){return null===e||e.nativeEvent!==o?(e=gt(t,n,r,o),null!==t&&(null!==(t=mr(t))&&lt(t)),e):(e.eventSystemFlags|=r,e)}function Et(e){var t=hr(e.target);if(null!==t){var n=nt(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=rt(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){ut(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function xt(e){if(null!==e.blockedOn)return!1;var t=Rn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);if(null!==t){var n=mr(t);return null!==n&&lt(n),e.blockedOn=t,!1}return!0}function St(e,t,n){xt(e)&&n.delete(t)}function Tt(){for(ct=!1;0<st.length;){var e=st[0];if(null!==e.blockedOn){null!==(e=mr(e.blockedOn))&&at(e);break}var t=Rn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:st.shift()}null!==ft&&xt(ft)&&(ft=null),null!==pt&&xt(pt)&&(pt=null),null!==dt&&xt(dt)&&(dt=null),ht.forEach(St),mt.forEach(St)}function Ct(e,t){e.blockedOn===t&&(e.blockedOn=null,ct||(ct=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Tt)))}function _t(e){function t(t){return Ct(t,e)}if(0<st.length){Ct(st[0],e);for(var n=1;n<st.length;n++){var r=st[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ft&&Ct(ft,e),null!==pt&&Ct(pt,e),null!==dt&&Ct(dt,e),ht.forEach(t),mt.forEach(t),n=0;n<yt.length;n++)(r=yt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<yt.length&&null===(n=yt[0]).blockedOn;)Et(n),null===n.blockedOn&&yt.shift()}function Pt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ot(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nt(e,t,n){(t=R(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function jt(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Ot(t);for(t=n.length;0<t--;)Nt(n[t],"captured",e);for(t=0;t<n.length;t++)Nt(n[t],"bubbled",e)}}function Mt(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=R(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function Rt(e){e&&e.dispatchConfig.registrationName&&Mt(e._targetInst,null,e)}function zt(e){P(e,jt)}function Ut(){return!0}function It(){return!1}function At(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Ut:It,this.isPropagationStopped=It,this}function Dt(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ft(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Lt(e){e.eventPool=[],e.getPooled=Dt,e.release=Ft}i(At.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Ut)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Ut)},persist:function(){this.isPersistent=Ut},isPersistent:It,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=It,this._dispatchInstances=this._dispatchListeners=null}}),At.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},At.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Lt(n),n},Lt(At);var $t=At.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Wt=At.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Bt=At.extend({view:null,detail:null}),Vt=Bt.extend({relatedTarget:null});function Ht(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Qt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Kt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Yt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Kt[e])&&!!t[e]}function Xt(){return Yt}for(var Gt=Bt.extend({key:function(e){if(e.key){var t=Qt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Ht(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?qt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Xt,charCode:function(e){return"keypress"===e.type?Ht(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Ht(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Jt=0,Zt=0,en=!1,tn=!1,nn=Bt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Xt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Jt;return Jt=e.screenX,en?"mousemove"===e.type?e.screenX-t:0:(en=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Zt;return Zt=e.screenY,tn?"mousemove"===e.type?e.screenY-t:0:(tn=!0,0)}}),rn=nn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),on=nn.extend({dataTransfer:null}),an=Bt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Xt}),ln=At.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),un=nn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),cn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Ge,"animationEnd",2],[Je,"animationIteration",2],[Ze,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[et,"transitionEnd",2],["waiting","waiting",2]],sn={},fn={},pn=0;pn<cn.length;pn++){var dn=cn[pn],hn=dn[0],mn=dn[1],yn=dn[2],vn="on"+(mn[0].toUpperCase()+mn.slice(1)),bn={phasedRegistrationNames:{bubbled:vn,captured:vn+"Capture"},dependencies:[hn],eventPriority:yn};sn[mn]=bn,fn[hn]=bn}var gn={eventTypes:sn,getEventPriority:function(e){return void 0!==(e=fn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=fn[e];if(!o)return null;switch(e){case"keypress":if(0===Ht(n))return null;case"keydown":case"keyup":e=Gt;break;case"blur":case"focus":e=Vt;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=nn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=on;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=an;break;case Ge:case Je:case Ze:e=$t;break;case et:e=ln;break;case"scroll":e=Bt;break;case"wheel":e=un;break;case"copy":case"cut":case"paste":e=Wt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=rn;break;default:e=At}return zt(t=e.getPooled(o,t,n,r)),t}},wn=a.unstable_UserBlockingPriority,kn=a.unstable_runWithPriority,En=gn.getEventPriority,xn=10,Sn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=hr(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Pt(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=e.eventSystemFlags,l=null,u=0;u<p.length;u++){var c=p[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=_(l,c))}j(l)}}var Cn=!0;function _n(e,t){Pn(t,e,!1)}function Pn(e,t,n){switch(En(t)){case 0:var r=On.bind(null,t,1);break;case 1:r=Nn.bind(null,t,1);break;default:r=Mn.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function On(e,t,n){fe||ce();var r=Mn,o=fe;fe=!0;try{ue(r,e,t,n)}finally{(fe=o)||de()}}function Nn(e,t,n){kn(wn,Mn.bind(null,e,t,n))}function jn(e,t,n,r){if(Sn.length){var o=Sn.pop();o.topLevelType=e,o.eventSystemFlags=t,o.nativeEvent=n,o.targetInst=r,e=o}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=Tn,n=e,pe)t(n,void 0);else{pe=!0;try{se(t,n,void 0)}finally{pe=!1,de()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,Sn.length<xn&&Sn.push(e)}}function Mn(e,t,n){if(Cn)if(0<st.length&&-1<vt.indexOf(e))e=gt(null,e,t,n),st.push(e);else{var r=Rn(e,t,n);null===r?wt(e,n):-1<vt.indexOf(e)?(e=gt(r,e,t,n),st.push(e)):function(e,t,n,r){switch(t){case"focus":return ft=kt(ft,e,t,n,r),!0;case"dragenter":return pt=kt(pt,e,t,n,r),!0;case"mouseover":return dt=kt(dt,e,t,n,r),!0;case"pointerover":var o=r.pointerId;return ht.set(o,kt(ht.get(o)||null,e,t,n,r)),!0;case"gotpointercapture":return o=r.pointerId,mt.set(o,kt(mt.get(o)||null,e,t,n,r)),!0}return!1}(r,e,t,n)||(wt(e,n),jn(e,t,n,null))}}function Rn(e,t,n){var r=Pt(n);if(null!==(r=hr(r))){var o=nt(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=rt(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return jn(e,t,n,r),null}function zn(e){if(!ee)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var Un=new("function"==typeof WeakMap?WeakMap:Map);function In(e){var t=Un.get(e);return void 0===t&&(t=new Set,Un.set(e,t)),t}function An(e,t,n){if(!n.has(e)){switch(e){case"scroll":Pn(t,"scroll",!0);break;case"focus":case"blur":Pn(t,"focus",!0),Pn(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":zn(e)&&Pn(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===tt.indexOf(e)&&_n(e,t)}n.add(e)}}var Dn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Fn=["Webkit","ms","Moz","O"];function Ln(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Dn.hasOwnProperty(e)&&Dn[e]?(""+t).trim():t+"px"}function $n(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=Ln(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Dn).forEach((function(e){Fn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Dn[t]=Dn[e]}))}));var Wn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Bn(e,t){if(t){if(Wn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if(!("object"===r(t.dangerouslySetInnerHTML)&&"__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!==r(t.style))throw Error(l(62,""))}}function Vn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Hn(e,t){var n=In(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=m[t];for(var r=0;r<t.length;r++)An(t[r],e,n)}function Qn(){}function qn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Kn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Yn(e,t){var n,r=Kn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Kn(r)}}function Xn(){for(var e=window,t=qn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=qn((e=t.contentWindow).document)}return t}function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Jn="$",Zn="/$",er="$?",tr="$!",nr=null,rr=null;function or(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function ir(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"===r(t.dangerouslySetInnerHTML)&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"==typeof setTimeout?setTimeout:void 0,lr="function"==typeof clearTimeout?clearTimeout:void 0;function ur(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function cr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===Jn||n===tr||n===er){if(0===t)return e;t--}else n===Zn&&t++}e=e.previousSibling}return null}var sr=Math.random().toString(36).slice(2),fr="__reactInternalInstance$"+sr,pr="__reactEventHandlers$"+sr,dr="__reactContainere$"+sr;function hr(e){var t=e[fr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[dr]||n[fr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cr(e);null!==e;){if(n=e[fr])return n;e=cr(e)}return t}n=(e=n).parentNode}return null}function mr(e){return!(e=e[fr]||e[dr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function vr(e){return e[pr]||null}var br=null,gr=null,wr=null;function kr(){if(wr)return wr;var e,t,n=gr,r=n.length,o="value"in br?br.value:br.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return wr=o.slice(e,1<t?1-t:void 0)}var Er=At.extend({data:null}),xr=At.extend({data:null}),Sr=[9,13,27,32],Tr=ee&&"CompositionEvent"in window,Cr=null;ee&&"documentMode"in document&&(Cr=document.documentMode);var _r=ee&&"TextEvent"in window&&!Cr,Pr=ee&&(!Tr||Cr&&8<Cr&&11>=Cr),Or=String.fromCharCode(32),Nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},jr=!1;function Mr(e,t){switch(e){case"keyup":return-1!==Sr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Rr(e){return"object"===r(e=e.detail)&&"data"in e?e.data:null}var zr=!1;var Ur={eventTypes:Nr,extractEvents:function(e,t,n,r){var o;if(Tr)e:{switch(e){case"compositionstart":var i=Nr.compositionStart;break e;case"compositionend":i=Nr.compositionEnd;break e;case"compositionupdate":i=Nr.compositionUpdate;break e}i=void 0}else zr?Mr(e,n)&&(i=Nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=Nr.compositionStart);return i?(Pr&&"ko"!==n.locale&&(zr||i!==Nr.compositionStart?i===Nr.compositionEnd&&zr&&(o=kr()):(gr="value"in(br=r)?br.value:br.textContent,zr=!0)),i=Er.getPooled(i,t,n,r),o?i.data=o:null!==(o=Rr(n))&&(i.data=o),zt(i),o=i):o=null,(e=_r?function(e,t){switch(e){case"compositionend":return Rr(t);case"keypress":return 32!==t.which?null:(jr=!0,Or);case"textInput":return(e=t.data)===Or&&jr?null:e;default:return null}}(e,n):function(e,t){if(zr)return"compositionend"===e||!Tr&&Mr(e,t)?(e=kr(),wr=gr=br=null,zr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Pr&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=xr.getPooled(Nr.beforeInput,t,n,r)).data=e,zt(t)):t=null,null===o?t:null===t?o:[o,t]}},Ir={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ar(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ir[e.type]:"textarea"===t}var Dr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Fr(e,t,n){return(e=At.getPooled(Dr.change,e,t,n)).type="change",ie(n),zt(e),e}var Lr=null,$r=null;function Wr(e){j(e)}function Br(e){if(_e(yr(e)))return e}function Vr(e,t){if("change"===e)return t}var Hr=!1;function Qr(){Lr&&(Lr.detachEvent("onpropertychange",qr),$r=Lr=null)}function qr(e){if("value"===e.propertyName&&Br($r))if(e=Fr($r,e,Pt(e)),fe)j(e);else{fe=!0;try{le(Wr,e)}finally{fe=!1,de()}}}function Kr(e,t,n){"focus"===e?(Qr(),$r=n,(Lr=t).attachEvent("onpropertychange",qr)):"blur"===e&&Qr()}function Yr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Br($r)}function Xr(e,t){if("click"===e)return Br(t)}function Gr(e,t){if("input"===e||"change"===e)return Br(t)}ee&&(Hr=zn("input")&&(!document.documentMode||9<document.documentMode));var Jr,Zr={eventTypes:Dr,_isInputEventSupported:Hr,extractEvents:function(e,t,n,r){var o=t?yr(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Vr;else if(Ar(o))if(Hr)a=Gr;else{a=Yr;var l=Kr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Xr);if(a&&(a=a(e,t)))return Fr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Re(o,"number",o.value)}},eo={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},to={eventTypes:eo,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?hr(t):null)&&(t!==(i=nt(t))||5!==t.tag&&6!==t.tag)&&(t=null)):a=null,a===t)return null;if("mouseout"===e||"mouseover"===e)var l=nn,u=eo.mouseLeave,c=eo.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=rn,u=eo.pointerLeave,c=eo.pointerEnter,s="pointer");if(e=null==a?o:yr(a),o=null==t?o:yr(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(r=l.getPooled(c,t,n,r)).type=s+"enter",r.target=o,r.relatedTarget=e,s=t,(l=a)&&s)e:{for(e=s,a=0,t=c=l;t;t=Ot(t))a++;for(t=0,o=e;o;o=Ot(o))t++;for(;0<a-t;)c=Ot(c),a--;for(;0<t-a;)e=Ot(e),t--;for(;a--;){if(c===e||c===e.alternate)break e;c=Ot(c),e=Ot(e)}c=null}else c=null;for(e=c,c=[];l&&l!==e&&(null===(a=l.alternate)||a!==e);)c.push(l),l=Ot(l);for(l=[];s&&s!==e&&(null===(a=s.alternate)||a!==e);)l.push(s),s=Ot(s);for(s=0;s<c.length;s++)Mt(c[s],"bubbled",u);for(s=l.length;0<s--;)Mt(l[s],"captured",r);return n===Jr?(Jr=null,[u]):(Jr=n,[u,r])}};var no="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ro=Object.prototype.hasOwnProperty;function oo(e,t){if(no(e,t))return!0;if("object"!==r(e)||null===e||"object"!==r(t)||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(o=0;o<n.length;o++)if(!ro.call(t,n[o])||!no(e[n[o]],t[n[o]]))return!1;return!0}var io=ee&&"documentMode"in document&&11>=document.documentMode,ao={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},lo=null,uo=null,co=null,so=!1;function fo(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return so||null==lo||lo!==qn(n)?null:("selectionStart"in(n=lo)&&Gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},co&&oo(co,n)?null:(co=n,(e=At.getPooled(ao.select,uo,e,t)).type="select",e.target=lo,zt(e),e))}var po={eventTypes:ao,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=In(i),o=m.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?yr(t):window,e){case"focus":(Ar(i)||"true"===i.contentEditable)&&(lo=i,uo=t,co=null);break;case"blur":co=uo=lo=null;break;case"mousedown":so=!0;break;case"contextmenu":case"mouseup":case"dragend":return so=!1,fo(n,r);case"selectionchange":if(io)break;case"keydown":case"keyup":return fo(n,r)}return null}};M.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=vr,S=mr,T=yr,M.injectEventPluginsByName({SimpleEventPlugin:gn,EnterLeaveEventPlugin:to,ChangeEventPlugin:Zr,SelectEventPlugin:po,BeforeInputEventPlugin:Ur}),new Set;var ho=[],mo=-1;function yo(e){0>mo||(e.current=ho[mo],ho[mo]=null,mo--)}function vo(e,t){ho[++mo]=e.current,e.current=t}var bo={},go={current:bo},wo={current:!1},ko=bo;function Eo(e,t){var n=e.type.contextTypes;if(!n)return bo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function xo(e){return null!=(e=e.childContextTypes)}function So(e){yo(wo),yo(go)}function To(e){yo(wo),yo(go)}function Co(e,t,n){if(go.current!==bo)throw Error(l(168));vo(go,t),vo(wo,n)}function _o(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,J(t)||"Unknown",o));return i({},n,{},r)}function Po(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||bo,ko=go.current,vo(go,t),vo(wo,wo.current),!0}function Oo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(t=_o(e,t,ko),r.__reactInternalMemoizedMergedChildContext=t,yo(wo),yo(go),vo(go,t)):yo(wo),vo(wo,n)}var No=a.unstable_runWithPriority,jo=a.unstable_scheduleCallback,Mo=a.unstable_cancelCallback,Ro=a.unstable_shouldYield,zo=a.unstable_requestPaint,Uo=a.unstable_now,Io=a.unstable_getCurrentPriorityLevel,Ao=a.unstable_ImmediatePriority,Do=a.unstable_UserBlockingPriority,Fo=a.unstable_NormalPriority,Lo=a.unstable_LowPriority,$o=a.unstable_IdlePriority,Wo={},Bo=void 0!==zo?zo:function(){},Vo=null,Ho=null,Qo=!1,qo=Uo(),Ko=1e4>qo?Uo:function(){return Uo()-qo};function Yo(){switch(Io()){case Ao:return 99;case Do:return 98;case Fo:return 97;case Lo:return 96;case $o:return 95;default:throw Error(l(332))}}function Xo(e){switch(e){case 99:return Ao;case 98:return Do;case 97:return Fo;case 96:return Lo;case 95:return $o;default:throw Error(l(332))}}function Go(e,t){return e=Xo(e),No(e,t)}function Jo(e,t,n){return e=Xo(e),jo(e,t,n)}function Zo(e){return null===Vo?(Vo=[e],Ho=jo(Ao,ti)):Vo.push(e),Wo}function ei(){if(null!==Ho){var e=Ho;Ho=null,Mo(e)}ti()}function ti(){if(!Qo&&null!==Vo){Qo=!0;var e=0;try{var t=Vo;Go(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Vo=null}catch(t){throw null!==Vo&&(Vo=Vo.slice(e+1)),jo(Ao,ei),t}finally{Qo=!1}}}var ni=3;function ri(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function oi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ii={current:null},ai=null,li=null,ui=null;function ci(){ui=li=ai=null}function si(e,t){var n=e.type._context;vo(ii,n._currentValue),n._currentValue=t}function fi(e){var t=ii.current;yo(ii),e.type._context._currentValue=t}function pi(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function di(e,t){ai=e,ui=li=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(qa=!0),e.firstContext=null)}function hi(e,t){if(ui!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ui=e,t=1073741823),t={context:e,observedBits:t,next:null},null===li){if(null===ai)throw Error(l(308));li=t,ai.dependencies={expirationTime:0,firstContext:t,responders:null}}else li=li.next=t;return e._currentValue}var mi=!1;function yi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function vi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function bi(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function gi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function wi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=yi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=yi(e.memoizedState),o=n.updateQueue=yi(n.memoizedState)):r=e.updateQueue=vi(o):null===o&&(o=n.updateQueue=vi(r));null===o||r===o?gi(r,t):null===r.lastUpdate||null===o.lastUpdate?(gi(r,t),gi(o,t)):(gi(r,t),o.lastUpdate=t)}function ki(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=yi(e.memoizedState):Ei(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Ei(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=vi(t)),t}function xi(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(o="function"==typeof(e=n.payload)?e.call(a,r,o):e))break;return i({},r,o);case 2:mi=!0}return r}function Si(e,t,n,r,o){mi=!1;for(var i=(t=Ei(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(Ou(s,u.suspenseConfig),c=xi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=xi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,Nu(l),e.expirationTime=l,e.memoizedState=c}function Ti(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Ci(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Ci(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Ci(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw Error(l(191,n));n.call(r)}e=e.nextEffect}}var _i=z.ReactCurrentBatchConfig,Pi=(new o.Component).refs;function Oi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ni={isMounted:function(e){return!!(e=e._reactInternalFiber)&&nt(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=yu(),o=_i.suspense;(o=bi(r=vu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),wi(e,o),bu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=yu(),o=_i.suspense;(o=bi(r=vu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),wi(e,o),bu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=yu(),r=_i.suspense;(r=bi(n=vu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),wi(e,r),bu(e,n)}};function ji(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!oo(n,r)||!oo(o,i))}function Mi(e,t,n){var o=!1,i=bo,a=t.contextType;return"object"===r(a)&&null!==a?a=hi(a):(i=xo(t)?ko:go.current,a=(o=null!=(o=t.contextTypes))?Eo(e,i):bo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ni,e.stateNode=t,t._reactInternalFiber=e,o&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function Ri(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ni.enqueueReplaceState(t,t.state,null)}function zi(e,t,n,o){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=Pi;var a=t.contextType;"object"===r(a)&&null!==a?i.context=hi(a):(a=xo(t)?ko:go.current,i.context=Eo(e,a)),null!==(a=e.updateQueue)&&(Si(e,a,n,i,o),i.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(Oi(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&Ni.enqueueReplaceState(i,i.state,null),null!==(a=e.updateQueue)&&(Si(e,a,n,i,o),i.state=e.memoizedState)),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var Ui=Array.isArray;function Ii(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!==r(e)){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var o=n.stateNode}if(!o)throw Error(l(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=o.refs;t===Pi&&(t=o.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ai(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Di(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t,n){return(e=Xu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function c(e,t,n,r){return null===t||6!==t.tag?((t=Zu(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=Ii(e,t,n),r.return=e,r):((r=Gu(n.type,n.key,n.props,null,e.mode,r)).ref=Ii(e,t,n),r.return=e,r)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ec(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function p(e,t,n,r,o){return null===t||7!==t.tag?((t=Ju(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Zu(""+t,e.mode,n)).return=e,t;if("object"===r(t)&&null!==t){switch(t.$$typeof){case A:return(n=Gu(t.type,t.key,t.props,null,e.mode,n)).ref=Ii(e,null,t),n.return=e,n;case D:return(t=ec(t,e.mode,n)).return=e,t}if(Ui(t)||G(t))return(t=Ju(t,e.mode,n,null)).return=e,t;Ai(e,t)}return null}function h(e,t,n,o){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:c(e,t,""+n,o);if("object"===r(n)&&null!==n){switch(n.$$typeof){case A:return n.key===i?n.type===F?p(e,t,n.props.children,o,i):s(e,t,n,o):null;case D:return n.key===i?f(e,t,n,o):null}if(Ui(n)||G(n))return null!==i?null:p(e,t,n,o,null);Ai(e,n)}return null}function m(e,t,n,o,i){if("string"==typeof o||"number"==typeof o)return c(t,e=e.get(n)||null,""+o,i);if("object"===r(o)&&null!==o){switch(o.$$typeof){case A:return e=e.get(null===o.key?n:o.key)||null,o.type===F?p(t,e,o.props.children,i,o.key):s(t,e,o,i);case D:return f(t,e=e.get(null===o.key?n:o.key)||null,o,i)}if(Ui(o)||G(o))return p(t,e=e.get(n)||null,o,i,null);Ai(t,o)}return null}function y(r,i,l,u){for(var c=null,s=null,f=i,p=i=0,y=null;null!==f&&p<l.length;p++){f.index>p?(y=f,f=null):y=f.sibling;var v=h(r,f,l[p],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(r,f),i=a(v,i,p),null===s?c=v:s.sibling=v,s=v,f=y}if(p===l.length)return n(r,f),c;if(null===f){for(;p<l.length;p++)null!==(f=d(r,l[p],u))&&(i=a(f,i,p),null===s?c=f:s.sibling=f,s=f);return c}for(f=o(r,f);p<l.length;p++)null!==(y=m(f,r,p,l[p],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?p:y.key),i=a(y,i,p),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(r,e)})),c}function v(r,i,u,c){var s=G(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,p=i,y=i=0,v=null,b=u.next();null!==p&&!b.done;y++,b=u.next()){p.index>y?(v=p,p=null):v=p.sibling;var g=h(r,p,b.value,c);if(null===g){null===p&&(p=v);break}e&&p&&null===g.alternate&&t(r,p),i=a(g,i,y),null===f?s=g:f.sibling=g,f=g,p=v}if(b.done)return n(r,p),s;if(null===p){for(;!b.done;y++,b=u.next())null!==(b=d(r,b.value,c))&&(i=a(b,i,y),null===f?s=b:f.sibling=b,f=b);return s}for(p=o(r,p);!b.done;y++,b=u.next())null!==(b=m(p,r,y,b.value,c))&&(e&&null!==b.alternate&&p.delete(null===b.key?y:b.key),i=a(b,i,y),null===f?s=b:f.sibling=b,f=b);return e&&p.forEach((function(e){return t(r,e)})),s}return function(e,o,a,c){var s="object"===r(a)&&null!==a&&a.type===F&&null===a.key;s&&(a=a.props.children);var f="object"===r(a)&&null!==a;if(f)switch(a.$$typeof){case A:e:{for(f=a.key,s=o;null!==s;){if(s.key===f){if(7===s.tag?a.type===F:s.elementType===a.type){n(e,s.sibling),(o=i(s,a.type===F?a.props.children:a.props)).ref=Ii(e,s,a),o.return=e,e=o;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===F?((o=Ju(a.props.children,e.mode,c,a.key)).return=e,e=o):((c=Gu(a.type,a.key,a.props,null,e.mode,c)).ref=Ii(e,o,a),c.return=e,e=c)}return u(e);case D:e:{for(s=a.key;null!==o;){if(o.key===s){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){n(e,o.sibling),(o=i(o,a.children||[])).return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}(o=ec(a,e.mode,c)).return=e,e=o}return u(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==o&&6===o.tag?(n(e,o.sibling),(o=i(o,a)).return=e,e=o):(n(e,o),(o=Zu(a,e.mode,c)).return=e,e=o),u(e);if(Ui(a))return y(e,o,a,c);if(G(a))return v(e,o,a,c);if(f&&Ai(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,o)}}var Fi=Di(!0),Li=Di(!1),$i={},Wi={current:$i},Bi={current:$i},Vi={current:$i};function Hi(e){if(e===$i)throw Error(l(174));return e}function Qi(e,t){vo(Vi,t),vo(Bi,e),vo(Wi,$i);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:We(null,"");break;default:t=We(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}yo(Wi),vo(Wi,t)}function qi(e){yo(Wi),yo(Bi),yo(Vi)}function Ki(e){Hi(Vi.current);var t=Hi(Wi.current),n=We(t,e.type);t!==n&&(vo(Bi,e),vo(Wi,n))}function Yi(e){Bi.current===e&&(yo(Wi),yo(Bi))}var Xi={current:0};function Gi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===er||n.data===tr))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ji(e,t){return{responder:e,props:t}}var Zi=z.ReactCurrentDispatcher,ea=z.ReactCurrentBatchConfig,ta=0,na=null,ra=null,oa=null,ia=null,aa=null,la=null,ua=0,ca=null,sa=0,fa=!1,pa=null,da=0;function ha(){throw Error(l(321))}function ma(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!no(e[n],t[n]))return!1;return!0}function ya(e,t,n,r,o,i){if(ta=i,na=t,oa=null!==e?e.memoizedState:null,Zi.current=null===oa?Ua:Ia,t=n(r,o),fa){do{fa=!1,da+=1,oa=null!==e?e.memoizedState:null,la=ia,ca=aa=ra=null,Zi.current=Ia,t=n(r,o)}while(fa);pa=null,da=0}if(Zi.current=za,(e=na).memoizedState=ia,e.expirationTime=ua,e.updateQueue=ca,e.effectTag|=sa,e=null!==ra&&null!==ra.next,ta=0,la=aa=ia=oa=ra=na=null,ua=0,ca=null,sa=0,e)throw Error(l(300));return t}function va(){Zi.current=za,ta=0,la=aa=ia=oa=ra=na=null,ua=0,ca=null,sa=0,fa=!1,pa=null,da=0}function ba(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===aa?ia=aa=e:aa=aa.next=e,aa}function ga(){if(null!==la)la=(aa=la).next,oa=null!==(ra=oa)?ra.next:null;else{if(null===oa)throw Error(l(310));var e={memoizedState:(ra=oa).memoizedState,baseState:ra.baseState,queue:ra.queue,baseUpdate:ra.baseUpdate,next:null};aa=null===aa?ia=e:aa.next=e,oa=ra.next}return aa}function wa(e,t){return"function"==typeof t?t(e):t}function ka(e){var t=ga(),n=t.queue;if(null===n)throw Error(l(311));if(n.lastRenderedReducer=e,0<da){var r=n.dispatch;if(null!==pa){var o=pa.get(n);if(void 0!==o){pa.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return no(i,t.memoizedState)||(qa=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var a=t.baseUpdate;if(i=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<ta?(s||(s=!0,u=a,o=i),f>ua&&Nu(ua=f)):(Ou(f,c.suspenseConfig),i=c.eagerReducer===e?c.eagerState:e(i,c.action)),a=c,c=c.next}while(null!==c&&c!==r);s||(u=a,o=i),no(i,t.memoizedState)||(qa=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function Ea(e){var t=ba();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:wa,lastRenderedState:e}).dispatch=Ra.bind(null,na,e),[t.memoizedState,e]}function xa(e){return ka(wa)}function Sa(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ca?(ca={lastEffect:null}).lastEffect=e.next=e:null===(t=ca.lastEffect)?ca.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ca.lastEffect=e),e}function Ta(e,t,n,r){var o=ba();sa|=e,o.memoizedState=Sa(t,n,void 0,void 0===r?null:r)}function Ca(e,t,n,r){var o=ga();r=void 0===r?null:r;var i=void 0;if(null!==ra){var a=ra.memoizedState;if(i=a.destroy,null!==r&&ma(r,a.deps))return void Sa(0,n,i,r)}sa|=e,o.memoizedState=Sa(t,n,i,r)}function _a(e,t){return Ta(516,192,e,t)}function Pa(e,t){return Ca(516,192,e,t)}function Oa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Na(){}function ja(e,t){return ba().memoizedState=[e,void 0===t?null:t],e}function Ma(e,t){var n=ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ma(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ra(e,t,n){if(!(25>da))throw Error(l(301));var r=e.alternate;if(e===na||null!==r&&r===na)if(fa=!0,e={expirationTime:ta,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===pa&&(pa=new Map),void 0===(n=pa.get(t)))pa.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=yu(),i=_i.suspense;i={expirationTime:o=vu(o,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.last;if(null===a)i.next=i;else{var u=a.next;null!==u&&(i.next=u),a.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,no(s,c))return}catch(e){}bu(e,o)}}var za={readContext:hi,useCallback:ha,useContext:ha,useEffect:ha,useImperativeHandle:ha,useLayoutEffect:ha,useMemo:ha,useReducer:ha,useRef:ha,useState:ha,useDebugValue:ha,useResponder:ha,useDeferredValue:ha,useTransition:ha},Ua={readContext:hi,useCallback:ja,useContext:hi,useEffect:_a,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ta(4,36,Oa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ta(4,36,e,t)},useMemo:function(e,t){var n=ba();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ba();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ra.bind(null,na,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ba().memoizedState=e},useState:Ea,useDebugValue:Na,useResponder:Ji,useDeferredValue:function(e,t){var n=Ea(e),r=n[0],o=n[1];return _a((function(){a.unstable_next((function(){var n=ea.suspense;ea.suspense=void 0===t?null:t;try{o(e)}finally{ea.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=Ea(!1),n=t[0],r=t[1];return[ja((function(t){r(!0),a.unstable_next((function(){var n=ea.suspense;ea.suspense=void 0===e?null:e;try{r(!1),t()}finally{ea.suspense=n}}))}),[e,n]),n]}},Ia={readContext:hi,useCallback:Ma,useContext:hi,useEffect:Pa,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ca(4,36,Oa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ca(4,36,e,t)},useMemo:function(e,t){var n=ga();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ma(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ka,useRef:function(){return ga().memoizedState},useState:xa,useDebugValue:Na,useResponder:Ji,useDeferredValue:function(e,t){var n=xa(),r=n[0],o=n[1];return Pa((function(){a.unstable_next((function(){var n=ea.suspense;ea.suspense=void 0===t?null:t;try{o(e)}finally{ea.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=xa(),n=t[0],r=t[1];return[Ma((function(t){r(!0),a.unstable_next((function(){var n=ea.suspense;ea.suspense=void 0===e?null:e;try{r(!1),t()}finally{ea.suspense=n}}))}),[e,n]),n]}},Aa=null,Da=null,Fa=!1;function La(e,t){var n=Ku(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function $a(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Wa(e){if(Fa){var t=Da;if(t){var n=t;if(!$a(e,t)){if(!(t=ur(n.nextSibling))||!$a(e,t))return e.effectTag=-1025&e.effectTag|2,Fa=!1,void(Aa=e);La(Aa,n)}Aa=e,Da=ur(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Fa=!1,Aa=e}}function Ba(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Aa=e}function Va(e){if(e!==Aa)return!1;if(!Fa)return Ba(e),Fa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!ir(t,e.memoizedProps))for(t=Da;t;)La(e,t),t=ur(t.nextSibling);if(Ba(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===Zn){if(0===t){Da=ur(e.nextSibling);break e}t--}else n!==Jn&&n!==tr&&n!==er||t++}e=e.nextSibling}Da=null}}else Da=Aa?ur(e.stateNode.nextSibling):null;return!0}function Ha(){Da=Aa=null,Fa=!1}var Qa=z.ReactCurrentOwner,qa=!1;function Ka(e,t,n,r){t.child=null===e?Li(t,null,n,r):Fi(t,e.child,n,r)}function Ya(e,t,n,r,o){n=n.render;var i=t.ref;return di(t,o),r=ya(e,t,n,r,i,o),null===e||qa?(t.effectTag|=1,Ka(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),pl(e,t,o))}function Xa(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Yu(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Gu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ga(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:oo)(o,r)&&e.ref===t.ref)?pl(e,t,i):(t.effectTag|=1,(e=Xu(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ga(e,t,n,r,o,i){return null!==e&&oo(e.memoizedProps,r)&&e.ref===t.ref&&(qa=!1,o<i)?pl(e,t,i):Za(e,t,n,r,i)}function Ja(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Za(e,t,n,r,o){var i=xo(n)?ko:go.current;return i=Eo(t,i),di(t,o),n=ya(e,t,n,r,i,o),null===e||qa?(t.effectTag|=1,Ka(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),pl(e,t,o))}function el(e,t,n,o,i){if(xo(n)){var a=!0;Po(t)}else a=!1;if(di(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Mi(t,n,o),zi(t,n,o,i),o=!0;else if(null===e){var l=t.stateNode,u=t.memoizedProps;l.props=u;var c=l.context,s=n.contextType;"object"===r(s)&&null!==s?s=hi(s):s=Eo(t,s=xo(n)?ko:go.current);var f=n.getDerivedStateFromProps,p="function"==typeof f||"function"==typeof l.getSnapshotBeforeUpdate;p||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==o||c!==s)&&Ri(t,l,o,s),mi=!1;var d=t.memoizedState;c=l.state=d;var h=t.updateQueue;null!==h&&(Si(t,h,o,l,i),c=t.memoizedState),u!==o||d!==c||wo.current||mi?("function"==typeof f&&(Oi(t,n,f,o),c=t.memoizedState),(u=mi||ji(t,n,u,o,d,c,s))?(p||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=o,t.memoizedState=c),l.props=o,l.state=c,l.context=s,o=u):("function"==typeof l.componentDidMount&&(t.effectTag|=4),o=!1)}else l=t.stateNode,u=t.memoizedProps,l.props=t.type===t.elementType?u:oi(t.type,u),c=l.context,"object"===r(s=n.contextType)&&null!==s?s=hi(s):s=Eo(t,s=xo(n)?ko:go.current),(p="function"==typeof(f=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==o||c!==s)&&Ri(t,l,o,s),mi=!1,c=t.memoizedState,d=l.state=c,null!==(h=t.updateQueue)&&(Si(t,h,o,l,i),d=t.memoizedState),u!==o||c!==d||wo.current||mi?("function"==typeof f&&(Oi(t,n,f,o),d=t.memoizedState),(f=mi||ji(t,n,u,o,c,d,s))?(p||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(o,d,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(o,d,s)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=o,t.memoizedState=d),l.props=o,l.state=d,l.context=s,o=f):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),o=!1);return tl(e,t,n,o,a,i)}function tl(e,t,n,r,o,i){Ja(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Oo(t,n,!1),pl(e,t,i);r=t.stateNode,Qa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Fi(t,e.child,null,i),t.child=Fi(t,null,l,i)):Ka(e,t,l,i),t.memoizedState=r.state,o&&Oo(t,n,!0),t.child}function nl(e){var t=e.stateNode;t.pendingContext?Co(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Co(0,t.context,!1),Qi(e,t.containerInfo)}var rl,ol,il,al,ll={dehydrated:null,retryTime:0};function ul(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Xi.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),vo(Xi,1&a),null===e){if(void 0!==i.fallback&&Wa(t),l){if(l=i.fallback,(i=Ju(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ju(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=ll,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Li(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Xu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Xu(o,i,o.expirationTime)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=ll,t.child=n,o}return n=Fi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=Ju(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ju(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=ll,t.child=i,n}return t.memoizedState=null,t.child=Fi(t,e,i.children,n)}function cl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),pi(e.return,t)}function sl(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function fl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ka(e,t,r.children,n),0!=(2&(r=Xi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&cl(e,n);else if(19===e.tag)cl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(vo(Xi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Gi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),sl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Gi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}sl(t,!0,n,null,i,t.lastEffect);break;case"together":sl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function pl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&Nu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Xu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Xu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function dl(e){e.effectTag|=4}function hl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ml(e){switch(e.tag){case 1:xo(e.type)&&So();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(qi(),To(),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Yi(e),null;case 13:return yo(Xi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return yo(Xi),null;case 4:return qi(),null;case 10:return fi(e),null;default:return null}}function yl(e,t){return{value:e,source:t,stack:Z(t)}}rl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ol=function(){},il=function(e,t,n,r,o){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Hi(Wi.current),e=null,n){case"input":a=Pe(c,a),r=Pe(c,r),e=[];break;case"option":a=ze(c,a),r=ze(c,r),e=[];break;case"select":a=i({},a,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":a=Ie(c,a),r=Ie(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=Qn)}for(l in Bn(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(h.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,""+s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(h.hasOwnProperty(l)?(null!=s&&Hn(o,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&dl(t)}},al=function(e,t,n,r){n!==r&&dl(t)};var vl="function"==typeof WeakSet?WeakSet:Set;function bl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=Z(n)),null!==n&&J(n.type),t=t.value,null!==e&&1===e.tag&&J(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function gl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Wu(e,t)}else t.current=null}function wl(e,t){switch(t.tag){case 0:case 11:case 15:kl(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:oi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}function kl(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function El(e,t,n){switch("function"==typeof Qu&&Qu(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Go(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Wu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:gl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Wu(e,t)}}(t,n);break;case 5:gl(t);break;case 4:Cl(e,t,n)}}function xl(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&xl(t)}function Sl(e){return 5===e.tag||3===e.tag||4===e.tag}function Tl(e){e:{for(var t=e.return;null!==t;){if(Sl(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(He(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Sl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var i=5===o.tag||6===o.tag;if(i){var a=i?o.stateNode:o.stateNode.instance;if(n)if(r){var u=a;a=n,8===(i=t).nodeType?i.parentNode.insertBefore(u,a):i.insertBefore(u,a)}else t.insertBefore(a,n);else r?(8===(u=t).nodeType?(i=u.parentNode).insertBefore(a,u):(i=u).appendChild(a),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=Qn)):t.appendChild(a)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Cl(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(El(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(El(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function _l(e,t){switch(t.tag){case 0:case 11:case 14:case 15:kl(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[pr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ne(n,r),Vn(e,o),t=Vn(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?$n(n,u):"dangerouslySetInnerHTML"===a?Ve(n,u):"children"===a?He(n,u):Se(n,a,u,t)}switch(e){case"input":je(n,r);break;case"textarea":De(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ue(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ue(n,!!r.multiple,r.defaultValue,!0):Ue(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw Error(l(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,_t(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,ru=Ko()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=Ln("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}Pl(t);break;case 19:Pl(t);break;case 17:case 20:case 21:break;default:throw Error(l(163))}}function Pl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new vl),t.forEach((function(t){var r=Vu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var Ol="function"==typeof WeakMap?WeakMap:Map;function Nl(e,t,n){(n=bi(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){au||(au=!0,lu=r),bl(e,t)},n}function jl(e,t,n){(n=bi(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return bl(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===uu?uu=new Set([this]):uu.add(this),bl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ml,Rl=Math.ceil,zl=z.ReactCurrentDispatcher,Ul=z.ReactCurrentOwner,Il=0,Al=8,Dl=16,Fl=32,Ll=0,$l=1,Wl=2,Bl=3,Vl=4,Hl=5,Ql=Il,ql=null,Kl=null,Yl=0,Xl=Ll,Gl=null,Jl=1073741823,Zl=1073741823,eu=null,tu=0,nu=!1,ru=0,ou=500,iu=null,au=!1,lu=null,uu=null,cu=!1,su=null,fu=90,pu=null,du=0,hu=null,mu=0;function yu(){return(Ql&(Dl|Fl))!==Il?1073741821-(Ko()/10|0):0!==mu?mu:mu=1073741821-(Ko()/10|0)}function vu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Yo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Ql&Dl)!==Il)return Yl;if(null!==n)e=ri(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=ri(e,150,100);break;case 97:case 96:e=ri(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==ql&&e===Yl&&--e,e}function bu(e,t){if(50<du)throw du=0,hu=null,Error(l(185));if(null!==(e=gu(e,t))){var n=Yo();1073741823===t?(Ql&Al)!==Il&&(Ql&(Dl|Fl))===Il?xu(e):(ku(e),Ql===Il&&ei()):ku(e),(4&Ql)===Il||98!==n&&99!==n||(null===pu?pu=new Map([[e,t]]):(void 0===(n=pu.get(e))||n>t)&&pu.set(e,t))}}function gu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(ql===o&&(Nu(t),Xl===Vl&&rc(o,Yl)),oc(o,t)),o}function wu(e){var t=e.lastExpiredTime;return 0!==t?t:nc(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function ku(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Zo(xu.bind(null,e));else{var t=wu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=yu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Wo&&Mo(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Zo(xu.bind(null,e)):Jo(r,Eu.bind(null,e),{timeout:10*(1073741821-t)-Ko()}),e.callbackNode=t}}}function Eu(e,t){if(mu=0,t)return ic(e,t=yu()),ku(e),null;var n=wu(e);if(0!==n){if(t=e.callbackNode,(Ql&(Dl|Fl))!==Il)throw Error(l(327));if(Fu(),e===ql&&n===Yl||Cu(e,n),null!==Kl){var r=Ql;Ql|=Dl;for(var o=Pu();;)try{Mu();break}catch(t){_u(e,t)}if(ci(),Ql=r,zl.current=o,Xl===$l)throw t=Gl,Cu(e,n),rc(e,n),ku(e),t;if(null===Kl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Xl,ql=null,r){case Ll:case $l:throw Error(l(345));case Wl:ic(e,2<n?2:n);break;case Bl:if(rc(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Uu(o)),1073741823===Jl&&10<(o=ru+ou-Ko())){if(nu){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,Cu(e,n);break}}if(0!==(i=wu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=ar(Iu.bind(null,e),o);break}Iu(e);break;case Vl:if(rc(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Uu(o)),nu&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,Cu(e,n);break}if(0!==(o=wu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Zl?r=10*(1073741821-Zl)-Ko():1073741823===Jl?r=0:(r=10*(1073741821-Jl)-5e3,0>(r=(o=Ko())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Rl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=ar(Iu.bind(null,e),r);break}Iu(e);break;case Hl:if(1073741823!==Jl&&null!==eu){i=Jl;var a=eu;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Ko()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){rc(e,n),e.timeoutHandle=ar(Iu.bind(null,e),r);break}}Iu(e);break;default:throw Error(l(329))}if(ku(e),e.callbackNode===t)return Eu.bind(null,e)}}return null}function xu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)Iu(e);else{if((Ql&(Dl|Fl))!==Il)throw Error(l(327));if(Fu(),e===ql&&t===Yl||Cu(e,t),null!==Kl){var n=Ql;Ql|=Dl;for(var r=Pu();;)try{ju();break}catch(t){_u(e,t)}if(ci(),Ql=n,zl.current=r,Xl===$l)throw n=Gl,Cu(e,t),rc(e,t),ku(e),n;if(null!==Kl)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,ql=null,Iu(e),ku(e)}}return null}function Su(e,t){var n=Ql;Ql|=1;try{return e(t)}finally{(Ql=n)===Il&&ei()}}function Tu(e,t){var n=Ql;Ql&=-2,Ql|=Al;try{return e(t)}finally{(Ql=n)===Il&&ei()}}function Cu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,lr(n)),null!==Kl)for(n=Kl.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&So();break;case 3:qi(),To();break;case 5:Yi(r);break;case 4:qi();break;case 13:case 19:yo(Xi);break;case 10:fi(r)}n=n.return}ql=e,Kl=Xu(e.current,null),Yl=t,Xl=Ll,Gl=null,Zl=Jl=1073741823,eu=null,tu=0,nu=!1}function _u(e,t){for(;;){try{if(ci(),va(),null===Kl||null===Kl.return)return Xl=$l,Gl=t,null;e:{var n=e,o=Kl.return,i=Kl,a=t;if(t=Yl,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==a&&"object"===r(a)&&"function"==typeof a.then){var l=a,u=0!=(1&Xi.current),c=o;do{var s;if(s=13===c.tag){var f=c.memoizedState;if(null!==f)s=null!==f.dehydrated;else{var p=c.memoizedProps;s=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!u)}}if(s){var d=c.updateQueue;if(null===d){var h=new Set;h.add(l),c.updateQueue=h}else d.add(l);if(0==(2&c.mode)){if(c.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var m=bi(1073741823,null);m.tag=2,wi(i,m)}i.expirationTime=1073741823;break e}a=void 0,i=t;var y=n.pingCache;if(null===y?(y=n.pingCache=new Ol,a=new Set,y.set(l,a)):void 0===(a=y.get(l))&&(a=new Set,y.set(l,a)),!a.has(i)){a.add(i);var v=Bu.bind(null,n,l,i);l.then(v,v)}c.effectTag|=4096,c.expirationTime=t;break e}c=c.return}while(null!==c);a=Error((J(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Z(i))}Xl!==Hl&&(Xl=Wl),a=yl(a,i),c=o;do{switch(c.tag){case 3:l=a,c.effectTag|=4096,c.expirationTime=t,ki(c,Nl(c,l,t));break e;case 1:l=a;var b=c.type,g=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof b.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===uu||!uu.has(g)))){c.effectTag|=4096,c.expirationTime=t,ki(c,jl(c,l,t));break e}}c=c.return}while(null!==c)}Kl=zu(Kl)}catch(e){t=e;continue}break}}function Pu(){var e=zl.current;return zl.current=za,null===e?za:e}function Ou(e,t){e<Jl&&2<e&&(Jl=e),null!==t&&e<Zl&&2<e&&(Zl=e,eu=t)}function Nu(e){e>tu&&(tu=e)}function ju(){for(;null!==Kl;)Kl=Ru(Kl)}function Mu(){for(;null!==Kl&&!Ro();)Kl=Ru(Kl)}function Ru(e){var t=Ml(e.alternate,e,Yl);return e.memoizedProps=e.pendingProps,null===t&&(t=zu(e)),Ul.current=null,t}function zu(e){Kl=e;do{var t=Kl.alternate;if(e=Kl.return,0==(2048&Kl.effectTag)){e:{var n=t,r=Yl,o=(t=Kl).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:xo(t.type)&&So();break;case 3:qi(),To(),(o=t.stateNode).pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),(null===n||null===n.child)&&Va(t)&&dl(t),ol(t);break;case 5:Yi(t),r=Hi(Vi.current);var a=t.type;if(null!==n&&null!=t.stateNode)il(n,t,a,o,r),n.ref!==t.ref&&(t.effectTag|=128);else if(o){var u=Hi(Wi.current);if(Va(t)){var c=(o=t).stateNode;n=o.type;var s=o.memoizedProps,f=r;switch(c[fr]=o,c[pr]=s,a=void 0,r=c,n){case"iframe":case"object":case"embed":_n("load",r);break;case"video":case"audio":for(c=0;c<tt.length;c++)_n(tt[c],r);break;case"source":_n("error",r);break;case"img":case"image":case"link":_n("error",r),_n("load",r);break;case"form":_n("reset",r),_n("submit",r);break;case"details":_n("toggle",r);break;case"input":Oe(r,s),_n("invalid",r),Hn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},_n("invalid",r),Hn(f,"onChange");break;case"textarea":Ae(r,s),_n("invalid",r),Hn(f,"onChange")}for(a in Bn(n,s),c=null,s)s.hasOwnProperty(a)&&(u=s[a],"children"===a?"string"==typeof u?r.textContent!==u&&(c=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(c=["children",""+u]):h.hasOwnProperty(a)&&null!=u&&Hn(f,a));switch(n){case"input":Ce(r),Me(r,s,!0);break;case"textarea":Ce(r),Fe(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Qn)}a=c,o.updateQueue=a,(o=null!==a)&&dl(t)}else{n=t,f=a,s=o,c=9===r.nodeType?r:r.ownerDocument,u===Le.html&&(u=$e(f)),u===Le.html?"script"===f?((s=c.createElement("div")).innerHTML="<script><\/script>",c=s.removeChild(s.firstChild)):"string"==typeof s.is?c=c.createElement(f,{is:s.is}):(c=c.createElement(f),"select"===f&&(f=c,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):c=c.createElementNS(u,f),(s=c)[fr]=n,s[pr]=o,rl(s,t,!1,!1),t.stateNode=s;var p=r,d=Vn(f=a,n=o);switch(f){case"iframe":case"object":case"embed":_n("load",s),r=n;break;case"video":case"audio":for(r=0;r<tt.length;r++)_n(tt[r],s);r=n;break;case"source":_n("error",s),r=n;break;case"img":case"image":case"link":_n("error",s),_n("load",s),r=n;break;case"form":_n("reset",s),_n("submit",s),r=n;break;case"details":_n("toggle",s),r=n;break;case"input":Oe(s,n),r=Pe(s,n),_n("invalid",s),Hn(p,"onChange");break;case"option":r=ze(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=i({},n,{value:void 0}),_n("invalid",s),Hn(p,"onChange");break;case"textarea":Ae(s,n),r=Ie(s,n),_n("invalid",s),Hn(p,"onChange");break;default:r=n}Bn(f,r),c=void 0,u=f;var m=s,y=r;for(c in y)if(y.hasOwnProperty(c)){var v=y[c];"style"===c?$n(m,v):"dangerouslySetInnerHTML"===c?null!=(v=v?v.__html:void 0)&&Ve(m,v):"children"===c?"string"==typeof v?("textarea"!==u||""!==v)&&He(m,v):"number"==typeof v&&He(m,""+v):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(h.hasOwnProperty(c)?null!=v&&Hn(p,c):null!=v&&Se(m,c,v,d))}switch(f){case"input":Ce(s),Me(s,n,!1);break;case"textarea":Ce(s),Fe(s);break;case"option":null!=n.value&&s.setAttribute("value",""+xe(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?Ue(r,!!n.multiple,s,!1):null!=n.defaultValue&&Ue(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Qn)}(o=or(a,o))&&dl(t)}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(l(166));break;case 6:if(n&&null!=t.stateNode)al(n,t,n.memoizedProps,o);else{if("string"!=typeof o&&null===t.stateNode)throw Error(l(166));r=Hi(Vi.current),Hi(Wi.current),Va(t)?(a=(o=t).stateNode,r=o.memoizedProps,a[fr]=o,(o=a.nodeValue!==r)&&dl(t)):(a=t,(o=(9===r.nodeType?r:r.ownerDocument).createTextNode(o))[fr]=a,t.stateNode=o)}break;case 11:break;case 13:if(yo(Xi),o=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}o=null!==o,a=!1,null===n?void 0!==t.memoizedProps.fallback&&Va(t):(a=null!==(r=n.memoizedState),o||null===r||null!==(r=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=r,r.nextEffect=s):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),o&&!a&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Xi.current)?Xl===Ll&&(Xl=Bl):(Xl!==Ll&&Xl!==Bl||(Xl=Vl),0!==tu&&null!==ql&&(rc(ql,Yl),oc(ql,tu)))),(o||a)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:qi(),ol(t);break;case 10:fi(t);break;case 9:case 14:break;case 17:xo(t.type)&&So();break;case 19:if(yo(Xi),null===(o=t.memoizedState))break;if(a=0!=(64&t.effectTag),null===(s=o.rendering)){if(a)hl(o,!1);else if(Xl!==Ll||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=Gi(n))){for(t.effectTag|=64,hl(o,!1),null!==(a=s.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===o.lastEffect&&(t.firstEffect=null),t.lastEffect=o.lastEffect,o=r,a=t.child;null!==a;)n=o,(r=a).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),a=a.sibling;vo(Xi,1&Xi.current|2),t=t.child;break e}n=n.sibling}}else{if(!a)if(null!==(n=Gi(s))){if(t.effectTag|=64,a=!0,null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),hl(o,!0),null===o.tail&&"hidden"===o.tailMode){null!==(t=t.lastEffect=o.lastEffect)&&(t.nextEffect=null);break}}else Ko()>o.tailExpiration&&1<r&&(t.effectTag|=64,a=!0,hl(o,!1),t.expirationTime=t.childExpirationTime=r-1);o.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=o.last)?r.sibling=s:t.child=s,o.last=s)}if(null!==o.tail){0===o.tailExpiration&&(o.tailExpiration=Ko()+500),r=o.tail,o.rendering=r,o.tail=r.sibling,o.lastEffect=t.lastEffect,r.sibling=null,o=Xi.current,vo(Xi,o=a?1&o|2:1&o),t=r;break e}break;case 20:case 21:break;default:throw Error(l(156,t.tag))}t=null}if(o=Kl,1===Yl||1!==o.childExpirationTime){for(a=0,r=o.child;null!==r;)(n=r.expirationTime)>a&&(a=n),(s=r.childExpirationTime)>a&&(a=s),r=r.sibling;o.childExpirationTime=a}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Kl.firstEffect),null!==Kl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Kl.firstEffect),e.lastEffect=Kl.lastEffect),1<Kl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Kl:e.firstEffect=Kl,e.lastEffect=Kl))}else{if(null!==(t=ml(Kl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Kl.sibling))return t;Kl=e}while(null!==Kl);return Xl===Ll&&(Xl=Hl),null}function Uu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Iu(e){var t=Yo();return Go(99,Au.bind(null,e,t)),null}function Au(e,t){if(Fu(),(Ql&(Dl|Fl))!==Il)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Uu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===ql&&(Kl=ql=null,Yl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Ql;Ql|=Fl,Ul.current=null,nr=Cn;var a=Xn();if(Gn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var p=0,d=-1,h=-1,m=0,y=0,v=a,b=null;t:for(;;){for(var g;v!==u||0!==s&&3!==v.nodeType||(d=p+s),v!==f||0!==c&&3!==v.nodeType||(h=p+c),3===v.nodeType&&(p+=v.nodeValue.length),null!==(g=v.firstChild);)b=v,v=g;for(;;){if(v===a)break t;if(b===u&&++m===s&&(d=p),b===f&&++y===c&&(h=p),null!==(g=v.nextSibling))break;b=(v=b).parentNode}v=g}u=-1===d||-1===h?null:{start:d,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;rr={focusedElem:a,selectionRange:u},Cn=!1,iu=o;do{try{Du()}catch(e){if(null===iu)throw Error(l(330));Wu(iu,e),iu=iu.nextEffect}}while(null!==iu);iu=o;do{try{for(a=e,u=t;null!==iu;){var w=iu.effectTag;if(16&w&&He(iu.stateNode,""),128&w){var k=iu.alternate;if(null!==k){var E=k.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&w){case 2:Tl(iu),iu.effectTag&=-3;break;case 6:Tl(iu),iu.effectTag&=-3,_l(iu.alternate,iu);break;case 1024:iu.effectTag&=-1025;break;case 1028:iu.effectTag&=-1025,_l(iu.alternate,iu);break;case 4:_l(iu.alternate,iu);break;case 8:Cl(a,s=iu,u),xl(s)}iu=iu.nextEffect}}catch(e){if(null===iu)throw Error(l(330));Wu(iu,e),iu=iu.nextEffect}}while(null!==iu);if(E=rr,k=Xn(),w=E.focusedElem,u=E.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&Gn(w)&&(k=u.start,void 0===(E=u.end)&&(E=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(E,w.value.length)):(E=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(E=E.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!E.extend&&a>u&&(s=u,u=a,a=s),s=Yn(w,a),f=Yn(w,u),s&&f&&(1!==E.rangeCount||E.anchorNode!==s.node||E.anchorOffset!==s.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),E.removeAllRanges(),a>u?(E.addRange(k),E.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),E.addRange(k))))),k=[];for(E=w;E=E.parentNode;)1===E.nodeType&&k.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(E=k[w]).element.scrollLeft=E.left,E.element.scrollTop=E.top}rr=null,Cn=!!nr,nr=null,e.current=n,iu=o;do{try{for(w=r;null!==iu;){var x=iu.effectTag;if(36&x){var S=iu.alternate;switch(E=w,(k=iu).tag){case 0:case 11:case 15:kl(16,32,k);break;case 1:var T=k.stateNode;if(4&k.effectTag)if(null===S)T.componentDidMount();else{var C=k.elementType===k.type?S.memoizedProps:oi(k.type,S.memoizedProps);T.componentDidUpdate(C,S.memoizedState,T.__reactInternalSnapshotBeforeUpdate)}var _=k.updateQueue;null!==_&&Ti(0,_,T);break;case 3:var P=k.updateQueue;if(null!==P){if(a=null,null!==k.child)switch(k.child.tag){case 5:a=k.child.stateNode;break;case 1:a=k.child.stateNode}Ti(0,P,a)}break;case 5:var O=k.stateNode;null===S&&4&k.effectTag&&or(k.type,k.memoizedProps)&&O.focus();break;case 6:case 4:case 12:break;case 13:if(null===k.memoizedState){var N=k.alternate;if(null!==N){var j=N.memoizedState;if(null!==j){var M=j.dehydrated;null!==M&&_t(M)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(l(163))}}if(128&x){k=void 0;var R=iu.ref;if(null!==R){var z=iu.stateNode;switch(iu.tag){case 5:k=z;break;default:k=z}"function"==typeof R?R(k):R.current=k}}iu=iu.nextEffect}}catch(e){if(null===iu)throw Error(l(330));Wu(iu,e),iu=iu.nextEffect}}while(null!==iu);iu=null,Bo(),Ql=i}else e.current=n;if(cu)cu=!1,su=e,fu=t;else for(iu=o;null!==iu;)t=iu.nextEffect,iu.nextEffect=null,iu=t;if(0===(t=e.firstPendingTime)&&(uu=null),1073741823===t?e===hu?du++:(du=0,hu=e):du=0,"function"==typeof Hu&&Hu(n.stateNode,r),ku(e),au)throw au=!1,e=lu,lu=null,e;return(Ql&Al)!==Il?null:(ei(),null)}function Du(){for(;null!==iu;){var e=iu.effectTag;0!=(256&e)&&wl(iu.alternate,iu),0==(512&e)||cu||(cu=!0,Jo(97,(function(){return Fu(),null}))),iu=iu.nextEffect}}function Fu(){if(90!==fu){var e=97<fu?97:fu;return fu=90,Go(e,Lu)}}function Lu(){if(null===su)return!1;var e=su;if(su=null,(Ql&(Dl|Fl))!==Il)throw Error(l(331));var t=Ql;for(Ql|=Fl,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:kl(128,0,n),kl(0,64,n)}}catch(t){if(null===e)throw Error(l(330));Wu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ql=t,ei(),!0}function $u(e,t,n){wi(e,t=Nl(e,t=yl(n,t),1073741823)),null!==(e=gu(e,1073741823))&&ku(e)}function Wu(e,t){if(3===e.tag)$u(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){$u(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===uu||!uu.has(r))){wi(n,e=jl(n,e=yl(t,e),1073741823)),null!==(n=gu(n,1073741823))&&ku(n);break}}n=n.return}}function Bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),ql===e&&Yl===n?Xl===Vl||Xl===Bl&&1073741823===Jl&&Ko()-ru<ou?Cu(e,Yl):nu=!0:nc(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),ku(e)))}function Vu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=vu(t=yu(),e,null)),null!==(e=gu(e,t))&&ku(e)}Ml=function(e,t,n){var o=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||wo.current)qa=!0;else{if(o<n){switch(qa=!1,t.tag){case 3:nl(t),Ha();break;case 5:if(Ki(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:xo(t.type)&&Po(t);break;case 4:Qi(t,t.stateNode.containerInfo);break;case 10:si(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(o=t.child.childExpirationTime)&&o>=n?ul(e,t,n):(vo(Xi,1&Xi.current),null!==(t=pl(e,t,n))?t.sibling:null);vo(Xi,1&Xi.current);break;case 19:if(o=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(o)return fl(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),vo(Xi,Xi.current),!o)return null}return pl(e,t,n)}qa=!1}}else qa=!1;switch(t.expirationTime=0,t.tag){case 2:if(o=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=Eo(t,go.current),di(t,n),i=ya(null,t,o,e,i,n),t.effectTag|=1,"object"===r(i)&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,va(),xo(o)){var a=!0;Po(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null;var u=o.getDerivedStateFromProps;"function"==typeof u&&Oi(t,o,u,e),i.updater=Ni,t.stateNode=i,i._reactInternalFiber=t,zi(t,o,e,n),t=tl(null,t,o,!0,a,n)}else t.tag=0,Ka(null,t,i,n),t=t.child;return t;case 16:if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,a=t.tag=function(e){if("function"==typeof e)return Yu(e)?1:0;if(null!=e){if((e=e.$$typeof)===H)return 11;if(e===K)return 14}return 2}(i),e=oi(i,e),a){case 0:t=Za(null,t,i,e,n);break;case 1:t=el(null,t,i,e,n);break;case 11:t=Ya(null,t,i,e,n);break;case 14:t=Xa(null,t,i,oi(i.type,e),o,n);break;default:throw Error(l(306,i,""))}return t;case 0:return o=t.type,i=t.pendingProps,Za(e,t,o,i=t.elementType===o?i:oi(o,i),n);case 1:return o=t.type,i=t.pendingProps,el(e,t,o,i=t.elementType===o?i:oi(o,i),n);case 3:if(nl(t),null===(o=t.updateQueue))throw Error(l(282));if(i=null!==(i=t.memoizedState)?i.element:null,Si(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===i)Ha(),t=pl(e,t,n);else{if((i=t.stateNode.hydrate)&&(Da=ur(t.stateNode.containerInfo.firstChild),Aa=t,i=Fa=!0),i)for(n=Li(t,null,o,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ka(e,t,o,n),Ha();t=t.child}return t;case 5:return Ki(t),null===e&&Wa(t),o=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,u=i.children,ir(o,i)?u=null:null!==a&&ir(o,a)&&(t.effectTag|=16),Ja(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ka(e,t,u,n),t=t.child),t;case 6:return null===e&&Wa(t),null;case 13:return ul(e,t,n);case 4:return Qi(t,t.stateNode.containerInfo),o=t.pendingProps,null===e?t.child=Fi(t,null,o,n):Ka(e,t,o,n),t.child;case 11:return o=t.type,i=t.pendingProps,Ya(e,t,o,i=t.elementType===o?i:oi(o,i),n);case 7:return Ka(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ka(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(o=t.type._context,i=t.pendingProps,u=t.memoizedProps,si(t,a=i.value),null!==u){var c=u.value;if(0===(a=no(c,a)?0:0|("function"==typeof o._calculateChangedBits?o._calculateChangedBits(c,a):1073741823))){if(u.children===i.children&&!wo.current){t=pl(e,t,n);break e}}else for(null!==(c=t.child)&&(c.return=t);null!==c;){var s=c.dependencies;if(null!==s){u=c.child;for(var f=s.firstContext;null!==f;){if(f.context===o&&0!=(f.observedBits&a)){1===c.tag&&((f=bi(n,null)).tag=2,wi(c,f)),c.expirationTime<n&&(c.expirationTime=n),null!==(f=c.alternate)&&f.expirationTime<n&&(f.expirationTime=n),pi(c.return,n),s.expirationTime<n&&(s.expirationTime=n);break}f=f.next}}else u=10===c.tag&&c.type===t.type?null:c.child;if(null!==u)u.return=c;else for(u=c;null!==u;){if(u===t){u=null;break}if(null!==(c=u.sibling)){c.return=u.return,u=c;break}u=u.return}c=u}}Ka(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,o=(a=t.pendingProps).children,di(t,n),o=o(i=hi(i,a.unstable_observedBits)),t.effectTag|=1,Ka(e,t,o,n),t.child;case 14:return a=oi(i=t.type,t.pendingProps),Xa(e,t,i,a=oi(i.type,a),o,n);case 15:return Ga(e,t,t.type,t.pendingProps,o,n);case 17:return o=t.type,i=t.pendingProps,i=t.elementType===o?i:oi(o,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,xo(o)?(e=!0,Po(t)):e=!1,di(t,n),Mi(t,o,i),zi(t,o,i,n),tl(null,t,o,!0,e,n);case 19:return fl(e,t,n)}throw Error(l(156,t.tag))};var Hu=null,Qu=null;function qu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Ku(e,t,n,r){return new qu(e,t,n,r)}function Yu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Xu(e,t){var n=e.alternate;return null===n?((n=Ku(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Gu(e,t,n,o,i,a){var u=2;if(o=e,"function"==typeof e)Yu(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case F:return Ju(n.children,i,a,t);case V:u=8,i|=7;break;case L:u=8,i|=1;break;case $:return(e=Ku(12,n,t,8|i)).elementType=$,e.type=$,e.expirationTime=a,e;case Q:return(e=Ku(13,n,t,i)).type=Q,e.elementType=Q,e.expirationTime=a,e;case q:return(e=Ku(19,n,t,i)).elementType=q,e.expirationTime=a,e;default:if("object"===r(e)&&null!==e)switch(e.$$typeof){case W:u=10;break e;case B:u=9;break e;case H:u=11;break e;case K:u=14;break e;case Y:u=16,o=null;break e}throw Error(l(130,null==e?e:r(e),""))}return(t=Ku(u,n,t,i)).elementType=e,t.type=o,t.expirationTime=a,t}function Ju(e,t,n,r){return(e=Ku(7,e,r,t)).expirationTime=n,e}function Zu(e,t,n){return(e=Ku(6,e,null,t)).expirationTime=n,e}function ec(e,t,n){return(t=Ku(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function tc(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function nc(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function rc(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function oc(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function ic(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function ac(e,t,n,r){var o=t.current,i=yu(),a=_i.suspense;i=vu(i,o,a);e:if(n){t:{if(nt(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(xo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(xo(c)){n=_o(n,c,u);break e}}n=u}else n=bo;return null===t.context?t.context=n:t.pendingContext=n,(t=bi(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),wi(o,t),bu(o,i),i}function lc(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function uc(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function cc(e,t){uc(e,t),(e=e.alternate)&&uc(e,t)}function sc(e,t,n){var r=new tc(e,t,n=null!=n&&!0===n.hydrate),o=Ku(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,e[dr]=r.current,n&&0!==t&&function(e){var t=In(e);vt.forEach((function(n){An(n,e,t)})),bt.forEach((function(n){An(n,e,t)}))}(9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function fc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function pc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=lc(a);l.call(e)}}ac(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new sc(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=lc(a);u.call(e)}}Tu((function(){ac(t,a,e,o)}))}return lc(a)}function dc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!fc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:D,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}at=function(e){if(13===e.tag){var t=ri(yu(),150,100);bu(e,t),cc(e,t)}},lt=function(e){if(13===e.tag){yu();var t=ni++;bu(e,t),cc(e,t)}},ut=function(e){if(13===e.tag){var t=yu();bu(e,t=vu(t,e,null)),cc(e,t)}},te=function(e,t,n){switch(t){case"input":if(je(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=vr(r);if(!o)throw Error(l(90));_e(r),je(r,o)}}}break;case"textarea":De(e,n);break;case"select":null!=(t=n.value)&&Ue(e,!!n.multiple,t,!1)}},sc.prototype.render=function(e,t){ac(e,this._internalRoot,null,void 0===t?null:t)},sc.prototype.unmount=function(e){ac(null,this._internalRoot,null,void 0===e?null:e)},le=Su,ue=function(e,t,n,r){var o=Ql;Ql|=4;try{return Go(98,e.bind(null,t,n,r))}finally{(Ql=o)===Il&&ei()}},ce=function(){(Ql&(1|Dl|Fl))===Il&&(function(){if(null!==pu){var e=pu;pu=null,e.forEach((function(e,t){ic(t,e),ku(t)})),ei()}}(),Fu())},se=function(e,t){var n=Ql;Ql|=2;try{return e(t)}finally{(Ql=n)===Il&&ei()}};var hc,mc,yc={createPortal:dc,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=it(t))?null:e.stateNode},hydrate:function(e,t,n){if(!fc(t))throw Error(l(200));return pc(null,e,t,!0,n)},render:function(e,t,n){if(!fc(t))throw Error(l(200));return pc(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!fc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return pc(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!fc(e))throw Error(l(40));return!!e._reactRootContainer&&(Tu((function(){pc(null,null,e,!1,(function(){e._reactRootContainer=null}))})),!0)},unstable_createPortal:function(){return dc.apply(void 0,arguments)},unstable_batchedUpdates:Su,flushSync:function(e,t){if((Ql&(Dl|Fl))!==Il)throw Error(l(187));var n=Ql;Ql|=1;try{return Go(99,e.bind(null,t))}finally{Ql=n,ei()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[mr,yr,vr,M.injectEventPluginsByName,d,zt,function(e){P(e,Rt)},ie,ae,Mn,j,Fu,{current:!1}]}};mc=(hc={findFiberByHostInstance:hr,bundleType:0,version:"16.11.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Hu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Qu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},hc,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:z.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=it(e))?null:e.stateNode},findFiberByHostInstance:function(e){return mc?mc(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var vc={default:yc},bc=vc&&yc||vc;e.exports=bc.default||bc},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v0.17.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i,a,l,u;if(Object.defineProperty(t,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function e(){if(null!==c)try{var n=t.unstable_now();c(!0,n),c=null}catch(t){throw setTimeout(e,0),t}},p=Date.now();t.unstable_now=function(){return Date.now()-p},o=function(e){null!==c?setTimeout(o,0,e):(c=e,setTimeout(f,0))},i=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},l=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,h=window.Date,m=window.setTimeout,y=window.clearTimeout,v=window.requestAnimationFrame,b=window.cancelAnimationFrame;if("undefined"!=typeof console&&("function"!=typeof v&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")),"object"===r(d)&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var g=h.now();t.unstable_now=function(){return h.now()-g}}var w=!1,k=null,E=-1,x=5,S=0;l=function(){return t.unstable_now()>=S},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):33.33};var T=new MessageChannel,C=T.port2;T.port1.onmessage=function(){if(null!==k){var e=t.unstable_now();S=e+x;try{k(!0,e)?C.postMessage(null):(w=!1,k=null)}catch(e){throw C.postMessage(null),e}}else w=!1},o=function(e){k=e,w||(w=!0,C.postMessage(null))},i=function(e,n){E=m((function(){e(t.unstable_now())}),n)},a=function(){y(E),E=-1}}function _(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<N(o,t)))break e;e[r]=t,e[n]=o,n=r}}function P(e){return void 0===(e=e[0])?null:e}function O(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>N(a,n))void 0!==u&&0>N(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>N(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var j=[],M=[],R=1,z=null,U=3,I=!1,A=!1,D=!1;function F(e){for(var t=P(M);null!==t;){if(null===t.callback)O(M);else{if(!(t.startTime<=e))break;O(M),t.sortIndex=t.expirationTime,_(j,t)}t=P(M)}}function L(e){if(D=!1,F(e),!A)if(null!==P(j))A=!0,o($);else{var t=P(M);null!==t&&i(L,t.startTime-e)}}function $(e,n){A=!1,D&&(D=!1,a()),I=!0;var r=U;try{for(F(n),z=P(j);null!==z&&(!(z.expirationTime>n)||e&&!l());){var o=z.callback;if(null!==o){z.callback=null,U=z.priorityLevel;var u=o(z.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?z.callback=u:z===P(j)&&O(j),F(n)}else O(j);z=P(j)}if(null!==z)var c=!0;else{var s=P(M);null!==s&&i(L,s.startTime-n),c=!1}return c}finally{z=null,U=r,I=!1}}function W(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=u;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=U;U=e;try{return t()}finally{U=n}},t.unstable_next=function(e){switch(U){case 1:case 2:case 3:var t=3;break;default:t=U}var n=U;U=t;try{return e()}finally{U=n}},t.unstable_scheduleCallback=function(e,n,l){var u=t.unstable_now();if("object"===r(l)&&null!==l){var c=l.delay;c="number"==typeof c&&0<c?u+c:u,l="number"==typeof l.timeout?l.timeout:W(e)}else l=W(e),c=u;return e={id:R++,callback:n,priorityLevel:e,startTime:c,expirationTime:l=c+l,sortIndex:-1},c>u?(e.sortIndex=c,_(M,e),null===P(j)&&e===P(M)&&(D?a():D=!0,i(L,c-u))):(e.sortIndex=l,_(j,e),A||I||(A=!0,o($))),e},t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_wrapCallback=function(e){var t=U;return function(){var n=U;U=t;try{return e.apply(this,arguments)}finally{U=n}}},t.unstable_getCurrentPriorityLevel=function(){return U},t.unstable_shouldYield=function(){var e=t.unstable_now();F(e);var n=P(j);return n!==z&&null!==z&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<z.expirationTime||l()},t.unstable_requestPaint=B,t.unstable_continueExecution=function(){A||I||(A=!0,o($))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return P(j)},t.unstable_Profiling=null},function(e,t,n){"use strict";var r=n(15);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===("undefined"==typeof window?"undefined":n(window))&&(r=window)}e.exports=r},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.11.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.async_mode"):60111,d=o?Symbol.for("react.concurrent_mode"):60111,h=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,y=o?Symbol.for("react.suspense_list"):60120,v=o?Symbol.for("react.memo"):60115,b=o?Symbol.for("react.lazy"):60116,g=o?Symbol.for("react.fundamental"):60117,w=o?Symbol.for("react.responder"):60118,k=o?Symbol.for("react.scope"):60119;function E(e){if("object"===r(e)&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case p:case d:case l:case c:case u:case m:return e;default:switch(e=e&&e.$$typeof){case f:case h:case s:return e;default:return t}}case b:case v:case a:return t}}}function x(e){return E(e)===d}t.typeOf=E,t.AsyncMode=p,t.ConcurrentMode=d,t.ContextConsumer=f,t.ContextProvider=s,t.Element=i,t.ForwardRef=h,t.Fragment=l,t.Lazy=b,t.Memo=v,t.Portal=a,t.Profiler=c,t.StrictMode=u,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===c||e===u||e===m||e===y||"object"===r(e)&&null!==e&&(e.$$typeof===b||e.$$typeof===v||e.$$typeof===s||e.$$typeof===f||e.$$typeof===h||e.$$typeof===g||e.$$typeof===w||e.$$typeof===k)},t.isAsyncMode=function(e){return x(e)||E(e)===p},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===f},t.isContextProvider=function(e){return E(e)===s},t.isElement=function(e){return"object"===r(e)&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return E(e)===h},t.isFragment=function(e){return E(e)===l},t.isLazy=function(e){return E(e)===b},t.isMemo=function(e){return E(e)===v},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===c},t.isStrictMode=function(e){return E(e)===u},t.isSuspense=function(e){return E(e)===m}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(7),a=n.n(i);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var d=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),a=t&&f(t),l=i||a;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var d=o[s];"."===d?p(o,s):".."===d?(p(o,s),c++):c&&(p(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var y=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"===h(t)||"object"===h(n)){var r=m(t),o=m(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1},v=!0,b="Invariant failed";var g=function(e,t){if(!e)throw v?new Error(b):new Error(b+": "+(t||""))};function w(e){return"/"===e.charAt(0)?e:"/"+e}function k(e){return"/"===e.charAt(0)?e.substr(1):e}function E(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function x(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function S(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function T(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=d(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function C(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var _=!("undefined"==typeof window||!window.document||!window.document.createElement);function P(e,t){t(window.confirm(e))}var O="popstate",N="hashchange";function j(){try{return window.history.state||{}}catch(e){return{}}}function M(e){void 0===e&&(e={}),_||g(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?P:u,f=i.keyLength,p=void 0===f?6:f,d=e.basename?x(w(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return d&&(i=E(i,d)),T(i,r,n)}function m(){return Math.random().toString(36).substr(2,p)}var y=C();function v(e){s($,e),$.length=n.length,y.notifyListeners($.location,$.action)}function b(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(h(e.state))}function k(){R(h(j()))}var M=!1;function R(e){if(M)M=!1,v();else{y.confirmTransitionTo(e,"POP",c,(function(t){t?v({action:"POP",location:e}):function(e){var t=$.location,n=U.indexOf(t.key);-1===n&&(n=0);var r=U.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(M=!0,A(o))}(e)}))}}var z=h(j()),U=[z.key];function I(e){return d+S(e)}function A(e){n.go(e)}var D=0;function F(e){1===(D+=e)&&1===e?(window.addEventListener(O,b),o&&window.addEventListener(N,k)):0===D&&(window.removeEventListener(O,b),o&&window.removeEventListener(N,k))}var L=!1;var $={length:n.length,action:"POP",location:z,createHref:I,push:function(e,t){var o=T(e,t,m(),$.location);y.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=I(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=U.indexOf($.location.key),c=U.slice(0,u+1);c.push(o.key),U=c,v({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=T(e,t,m(),$.location);y.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=I(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=U.indexOf($.location.key);-1!==u&&(U[u]=o.key),v({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=y.setPrompt(e);return L||(F(1),L=!0),function(){return L&&(L=!1,F(-1)),t()}},listen:function(e){var t=y.appendListener(e);return F(1),function(){F(-1),t()}}};return $}var R="hashchange",z={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+k(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:k,decodePath:w},slash:{encodePath:w,decodePath:w}};function U(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function I(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function A(e){window.location.replace(U(window.location.href)+"#"+e)}function D(e){void 0===e&&(e={}),_||g(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?P:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?x(w(e.basename)):"",u=z[a],c=u.encodePath,f=u.decodePath;function p(){var e=f(I());return l&&(e=E(e,l)),T(e)}var d=C();function h(e){s(L,e),L.length=t.length,d.notifyListeners(L.location,L.action)}var m=!1,y=null;function v(){var e,t,n=I(),r=c(n);if(n!==r)A(r);else{var i=p(),a=L.location;if(!m&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(y===S(i))return;y=null,function(e){if(m)m=!1,h();else{d.confirmTransitionTo(e,"POP",o,(function(t){t?h({action:"POP",location:e}):function(e){var t=L.location,n=N.lastIndexOf(S(t));-1===n&&(n=0);var r=N.lastIndexOf(S(e));-1===r&&(r=0);var o=n-r;o&&(m=!0,j(o))}(e)}))}}(i)}}var b=I(),k=c(b);b!==k&&A(k);var O=p(),N=[S(O)];function j(e){t.go(e)}var M=0;function D(e){1===(M+=e)&&1===e?window.addEventListener(R,v):0===M&&window.removeEventListener(R,v)}var F=!1;var L={length:t.length,action:"POP",location:O,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=U(window.location.href)),n+"#"+c(l+S(e))},push:function(e,t){var n=T(e,void 0,void 0,L.location);d.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=S(n),r=c(l+t);if(I()!==r){y=t,function(e){window.location.hash=e}(r);var o=N.lastIndexOf(S(L.location)),i=N.slice(0,o+1);i.push(t),N=i,h({action:"PUSH",location:n})}else h()}}))},replace:function(e,t){var n=T(e,void 0,void 0,L.location);d.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=S(n),r=c(l+t);I()!==r&&(y=t,A(r));var o=N.indexOf(S(L.location));-1!==o&&(N[o]=t),h({action:"REPLACE",location:n})}}))},go:j,goBack:function(){j(-1)},goForward:function(){j(1)},block:function(e){void 0===e&&(e=!1);var t=d.setPrompt(e);return F||(D(1),F=!0),function(){return F&&(F=!1,D(-1)),t()}},listen:function(e){var t=d.appendListener(e);return D(1),function(){D(-1),t()}}};return L}function F(e,t,n){return Math.min(Math.max(e,t),n)}var L=n(3),$=n.n(L),W=n(8),B=n.n(W),V=1073741823;var H=o.a.createContext||function(e,t){var n,o,i="__create-react-context-"+B()()+"__",a=function(e){function n(){var t,n,r;return(t=e.apply(this,arguments)||this).emitter=(n=t.props.value,r=[],{on:function(e){r.push(e)},off:function(e){r=r.filter((function(t){return t!==e}))},get:function(){return n},set:function(e,t){n=e,r.forEach((function(e){return e(n,t)}))}}),t}$()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):V,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}$()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?V:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?V:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((o={})[i]=c.a.object,o),{Provider:a,Consumer:l}},Q=n(4),q=n.n(Q);n(6);function K(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(9);var Y=function(e){var t=H();return t.displayName=e,t}("Router"),X=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(Y.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;var G=function(e){function t(){return e.apply(this,arguments)||this}l(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.a.Component);var J={},Z=1e4,ee=0;function te(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(J[e])return J[e];var t=q.a.compile(e);return ee<Z&&(J[e]=t,ee++),t}(e)(t,{pretty:!0})}function ne(e){var t=e.computedMatch,n=e.to,r=e.push,i=void 0!==r&&r;return o.a.createElement(Y.Consumer,null,(function(e){e||g(!1);var r=e.history,a=e.staticContext,l=i?r.push:r.replace,u=T(t?"string"==typeof n?te(n,t.params):s({},n,{pathname:te(n.pathname,t.params)}):n);return a?(l(u),null):o.a.createElement(G,{onMount:function(){l(u)},onUpdate:function(e,t){var n,r,o=T(t.to);n=o,r=s({},u,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&y(n.state,r.state)||l(u)},to:n})}))}var re={},oe=1e4,ie=0;function ae(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=re[n]||(re[n]={});if(r[e])return r[e];var o=[],i={regexp:q()(e,o,t),keys:o};return ie<oe&&(r[e]=i,ie++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var le=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(Y.Consumer,null,(function(t){t||g(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ae(n.pathname,e.props):t.match}),i=e.props,a=i.children,l=i.component,u=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o.a.createElement(Y.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o.a.createElement(l,r):u?u(r):null:"function"==typeof a?a(r):null)}))},t}(o.a.Component);function ue(e){return"/"===e.charAt(0)?e:"/"+e}function ce(e,t){if(!e)return t;var n=ue(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function se(e){return"string"==typeof e?e:S(e)}function fe(e){return function(){g(!1)}}function pe(){}o.a.Component;var de=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(Y.Consumer,null,(function(t){t||g(!1);var n,r,i=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?ae(i.pathname,s({},e.props,{path:a})):t.match}})),r?o.a.cloneElement(n,{location:i,computedMatch:r}):null}))},t}(o.a.Component);o.a.useContext;var he=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=M(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement(X,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var me=function(e,t){return"function"==typeof e?e(t):e},ye=function(e,t){return"string"==typeof e?T(e,null,null,t):e},ve=function(e){return e},be=o.a.forwardRef;void 0===be&&(be=ve);var ge=be((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=K(e,["innerRef","navigate","onClick"]),l=a.target,u=s({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=ve!==be&&t||n,o.a.createElement("a",u)}));var we=be((function(e,t){var n=e.component,r=void 0===n?ge:n,i=e.replace,a=e.to,l=e.innerRef,u=K(e,["component","replace","to","innerRef"]);return o.a.createElement(Y.Consumer,null,(function(e){e||g(!1);var n=e.history,c=ye(me(a,e.location),e.location),f=c?n.createHref(c):"",p=s({},u,{href:f,navigate:function(){var t=me(a,e.location);(i?n.replace:n.push)(t)}});return ve!==be?p.ref=t||l:p.innerRef=l,o.a.createElement(r,p)}))})),ke=function(e){return e},Ee=o.a.forwardRef;void 0===Ee&&(Ee=ke);Ee((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,p=e.location,d=e.strict,h=e.style,m=e.to,y=e.innerRef,v=K(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(Y.Consumer,null,(function(e){e||g(!1);var n=p||e.location,i=ye(me(m,n),n),b=i.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?ae(n.pathname,{path:w,exact:c,strict:d}):null,E=!!(f?f(k,n):k),x=E?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,S=E?s({},h,{},l):h,T=s({"aria-current":E&&r||null,className:x,style:S,to:i},v);return ke!==Ee?T.ref=t||y:T.innerRef=y,o.a.createElement(we,T)}))}));var xe={opening:{screen:{position:"fixed",display:"flex",width:"100vw",height:"100vh",justifyContent:"center",alignItems:"center"},name:{background:'url("./resource/colorful.jpg") repeat',backgroundPosition:"center",backgroundSize:"cover",textAlign:"center",backgroundClip:"text",WebkitBackgroundClip:"text",WebkitTextFillColor:"transparent",font:'900 0.5vw "Open Sans", sans-serif',whiteSpace:"nowrap",cursor:"default"},button:{position:"absolute",bottom:"15%",left:"50%",transform:"translateX(-50%)",fontSize:"50px",display:"none",cursor:"pointer",fontWeight:"900",color:"white",textShadow:"2px 2px 6px #000",transitionDuration:"1s"},ask:{position:"absolute",bottom:"10%",left:"5%",transform:"translateX(-10%)"},control:{position:"absolute",bottom:"5%",left:"5%",content:'url("./resource/forward_button.png")',height:"30px",width:"50px",cursor:"pointer"}},mainHeader:{nav:{width:"100vw",height:"10vh",lineHeight:"10vh",position:"fixed",display:"grid",gridTemplateColumns:"repeat(4, 1fr)",textAlign:"center",zIndex:"5"},items:{width:"100%",height:"100%",fontSize:"2vw",cursor:"pointer",fontWeight:"bold",textTransform:"uppercase"}},sideArrow:{arrowBox:{position:"relative",width:"100%",height:"100%"},backArea:{position:"absolute",width:"10%",height:"100%",left:"0"},back:{content:'url("./resource/back.png")',position:"absolute",width:"50px",height:"50px",top:"50%",left:"50%",transform:"translate(-50%, -50%)",opacity:"0",transitionDuration:"1s",cursor:"pointer"},nextArea:{position:"absolute",width:"10%",height:"100%",right:"0"},next:{content:'url("./resource/next.png")',position:"absolute",width:"50px",height:"50px",top:"50%",right:"50%",transform:"translate(50%, -50%)",opacity:"0",transitionDuration:"1s",cursor:"pointer"}},bottomArrow:{arrowBox:{position:"absolute",bottom:"0",width:"100%",height:"10%",display:"grid",gridTemplateColumns:"repeat(3, 1fr)",justifyItems:"center",alignItems:"center"},arrow:{content:'url("./resource/arrow_down.png")',height:"30px",width:"30px"}},introduction:{header:{position:"relative",height:"100vh",width:"100vw",backgroundColor:"#ECB765"},silhouette:{position:"absolute",top:"50%",right:"15%",transform:"translateY(-50%)",content:'url("./resource/silhouette.png")',width:"35vw",height:"28vw"},title:{position:"absolute",top:"50%",left:"15%",transform:"translateY(-50%)",fontSize:"3vw",fontWeight:"bold",textTransform:"uppercase"},section:{height:"2000px",width:"100vw",backgroundColor:"white"}},history:{header:{position:"relative",height:"100vh",width:"100vw",backgroundColor:"#DB7A65"},silhouette:{position:"absolute",top:"50%",right:"15%",transform:"translateY(-50%)",content:'url("./resource/silhouette.png")',width:"35vw",height:"28vw"},title:{position:"absolute",top:"50%",left:"15%",transform:"translateY(-50%)",fontSize:"3vw",fontWeight:"bold",textTransform:"uppercase"},section:{height:"2000px",width:"100vw",backgroundColor:"white"}},work:{header:{position:"relative",height:"100vh",width:"100vw",backgroundColor:"#265E62"},silhouette:{position:"absolute",top:"50%",right:"15%",transform:"translateY(-50%)",content:'url("./resource/silhouette.png")',width:"35vw",height:"28vw"},title:{position:"absolute",top:"50%",left:"15%",transform:"translateY(-50%)",fontSize:"3vw",fontWeight:"bold",textTransform:"uppercase"},section:{height:"2000px",width:"100vw",backgroundColor:"white"}},contact:{header:{position:"relative",height:"100vh",width:"100vw",backgroundColor:"#685357"},silhouette:{position:"absolute",top:"50%",right:"15%",transform:"translateY(-50%)",content:'url("./resource/silhouette.png")',width:"35vw",height:"28vw"},title:{position:"absolute",top:"50%",left:"15%",transform:"translateY(-50%)",fontSize:"3vw",fontWeight:"bold",textTransform:"uppercase"},section:{height:"2000px",width:"100vw",backgroundColor:"white"}}};function Se(e){return(Se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ce(e,t){return!t||"object"!==Se(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _e(e){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Pe(e,t){return(Pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Oe=xe.opening,Ne=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Ce(this,_e(t).call(this,e))).state={jump:"",hold:!1},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pe(e,t)}(t,e),n=t,(r=[{key:"mouseDrag",value:function(e){if(this.state.hold){var t=document.querySelector(".control"),n=document.querySelector(".name"),r=e.clientX/window.outerWidth*100,o=12*r*.01,i=document.querySelector(".go"),a=document.querySelector(".ask");r>=5&&r<=90&&(t.style.left=r+"%",n.style.fontSize=o+"vw",a.style.left=r+"%"),i.style.display=r>=90?"block":"none"}}},{key:"mouseDown",value:function(e){document.querySelector(".ask").style.display="none",this.setState({hold:!0})}},{key:"mouseUp",value:function(e){document.querySelector(".ask").style.display="block",this.setState({hold:!1})}},{key:"next",value:function(e){this.setState({jump:"/introduction"})}},{key:"render",value:function(){var e=this;return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",{style:Oe.screen,onMouseMove:function(t){return e.mouseDrag(t)},onMouseUp:function(t){return e.mouseUp(t)},onMouseLeave:function(t){return e.mouseUp(t)}},o.a.createElement("h1",{class:"name",style:Oe.name},"PARK SANG UN"),o.a.createElement("p",{class:"go",style:Oe.button,onMouseOver:function(e){return e.target.style.color="black"},onMouseOut:function(e){return e.target.style.color="white"},onClick:function(t){return e.next(t)}},"Let's find out"),o.a.createElement("p",{class:"ask",style:Oe.ask},"Drag me!"),o.a.createElement("img",{class:"control",style:Oe.control,onMouseDown:function(t){return e.mouseDown(t)}}))}}])&&Te(n.prototype,r),i&&Te(n,i),t}(r.Component);function je(e){return(je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Me(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Re(e,t){return!t||"object"!==je(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ue(e,t){return(Ue=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ie=xe.mainHeader,Ae=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Re(this,ze(t).call(this,e))).state={color:e.color},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ue(e,t)}(t,e),n=t,(r=[{key:"componentDidMount",value:function(){document.querySelector(".nav").style.backgroundColor=this.state.color,document.querySelector("."+this.props.path).style.borderBottom="2px dashed black"}},{key:"render",value:function(){var e=this;return o.a.createElement("nav",null,o.a.createElement("ul",{class:"nav",style:Ie.nav},o.a.createElement("li",{class:"introduction",style:Ie.items,onClick:function(){return e.props.jump("/introduction")},onMouseOver:function(e){return e.target.style.color="white"},onMouseOut:function(e){return e.target.style.color="black"}},"Introduction"),o.a.createElement("li",{class:"history",style:Ie.items,onClick:function(){return e.props.jump("/history")},onMouseOver:function(e){return e.target.style.color="white"},onMouseOut:function(e){return e.target.style.color="black"}},"History"),o.a.createElement("li",{class:"work",style:Ie.items,onClick:function(){return e.props.jump("/work")},onMouseOver:function(e){return e.target.style.color="white"},onMouseOut:function(e){return e.target.style.color="black"}},"Work"),o.a.createElement("li",{class:"contact",style:Ie.items,onClick:function(){return e.props.jump("/contact")},onMouseOver:function(e){return e.target.style.color="white"},onMouseOut:function(e){return e.target.style.color="black"}},"Contact")))}}])&&Me(n.prototype,r),i&&Me(n,i),t}(r.Component);function De(e){return(De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Fe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Le(e,t){return!t||"object"!==De(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function $e(e){return($e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function We(e,t){return(We=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Be=xe.sideArrow,Ve=["/introduction","/history","/work","/contact"],He=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Le(this,$e(t).call(this,e))).state={jump:"",path:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&We(e,t)}(t,e),n=t,(r=[{key:"next",value:function(e){var t=Ve.indexOf("/"+this.props.path);3!==t&&this.props.jump(Ve[t+1])}},{key:"back",value:function(e){var t=Ve.indexOf("/"+this.props.path);0!==t&&this.props.jump(Ve[t-1])}},{key:"backOver",value:function(){document.querySelector(".back").style.opacity="1"}},{key:"backOut",value:function(){document.querySelector(".back").style.opacity="0"}},{key:"nextOver",value:function(){document.querySelector(".next").style.opacity="1"}},{key:"nextOut",value:function(){document.querySelector(".next").style.opacity="0"}},{key:"render",value:function(){var e=this;return o.a.createElement("div",{style:Be.arrowBox},o.a.createElement("div",{style:Be.backArea,onMouseOver:function(t){return e.backOver()},onMouseOut:function(t){return e.backOut()}},o.a.createElement("img",{class:"back",style:Be.back,onClick:function(t){return e.back(t)}})),o.a.createElement("div",{style:Be.nextArea,onMouseOver:function(t){return e.nextOver()},onMouseOut:function(t){return e.nextOut()}},o.a.createElement("img",{class:"next",style:Be.next,onClick:function(t){return e.next(t)}})))}}])&&Fe(n.prototype,r),i&&Fe(n,i),t}(r.Component);function Qe(e){return(Qe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function qe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ke(e,t){return!t||"object"!==Qe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ye(e){return(Ye=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Xe(e,t){return(Xe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ge=xe.bottomArrow,Je=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Ke(this,Ye(t).call(this,e))).state={jump:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Xe(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{style:Ge.arrowBox},o.a.createElement("img",{style:Ge.arrow}),o.a.createElement("img",{style:Ge.arrow}),o.a.createElement("img",{style:Ge.arrow}))}}])&&qe(n.prototype,r),i&&qe(n,i),t}(r.Component);function Ze(e){return(Ze="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function et(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function tt(e){return(tt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function nt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function rt(e,t){return(rt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ot=xe.introduction,it=function(e){function t(e){var n,r,o,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=tt(t).call(this,e),n=!o||"object"!==Ze(o)&&"function"!=typeof o?nt(r):o,i=nt(n),l=function(e){"/introduction"!==e&&n.setState({jump:e})},(a="headerCallback")in i?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i[a]=l,n.state={jump:""},n.headerCallback=n.headerCallback.bind(nt(n)),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&rt(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",null,o.a.createElement("header",{style:ot.header},o.a.createElement(Ae,{color:"#ECB765",jump:this.headerCallback,path:"introduction"}),o.a.createElement(He,{jump:this.headerCallback,path:"introduction"}),o.a.createElement(Je,null),o.a.createElement("h1",{style:ot.title},"Who",o.a.createElement("br",null),"is this guy?"),o.a.createElement("img",{style:ot.silhouette})),o.a.createElement("section",{style:ot.section},"hello"))}}])&&et(n.prototype,r),i&&et(n,i),t}(r.Component);function at(e){return(at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ut(e){return(ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ct(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function st(e,t){return(st=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ft=xe.history,pt=function(e){function t(e){var n,r,o,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=ut(t).call(this,e),n=!o||"object"!==at(o)&&"function"!=typeof o?ct(r):o,i=ct(n),l=function(e){"/history"!==e&&n.setState({jump:e})},(a="headerCallback")in i?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i[a]=l,n.state={jump:""},n.headerCallback=n.headerCallback.bind(ct(n)),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&st(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",null,o.a.createElement("header",{style:ft.header},o.a.createElement(Ae,{color:"#DB7A65",jump:this.headerCallback,path:"history"}),o.a.createElement(He,{jump:this.headerCallback,path:"history"}),o.a.createElement(Je,null),o.a.createElement("h1",{style:ft.title},"why",o.a.createElement("br",null),"did you become a developer?"),o.a.createElement("img",{style:ft.silhouette})),o.a.createElement("section",{style:ft.section},"hello"))}}])&&lt(n.prototype,r),i&&lt(n,i),t}(r.Component);function dt(e){return(dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ht(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function mt(e){return(mt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function yt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function vt(e,t){return(vt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var bt=xe.work,gt=function(e){function t(e){var n,r,o,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=mt(t).call(this,e),n=!o||"object"!==dt(o)&&"function"!=typeof o?yt(r):o,i=yt(n),l=function(e){"/work"!==e&&n.setState({jump:e})},(a="headerCallback")in i?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i[a]=l,n.state={jump:""},n.headerCallback=n.headerCallback.bind(yt(n)),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&vt(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",null,o.a.createElement("header",{style:bt.header},o.a.createElement(Ae,{color:"#265E62",jump:this.headerCallback,path:"work"}),o.a.createElement(He,{jump:this.headerCallback,path:"work"}),o.a.createElement(Je,null),o.a.createElement("h1",{style:bt.title},"what ",o.a.createElement("br",null),"did you do?"),o.a.createElement("img",{style:bt.silhouette})),o.a.createElement("section",{style:bt.section},"hello"))}}])&&ht(n.prototype,r),i&&ht(n,i),t}(r.Component);function wt(e){return(wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function kt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Et(e){return(Et=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function xt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function St(e,t){return(St=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Tt=xe.contact,Ct=function(e){function t(e){var n,r,o,i,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=Et(t).call(this,e),n=!o||"object"!==wt(o)&&"function"!=typeof o?xt(r):o,i=xt(n),l=function(e){"/contact"!==e&&n.setState({jump:e})},(a="headerCallback")in i?Object.defineProperty(i,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):i[a]=l,n.state={jump:""},n.headerCallback=n.headerCallback.bind(xt(n)),n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&St(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return this.state.jump?o.a.createElement(ne,{to:this.state.jump}):o.a.createElement("div",null,o.a.createElement("header",{style:Tt.header},o.a.createElement(Ae,{color:"#685357",jump:this.headerCallback,path:"contact"}),o.a.createElement(He,{jump:this.headerCallback,path:"contact"}),o.a.createElement(Je,null),o.a.createElement("h1",{style:Tt.title},"How",o.a.createElement("br",null),"can i reach you?"),o.a.createElement("img",{style:Tt.silhouette})),o.a.createElement("section",{style:Tt.section},"hello"))}}])&&kt(n.prototype,r),i&&kt(n,i),t}(r.Component);a.a.render(o.a.createElement((function(){return o.a.createElement(he,null,o.a.createElement("div",null,o.a.createElement(de,null,o.a.createElement(le,{path:"/opening",component:Ne}),o.a.createElement(le,{path:"/introduction",component:it}),o.a.createElement(le,{path:"/history",component:pt}),o.a.createElement(le,{path:"/work",component:gt}),o.a.createElement(le,{path:"/contact",component:Ct}),o.a.createElement(le,{component:Ne}))))}),null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ndWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9lc20vdmFsdWUtZXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JvdXRlckNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9MaWZlY3ljbGUuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL2hvb2tzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi4vbW9kdWxlcy91dGlscy9sb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uLi9tb2R1bGVzL0xpbmsuanMiLCJ3ZWJwYWNrOi8vLy4uL21vZHVsZXMvTmF2TGluay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9vcGVuaW5nLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnQvbWFpbkhlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L3NpZGVBcnJvdy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L2JvdHRvbUFycm93LmpzIiwid2VicGFjazovLy8uL3NyYy9pbnRyb2R1Y3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3dvcmsuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRhY3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwicmVxdWlyZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNvbnN0cnVjdG9yIiwiX19wcm90b19fIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsIm9wdGlvbnMiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsImpvaW4iLCJyZXMiLCJ0b2tlbnMiLCJpbmRleCIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJvZmZzZXQiLCJzbGljZSIsImxlbmd0aCIsIm5leHQiLCJwcmVmaXgiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicHVzaCIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInJlcGxhY2UiLCJjaGFyQ29kZUF0IiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsIm1hdGNoZXMiLCJBcnJheSIsIm9iaiIsIm9wdHMiLCJkYXRhIiwiZW5jb2RlIiwicHJldHR5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9rZW4iLCJzZWdtZW50IiwiVHlwZUVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsInJlIiwia2V5cyIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsInNvdXJjZSIsIm1hdGNoIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJhcmd1bWVudHMiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInByb2Nlc3MiLCJjb25zb2xlIiwiZXJyb3IiLCJnbG9iYWwiLCJSZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiZSIsImgiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiYWEiLCJBIiwiaXRlcmF0b3IiLCJCIiwiYSIsImIiLCJDIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkQiLCJFIiwidGhpcyIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiRiIsIkciLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJFcnJvciIsImZvcmNlVXBkYXRlIiwiSCIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSSIsImN1cnJlbnQiLCJKIiwiSyIsIkwiLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJnIiwiZiIsImNoaWxkcmVuIiwiayIsIiQkdHlwZW9mIiwiX293bmVyIiwiTiIsIk8iLCJQIiwiUSIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlIiLCJVIiwiUyIsIlQiLCJpc0FycmF5IiwiZG9uZSIsImVzY2FwZSIsImNhIiwiZGEiLCJWIiwiYmEiLCJXIiwiWCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJjcmVhdGVSZWYiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlRGVidWdWYWx1ZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRWxlbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiUmVhY3RDdXJyZW50T3duZXIiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsIlkiLCJkZWZhdWx0IiwiWiIsImluZGV4T2YiLCJlYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwiZmEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsImhhIiwicmVnaXN0cmF0aW9uTmFtZSIsImlhIiwiamEiLCJkZXBlbmRlbmNpZXMiLCJrYSIsImFwcGx5Iiwib25FcnJvciIsImxhIiwibWEiLCJuYSIsIm9hIiwicGEiLCJxYSIsInNhIiwidWEiLCJ2YSIsIndhIiwiY3VycmVudFRhcmdldCIsInJhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJCYSIsIkNhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkRhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJUYSIsIlVhIiwiV2EiLCJYYSIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiWWEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwiTWFwIiwibGIiLCJtYiIsIm5iIiwib2IiLCJyYiIsImFjY2VwdHNCb29sZWFucyIsInRvTG93ZXJDYXNlIiwicWIiLCJpc05hTiIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInNiIiwidGIiLCJ1YiIsInZiIiwicGIiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIndiIiwibm9kZU5hbWUiLCJ5YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwieGIiLCJ6YiIsImNoZWNrZWQiLCJBYiIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQmIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQ2IiLCJFYiIsIkZiIiwiR2IiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkliIiwiSGIiLCJKYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiS2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkxiIiwiTWIiLCJOYiIsInRleHRDb250ZW50IiwieGxpbmtIcmVmIiwiT2IiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwiUGIiLCJRYiIsIlJiIiwiU2IiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiVGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlViIiwiVmIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJXYiIsIlhiIiwiWWIiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJaYiIsIiRiIiwiYWMiLCJiYyIsImRjIiwiZWMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJmYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZ2MiLCJpYyIsImNoaWxkIiwic2libGluZyIsImhjIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIm9jIiwicGMiLCJxYyIsInJjIiwic2MiLCJ0YyIsInVjIiwidmMiLCJ6YyIsImJsb2NrZWRPbiIsInRvcExldmVsVHlwZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsIkFjIiwicG9pbnRlcklkIiwiQmMiLCJDYyIsIkVjIiwiRmMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJjb250YWluZXJJbmZvIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJzaGlmdCIsIktjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiTGMiLCJNYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJOYyIsIk9jIiwiZGlzcGF0Y2hDb25maWciLCJQYyIsIl90YXJnZXRJbnN0IiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJVYyIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsIldjIiwiZXZlbnRQb29sIiwiWGMiLCJkZXN0cnVjdG9yIiwiVmMiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiWWMiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiWmMiLCJjbGlwYm9hcmREYXRhIiwiJGMiLCJ2aWV3IiwiZGV0YWlsIiwiYWQiLCJyZWxhdGVkVGFyZ2V0IiwiYmQiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJjZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJlZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJmZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJnZCIsImdldE1vZGlmaWVyU3RhdGUiLCJoZCIsImlkIiwibG9jYXRpb24iLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwibG9jYWxlIiwid2hpY2giLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b24iLCJidXR0b25zIiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJvZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwieGQiLCJ5ZCIsInpkIiwiQWQiLCJCZCIsIkNkIiwiRGQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiRWQiLCJnZXRFdmVudFByaW9yaXR5IiwiRmQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsIkdkIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJRZCIsIkRjIiwiUmQiLCJTZCIsIldlYWtNYXAiLCJ4YyIsIlNldCIsInljIiwiaGFzIiwiYWRkIiwiVGQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIlVkIiwiVmQiLCJ0cmltIiwiV2QiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIlhkIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiWWQiLCJaZCIsImlzIiwiJGQiLCJhZSIsImJlIiwiYm9keSIsImNlIiwiZGUiLCJub2RlIiwibmV4dFNpYmxpbmciLCJmZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJnZSIsImNvbnRlbnRFZGl0YWJsZSIsImhlIiwiaWUiLCJqZSIsImtlIiwibGUiLCJtZSIsIm5lIiwiYXV0b0ZvY3VzIiwib2UiLCJfX2h0bWwiLCJwZSIsInNldFRpbWVvdXQiLCJxZSIsImNsZWFyVGltZW91dCIsInNlIiwicHJldmlvdXNTaWJsaW5nIiwidGUiLCJNYXRoIiwicmFuZG9tIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJIZSIsImRvY3VtZW50TW9kZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIk1lIiwiTmUiLCJPZSIsIlBlIiwiU2UiLCJRZSIsIlJlIiwiVGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiVWUiLCJWZSIsImNoYW5nZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZXRhY2hFdmVudCIsImRmIiwiZWYiLCJhdHRhY2hFdmVudCIsImZmIiwiZ2YiLCJoZiIsImxmIiwiamYiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwia2YiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIm1mIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwic2VsZWN0IiwidGYiLCJ1ZiIsInZmIiwid2YiLCJ4ZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJ5ZiIsIm9uU2VsZWN0IiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiT2YiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlBmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiUWYiLCJ1bnN0YWJsZV9ub3ciLCJSZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiU2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlRmIiwiVWYiLCJWZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiV2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJ2ZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwid2ciLCJ4ZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ5ZyIsInpnIiwiYmFzZVN0YXRlIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0RWZmZWN0IiwibGFzdEVmZmVjdCIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJBZyIsIkJnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJuZXh0RWZmZWN0IiwiQ2ciLCJEZyIsInVwZGF0ZVF1ZXVlIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlNnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIlBnIiwiUWciLCJSZyIsIlRnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiVWciLCJzdGF0ZSIsIlZnIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiV2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlhnIiwiWWciLCJfc3RyaW5nUmVmIiwiWmciLCIkZyIsImFoIiwiYmgiLCJlbGVtZW50VHlwZSIsImNoIiwiaW1wbGVtZW50YXRpb24iLCJkaCIsImVoIiwidGEiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwia2giLCJsaCIsIm1oIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsIm5oIiwib2giLCJwaCIsInFoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwicmgiLCJyZXNwb25kZXIiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIk9oIiwiUGgiLCJRaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJkaXNwYXRjaCIsImFjdGlvbiIsImxhc3QiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJSaCIsIlNoIiwiVGgiLCJVaCIsImRlc3Ryb3kiLCJkZXBzIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsInJlYWRDb250ZXh0IiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1bnN0YWJsZV9uZXh0IiwiY2kiLCJkaSIsImVpIiwiZmkiLCJnaSIsImhpIiwicGVuZGluZ1Byb3BzIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidWkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJ2aSIsIndpIiwicGVuZGluZ0NvbnRleHQiLCJIaSIsIklpIiwiSmkiLCJLaSIsInhpIiwicmV0cnlUaW1lIiwieWkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwiemkiLCJBaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJCaSIsIkNpIiwiTGkiLCJNaSIsIk5pIiwic3RhY2siLCJvbkNsaWNrIiwib25jbGljayIsIk9pIiwiV2Vha1NldCIsIlBpIiwiU2kiLCJSaSIsIlRpIiwiVWkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlZpIiwiV2kiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlFpIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJhaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJiaiIsImRpc3BsYXkiLCJjaiIsImRqIiwidGhlbiIsImVqIiwiZmoiLCJlbGVtZW50IiwiZ2oiLCJoaiIsImlqIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJqaiIsImNvbXBvbmVudFN0YWNrIiwiZ2siLCJraiIsImNlaWwiLCJsaiIsIm1qIiwibmoiLCJvaiIsInBqIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwid2oiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsInRpbWVvdXRNcyIsIktqIiwiTGoiLCJNaiIsIk5qIiwiT2oiLCJsYXN0RXhwaXJlZFRpbWUiLCJQaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiUWoiLCJ0aW1lb3V0IiwiUmoiLCJTaiIsIlRqIiwiVWoiLCJWaiIsIldqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiWGoiLCJ0aW1lb3V0SGFuZGxlIiwiWWoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiWmoiLCJiayIsImNrIiwicGluZ0NhY2hlIiwiZGsiLCJlayIsImZrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiaWsiLCJmaXJzdFN1c3BlbmRlZFRpbWUiLCJyYW5nZUNvdW50IiwiRGIiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiamsiLCJlZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiRGgiLCJjYyIsImRkIiwiaGsiLCJFaCIsIkZoIiwieGsiLCJEaSIsIkVpIiwiRmkiLCJ3ZCIsIkdpIiwia2siLCJsayIsIm1rIiwiaGlkZGVuIiwiVmEiLCJuayIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInBrIiwicGVuZGluZ0NoaWxkcmVuIiwicWsiLCJyayIsInNrIiwidGsiLCJ1ayIsIndrIiwid2MiLCJfaW50ZXJuYWxSb290IiwieWsiLCJBayIsImhhc0F0dHJpYnV0ZSIsInprIiwiQmsiLCJ2ayIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwidW5tb3VudCIsImFrIiwiQ2siLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm9rIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJEayIsIkVrIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiRnVuY3Rpb24iLCJhcnIiLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsImlzVmFsaWRFbGVtZW50VHlwZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsIl9pbmhlcml0c0xvb3NlIiwiX2V4dGVuZHMiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJsaXN0IiwicmVzb2x2ZVBhdGhuYW1lIiwidW5kZWZpbmVkIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsInVwIiwicGFydCIsInVuc2hpZnQiLCJ2YWx1ZUVxdWFsIiwiZXZlcnkiLCJpdGVtIiwiYVZhbHVlIiwiYlZhbHVlIiwiaXNQcm9kdWN0aW9uIiwiaW52YXJpYW50IiwiY29uZGl0aW9uIiwibWVzc2FnZSIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwiZmlsdGVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsImFyZ3MiLCJfa2V5IiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiZXZlbnQiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoQ2hhbmdlRXZlbnQkMSIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwicXVlcnlTZWxlY3RvciIsImdldEF0dHJpYnV0ZSIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtYXgiLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJSZWFjdCIsImNhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4IiwiX0NvbnN1bWVyJGNvbnRleHRUeXBlIiwiY29udGV4dFByb3AiLCJndWQiLCJfQ29tcG9uZW50IiwiX3RoaXMiLCJoYW5kbGVycyIsImVtaXR0ZXIiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiX3Byb3RvIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsIm9uVXBkYXRlIiwiX3Byb3RvMiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiY3JlYXRlTmFtZWRDb250ZXh0IiwiUm91dGVyIiwiY29tcHV0ZVJvb3RNYXRjaCIsInBhcmFtcyIsImlzRXhhY3QiLCJfcGVuZGluZ0xvY2F0aW9uIiwiUm91dGVyQ29udGV4dCIsInN0YXRpY0NvbnRleHQiLCJMaWZlY3ljbGUiLCJvbk1vdW50IiwicHJldlByb3BzIiwib25Vbm1vdW50IiwiY2FjaGUiLCJjYWNoZUxpbWl0IiwiY2FjaGVDb3VudCIsImdlbmVyYXRlUGF0aCIsImdlbmVyYXRvciIsImNvbXBpbGVQYXRoIiwiUmVkaXJlY3QiLCJjb21wdXRlZE1hdGNoIiwibWV0aG9kIiwibWF0Y2hQYXRoIiwibWF0Y2hlZCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwidmFsdWVzIiwiUm91dGUiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJTd2l0Y2giLCJCcm93c2VyUm91dGVyIiwiY3JlYXRlSGlzdG9yeSIsInJlc29sdmVUb0xvY2F0aW9uIiwibm9ybWFsaXplVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJyZXN0IiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJmb3J3YXJkZWRSZWYiLCJMaW5rIiwiYXJpYUN1cnJlbnQiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdHlsZVByb3AiLCJlc2NhcGVkUGF0aCIsImNsYXNzbmFtZXMiLCJqb2luQ2xhc3NuYW1lcyIsInN0eWxlcyIsIm9wZW5pbmciLCJzY3JlZW4iLCJwb3NpdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJiYWNrZ3JvdW5kU2l6ZSIsInRleHRBbGlnbiIsImJhY2tncm91bmRDbGlwIiwiV2Via2l0QmFja2dyb3VuZENsaXAiLCJXZWJraXRUZXh0RmlsbENvbG9yIiwiZm9udCIsIndoaXRlU3BhY2UiLCJjdXJzb3IiLCJib3R0b20iLCJ0cmFuc2Zvcm0iLCJmb250U2l6ZSIsInRleHRTaGFkb3ciLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJhc2siLCJjb250cm9sIiwiY29udGVudCIsIm1haW5IZWFkZXIiLCJuYXYiLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwiaXRlbXMiLCJ0ZXh0VHJhbnNmb3JtIiwic2lkZUFycm93IiwiYXJyb3dCb3giLCJiYWNrQXJlYSIsImJhY2siLCJuZXh0QXJlYSIsInJpZ2h0IiwiYm90dG9tQXJyb3ciLCJqdXN0aWZ5SXRlbXMiLCJhcnJvdyIsImludHJvZHVjdGlvbiIsImhlYWRlciIsImJhY2tncm91bmRDb2xvciIsInNpbGhvdWV0dGUiLCJ0aXRsZSIsInNlY3Rpb24iLCJ3b3JrIiwiY29udGFjdCIsIk9wZW5pbmciLCJqdW1wIiwiaG9sZCIsImltZ193Iiwib3V0ZXJXaWR0aCIsIm5hbWVfcyIsIm9uTW91c2VNb3ZlIiwibW91c2VEcmFnIiwib25Nb3VzZVVwIiwibW91c2VVcCIsIm9uTW91c2VMZWF2ZSIsImNsYXNzIiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlT3V0Iiwib25Nb3VzZURvd24iLCJtb3VzZURvd24iLCJNYWluSGVhZGVyIiwiYm9yZGVyQm90dG9tIiwiU2lkZUFycm93IiwiYmFja092ZXIiLCJiYWNrT3V0IiwibmV4dE92ZXIiLCJuZXh0T3V0IiwiQm90dG9tQXJyb3ciLCJJbnRyb2R1Y3Rpb24iLCJqdW1wRGF0YSIsImhlYWRlckNhbGxiYWNrIiwiSGlzdG9yeSIsIldvcmsiLCJDb250YWN0IiwiUmVhY3RET00iLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFD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S0FBS0MsVUFBVSxPQUFPQyxHQUFHLENBQUMsQ0FBQyxPQUFPLE9BQU8sR0FBRyxDQUFDLFNBQVMsU0FBUyxHQUFHLENBQUMsUUFBUSxRQUFRLEdBQUcsQ0FBQyxRQUFRLFFBQVEsR0FBRyxDQUFDLGNBQWMsY0FBYyxHQUFHLENBQUMsT0FBTyxPQUFPLEdBQUcsQ0FBQyxNQUFNLE1BQU0sR0FBRyxDQUFDLFdBQVcsV0FBVyxHQUFHLENBQUMsV0FBVyxjQUFjLEdBQUcsQ0FBQyxVQUFVLFVBQzllLEdBQUcsQ0FBQyxZQUFZLFlBQVksR0FBRyxDQUFDLE9BQU8sT0FBTyxHQUFHLENBQUMsUUFBUSxRQUFRLEdBQUcsQ0FBQyxRQUFRLFFBQVEsR0FBRyxDQUFDLFVBQVUsVUFBVSxHQUFHLENBQUMsVUFBVSxVQUFVLEdBQUcsQ0FBQyxXQUFXLFdBQVcsR0FBRyxDQUFDLFFBQVEsUUFBUSxHQUFHLENBQUMsWUFBWSxZQUFZLEdBQUcsQ0FBQyxVQUFVLFVBQVUsR0FBRyxDQUFDLFFBQVEsUUFBUSxHQUFHLENBQUMsUUFBUSxRQUFRLEdBQUcsQ0FBQyxPQUFPLE9BQU8sR0FBRyxDQUFDLGdCQUFnQixnQkFBZ0IsR0FBRyxDQUFDLGNBQWMsY0FBYyxHQUFHLENBQUMsWUFBWSxZQUFZLEdBQUcsQ0FBQyxhQUFhLGFBQWEsR0FBRyxDQUFDLFFBQVEsUUFBUSxHQUFHLENBQUMsU0FBUyxTQUFTLEdBQUcsQ0FBQyxTQUFTLFNBQVMsR0FBRyxDQUFDLGNBQWMsY0FDbGYsR0FBRyxDQUFDLFdBQVcsV0FBVyxHQUFHLENBQUMsYUFBYSxhQUFhLEdBQUcsQ0FBQyxlQUFlLGVBQWUsR0FBRyxDQUFDLE9BQU8sT0FBTyxHQUFHLENBQUMsWUFBWSxZQUFZLEdBQUcsQ0FBQyxXQUFXLFdBQVcsR0FBRyxDQUFDLFlBQVksWUFBWSxHQUFHLENBQUMsV0FBVyxXQUFXLEdBQUcsQ0FBQyxZQUFZLFlBQVksR0FBRyxDQUFDLFdBQVcsV0FBVyxHQUFHLENBQUMsWUFBWSxZQUFZLEdBQUcsQ0FBQyxjQUFjLGNBQWMsR0FBRyxDQUFDLGFB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QUFDLEdBQUQsQ0FBT2hILEtBQUssV0FBVzZHLFVBQVd5Z0QsS0FDbEMsa0JBQUMsR0FBRCxDQUFPdG5ELEtBQUssZ0JBQWdCNkcsVUFBV2lpRCxLQUN2QyxrQkFBQyxHQUFELENBQU85b0QsS0FBSyxXQUFXNkcsVUFBV29pRCxLQUNsQyxrQkFBQyxHQUFELENBQU9qcEQsS0FBSyxRQUFRNkcsVUFBV3FpRCxLQUMvQixrQkFBQyxHQUFELENBQU9scEQsS0FBSyxXQUFXNkcsVUFBV3NpRCxLQUNsQyxrQkFBQyxHQUFELENBQU90aUQsVUFBV3lnRCxVQU94QixNQUNBN3pDLFNBQVM0MUMsZUFBZSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCJmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzTG9vc2U7IiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vIEBmbG93XG4ndXNlIHN0cmljdCc7XG5cbnZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZ2xvYmFsW2tleV0gPSAoZ2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGU6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgICByZW5kZXI6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZVxufTtcblxudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgICAnJCR0eXBlb2YnOiB0cnVlLFxuICAgIGNvbXBhcmU6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbUmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gICAgaWYgKFJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgICB9XG4gICAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcbiAgICAgICAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICAgICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMS4wXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgaD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMztuJiZTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtcbnZhciB6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsYWE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtuJiZTeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik7biYmU3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTtuJiZTeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik7dmFyIEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn12YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRD17fTtcbmZ1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9Y3x8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihCKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9Y3x8Q312YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztoKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9e2N1cnJlbnQ6bnVsbH0sSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsbD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihsPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaz1BcnJheShmKSxtPTA7bTxmO20rKylrW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49a31pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpsLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBiYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixjLGUpe2lmKFAubGVuZ3RoKXt2YXIgZD1QLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGw9MDtsPGEubGVuZ3RoO2wrKyl7ZD1hW2xdO3ZhciBmPWIrVChkLGwpO2crPVMoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGw9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitUKGQsbCsrKSxnKz1TKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBVKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVChhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gY2EoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gZGEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VihhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihOKGEpJiYoYT1iYShhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFYoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxlLGQpO1UoYSxkYSxiKTtSKGIpfWZ1bmN0aW9uIFcoKXt2YXIgYT1JLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQigzMjEpKTtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1YoYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsYyk7VShhLGNhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFOKGEpKXRocm93IEVycm9yKEIoMTQzKSk7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjphYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNhbGxiYWNrKGEsYil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLFxuYixjKXtyZXR1cm4gVygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7fSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUxheW91dEVmZmVjdChhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VNZW1vKGEsYil9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBXKCkudXNlUmVkdWNlcihhLGIsYyl9LHVzZVJlZjpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVJlZihhKX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VTdGF0ZShhKX0sRnJhZ21lbnQ6cixQcm9maWxlcjp1LFN0cmljdE1vZGU6dCxTdXNwZW5zZTp5LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEIoMjY3LGEpKTt2YXIgZT1oKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixsPWEuX293bmVyO1xuaWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGw9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGsgaW4gYilLLmNhbGwoYixrKSYmIUwuaGFzT3duUHJvcGVydHkoaykmJihlW2tdPXZvaWQgMD09PWJba10mJnZvaWQgMCE9PWY/ZltrXTpiW2tdKX12YXIgaz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWspZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxrKXtmPUFycmF5KGspO2Zvcih2YXIgbT0wO208azttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6bH19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjExLjBcIixcbl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnREaXNwYXRjaGVyOkksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpofX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMS4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7dmFyIGJhPW51bGwsY2E9e307XG5mdW5jdGlvbiBkYSgpe2lmKGJhKWZvcih2YXIgYSBpbiBjYSl7dmFyIGI9Y2FbYV0sYz1iYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIWVhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO2VhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYoZmEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7ZmFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmaGEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KGhhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiBoYShhLGIsYyl7aWYoaWFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO2lhW2FdPWI7amFbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgZWE9W10sZmE9e30saWE9e30samE9e307ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGxhPSExLG1hPW51bGwsbmE9ITEsb2E9bnVsbCxwYT17b25FcnJvcjpmdW5jdGlvbihhKXtsYT0hMDttYT1hfX07ZnVuY3Rpb24gcWEoYSxiLGMsZCxlLGYsZyxoLGspe2xhPSExO21hPW51bGw7a2EuYXBwbHkocGEsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIHJhKGEsYixjLGQsZSxmLGcsaCxrKXtxYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYobGEpe2lmKGxhKXt2YXIgbD1tYTtsYT0hMTttYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtuYXx8KG5hPSEwLG9hPWwpfX12YXIgc2E9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO3JhKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB5YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgemE9bnVsbDtmdW5jdGlvbiBBYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspd2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmd2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIEJhKGEpe251bGwhPT1hJiYoemE9eGEoemEsYSkpO2E9emE7emE9bnVsbDtpZihhKXt5YShhLEFhKTtpZih6YSl0aHJvdyBFcnJvcih1KDk1KSk7aWYobmEpdGhyb3cgYT1vYSxuYT0hMSxvYT1udWxsLGE7fX1cbnZhciBDYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtpZihiYSl0aHJvdyBFcnJvcih1KDEwMSkpO2JhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO2RhKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighY2EuaGFzT3duUHJvcGVydHkoYyl8fGNhW2NdIT09ZCl7aWYoY2FbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO2NhW2NdPWQ7Yj0hMH19YiYmZGEoKX19O1xuZnVuY3Rpb24gRGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1zYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxiLHR5cGVvZiBjKSk7XG5yZXR1cm4gY312YXIgRWE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7RWEuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoRWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7RWEuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KEVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG52YXIgRmE9L14oLiopW1xcXFxcXC9dLyx3PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsR2E9dz9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxIYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsSWE9dz9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsSmE9dz9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsS2E9dz9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsTGE9dz9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksTWE9dz9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxOYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsT2E9dz9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsUGE9dz9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsUWE9dz9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLFJhPXc/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsU2E9dz9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjt3JiZTeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik7dyYmU3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTt3JiZTeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik7dmFyIFRhPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBVYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9VGEmJmFbVGFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBWYShhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIFdhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgSWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgSGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEthOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIEphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgUGE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgUWE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgTWE6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBMYTpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIE9hOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBSYTpyZXR1cm4gV2EoYS50eXBlKTtjYXNlIFNhOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gV2EoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGEoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPVdhKGEudHlwZSk7Yz1udWxsO2QmJihjPVdhKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoRmEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBZYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksWmE9bnVsbCwkYT1udWxsLGFiPW51bGw7ZnVuY3Rpb24gYmIoYSl7aWYoYT11YShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIFphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9c2EoYS5zdGF0ZU5vZGUpO1phKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gY2IoYSl7JGE/YWI/YWIucHVzaChhKTphYj1bYV06JGE9YX1mdW5jdGlvbiBkYigpe2lmKCRhKXt2YXIgYT0kYSxiPWFiO2FiPSRhPW51bGw7YmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJiKGJbYV0pfX1mdW5jdGlvbiBlYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIGZiKGEsYixjLGQpe3JldHVybiBhKGIsYyxkKX1mdW5jdGlvbiBnYigpe31cbnZhciBoYj1lYixpYj0hMSxqYj0hMTtmdW5jdGlvbiBrYigpe2lmKG51bGwhPT0kYXx8bnVsbCE9PWFiKWdiKCksZGIoKX1uZXcgTWFwO3ZhciBsYj0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbWI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxuYj17fSxvYj17fTtcbmZ1bmN0aW9uIHBiKGEpe2lmKG1iLmNhbGwob2IsYSkpcmV0dXJuITA7aWYobWIuY2FsbChuYixhKSlyZXR1cm4hMTtpZihsYi50ZXN0KGEpKXJldHVybiBvYlthXT0hMDtuYlthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBxYihhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHJiKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHFiKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIHNiPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gdGIoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsXG50Yik7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHNiLHRiKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHNiLHRiKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7ZnVuY3Rpb24gdWIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gdmIoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwocmIoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3BiKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB3YihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24geGIoYSl7dmFyIGI9d2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHliKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj14YihhKSl9ZnVuY3Rpb24gemIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXdiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQmIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9dWIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBDYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnZiKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBFYihhLGIpe0NiKGEsYik7dmFyIGM9dWIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRmIoYSxiLnR5cGUsdWIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBHYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBGYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gSGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gSWIoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1IYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBKYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEtiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gTGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5kZWZhdWx0VmFsdWU7Yj1iLmNoaWxkcmVuO2lmKG51bGwhPWIpe2lmKG51bGwhPWMpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYikpe2lmKCEoMT49Yi5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtiPWJbMF19Yz1ifW51bGw9PWMmJihjPVwiXCIpfWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnViKGMpfX1cbmZ1bmN0aW9uIE1iKGEsYil7dmFyIGM9dWIoYi52YWx1ZSksZD11YihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIE5iKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE9iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIFBiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gUWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP1BiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFJiLFNiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU9iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1JiPVJifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1JiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVJiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFRiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gVWIoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVmI9e2FuaW1hdGlvbmVuZDpVYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpVYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlViKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sV2I9e30sWGI9e307XG5ZYSYmKFhiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFZiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFZiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFZiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFZiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWWIoYSl7aWYoV2JbYV0pcmV0dXJuIFdiW2FdO2lmKCFWYlthXSlyZXR1cm4gYTt2YXIgYj1WYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBYYilyZXR1cm4gV2JbYV09YltjXTtyZXR1cm4gYX12YXIgWmI9WWIoXCJhbmltYXRpb25lbmRcIiksJGI9WWIoXCJhbmltYXRpb25pdGVyYXRpb25cIiksYWM9WWIoXCJhbmltYXRpb25zdGFydFwiKSxiYz1ZYihcInRyYW5zaXRpb25lbmRcIiksZGM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gZWMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBnYyhhKXtpZihlYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBoYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1lYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBnYyhlKSxhO2lmKGY9PT1kKXJldHVybiBnYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGljKGEpe2E9aGMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgamMsa2MsbGMsbWM9ITEsbmM9W10sb2M9bnVsbCxwYz1udWxsLHFjPW51bGwscmM9bmV3IE1hcCxzYz1uZXcgTWFwLHRjPVtdLHVjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksdmM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9eGMoYSk7dWMuZm9yRWFjaChmdW5jdGlvbihjKXt5YyhjLGEsYil9KTt2Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe3ljKGMsYSxiKX0pfWZ1bmN0aW9uIHpjKGEsYixjLGQpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZH19ZnVuY3Rpb24gQWMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpvYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6cGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6cWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOnJjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOnNjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gQmMoYSxiLGMsZCxlKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWUpcmV0dXJuIGE9emMoYixjLGQsZSksbnVsbCE9PWImJihiPUNjKGIpLG51bGwhPT1iJiZrYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9ZnVuY3Rpb24gRGMoYSxiLGMsZCl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBvYz1CYyhvYyxhLGIsYyxkKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIHBjPUJjKHBjLGEsYixjLGQpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gcWM9QmMocWMsYSxiLGMsZCksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGU9ZC5wb2ludGVySWQ7cmMuc2V0KGUsQmMocmMuZ2V0KGUpfHxudWxsLGEsYixjLGQpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZT1kLnBvaW50ZXJJZCxzYy5zZXQoZSxCYyhzYy5nZXQoZSl8fG51bGwsYSxiLGMsZCkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gRWMoYSl7dmFyIGI9RmMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1lYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1mYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtxLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7bGMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIEdjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1IYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPUNjKGIpO251bGwhPT1jJiZrYyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gSWMoYSxiLGMpe0djKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBKYygpe2ZvcihtYz0hMTswPG5jLmxlbmd0aDspe3ZhciBhPW5jWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmpjKGEpO2JyZWFrfXZhciBiPUhjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOm5jLnNoaWZ0KCl9bnVsbCE9PW9jJiZHYyhvYykmJihvYz1udWxsKTtudWxsIT09cGMmJkdjKHBjKSYmKHBjPW51bGwpO251bGwhPT1xYyYmR2MocWMpJiYocWM9bnVsbCk7cmMuZm9yRWFjaChJYyk7c2MuZm9yRWFjaChJYyl9ZnVuY3Rpb24gS2MoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLG1jfHwobWM9ITAscS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHEudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksSmMpKSl9XG5mdW5jdGlvbiBMYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBLYyhiLGEpfWlmKDA8bmMubGVuZ3RoKXtLYyhuY1swXSxhKTtmb3IodmFyIGM9MTtjPG5jLmxlbmd0aDtjKyspe3ZhciBkPW5jW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09b2MmJktjKG9jLGEpO251bGwhPT1wYyYmS2MocGMsYSk7bnVsbCE9PXFjJiZLYyhxYyxhKTtyYy5mb3JFYWNoKGIpO3NjLmZvckVhY2goYik7Zm9yKGM9MDtjPHRjLmxlbmd0aDtjKyspZD10Y1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8dGMubGVuZ3RoJiYoYz10Y1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylFYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnRjLnNoaWZ0KCl9XG5mdW5jdGlvbiBNYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gTmMoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBPYyhhLGIsYyl7aWYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gUGMoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1OYyhiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspT2MoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylPYyhjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBRYyhhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFJjKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUWMoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gU2MoYSl7eWEoYSxQYyl9ZnVuY3Rpb24gVGMoKXtyZXR1cm4hMH1mdW5jdGlvbiBVYygpe3JldHVybiExfWZ1bmN0aW9uIEUoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP1RjOlVjO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9VWM7cmV0dXJuIHRoaXN9XG5uKEUucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9VGMpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9VGMpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9VGN9LGlzUGVyc2lzdGVudDpVYyxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1VYzt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0UuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtWYyhjKTtyZXR1cm4gY307VmMoRSk7ZnVuY3Rpb24gV2MoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBYYyhhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBWYyhhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1XYzthLnJlbGVhc2U9WGN9dmFyIFljPUUuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxaYz1FLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLCRjPUUuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxhZD0kYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gYmQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgY2Q9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LGVkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxmZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gZ2QoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1mZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIGhkKCl7cmV0dXJuIGdkfVxudmFyIGlkPSRjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1jZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1iZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/ZWRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9iZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2JkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksamQ9MCxrZD0wLGxkPSExLG1kPSExLG5kPSRjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpoZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1qZDtqZD1hLnNjcmVlblg7cmV0dXJuIGxkP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLVxuYjowOihsZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTt2YXIgYj1rZDtrZD1hLnNjcmVlblk7cmV0dXJuIG1kP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDoobWQ9ITAsMCl9fSksb2Q9bmQuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLHBkPW5kLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSxxZD0kYy5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpoZH0pLHJkPUUuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxcbmVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9bmQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHRkPVtbXCJibHVyXCIsXCJibHVyXCIsMF0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIiwwXSxbXCJjbGlja1wiLFwiY2xpY2tcIiwwXSxbXCJjbG9zZVwiLFwiY2xvc2VcIiwwXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIiwwXSxbXCJjb3B5XCIsXCJjb3B5XCIsMF0sW1wiY3V0XCIsXCJjdXRcIiwwXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIiwwXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIiwwXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCIsXG4wXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiLDBdLFtcImRyb3BcIixcImRyb3BcIiwwXSxbXCJmb2N1c1wiLFwiZm9jdXNcIiwwXSxbXCJpbnB1dFwiLFwiaW5wdXRcIiwwXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCIsMF0sW1wia2V5ZG93blwiLFwia2V5RG93blwiLDBdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiLDBdLFtcImtleXVwXCIsXCJrZXlVcFwiLDBdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCIsMF0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiLDBdLFtcInBhc3RlXCIsXCJwYXN0ZVwiLDBdLFtcInBhdXNlXCIsXCJwYXVzZVwiLDBdLFtcInBsYXlcIixcInBsYXlcIiwwXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCIsMF0sW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCIsMF0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIiwwXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCIsMF0sW1wicmVzZXRcIixcInJlc2V0XCIsMF0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIiwwXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiLDBdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiLFxuMF0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCIsMF0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiLDBdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCIsMF0sW1wiZHJhZ1wiLFwiZHJhZ1wiLDFdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCIsMV0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCIsMV0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIiwxXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIiwxXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiLDFdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiLDFdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCIsMV0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCIsMV0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiLDFdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiLDFdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCIsMV0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIiwxXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiLDFdLFtcIndoZWVsXCIsXCJ3aGVlbFwiLDFdLFtcImFib3J0XCIsXCJhYm9ydFwiLFxuMl0sW1piLFwiYW5pbWF0aW9uRW5kXCIsMl0sWyRiLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsMl0sW2FjLFwiYW5pbWF0aW9uU3RhcnRcIiwyXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsMl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsMl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsMl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiLDJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsMl0sW1wiZW5kZWRcIixcImVuZGVkXCIsMl0sW1wiZXJyb3JcIixcImVycm9yXCIsMl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsMl0sW1wibG9hZFwiLFwibG9hZFwiLDJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIiwyXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIiwyXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLDJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsMl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiLDJdLFtcInByb2dyZXNzXCIsXG5cInByb2dyZXNzXCIsMl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiLDJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIiwyXSxbXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsMl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLDJdLFtiYyxcInRyYW5zaXRpb25FbmRcIiwyXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCIsMl1dLHVkPXt9LHZkPXt9LHhkPTA7Zm9yKDt4ZDx0ZC5sZW5ndGg7eGQrKyl7dmFyIHlkPXRkW3hkXSx6ZD15ZFswXSxBZD15ZFsxXSxCZD15ZFsyXSxDZD1cIm9uXCIrKEFkWzBdLnRvVXBwZXJDYXNlKCkrQWQuc2xpY2UoMSkpLERkPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpDZCxjYXB0dXJlZDpDZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlt6ZF0sZXZlbnRQcmlvcml0eTpCZH07dWRbQWRdPURkO3ZkW3pkXT1EZH1cbnZhciBFZD17ZXZlbnRUeXBlczp1ZCxnZXRFdmVudFByaW9yaXR5OmZ1bmN0aW9uKGEpe2E9dmRbYV07cmV0dXJuIHZvaWQgMCE9PWE/YS5ldmVudFByaW9yaXR5OjJ9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1iZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9aWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9bmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBaYjpjYXNlICRiOmNhc2UgYWM6YT1ZYzticmVhaztjYXNlIGJjOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9JGM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPVpjO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9b2Q7YnJlYWs7ZGVmYXVsdDphPUV9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtTYyhiKTtyZXR1cm4gYn19LEZkPXEudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksXG5HZD1xLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxIZD1FZC5nZXRFdmVudFByaW9yaXR5LElkPTEwLEpkPVtdO1xuZnVuY3Rpb24gS2QoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPUZjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU1jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3MsaD1udWxsLGs9MDtrPGVhLmxlbmd0aDtrKyspe3ZhciBsPWVhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9eGEoaCxsKSl9QmEoaCl9fVxudmFyIExkPSEwO2Z1bmN0aW9uIEYoYSxiKXtNZChiLGEsITEpfWZ1bmN0aW9uIE1kKGEsYixjKXtzd2l0Y2goSGQoYikpe2Nhc2UgMDp2YXIgZD1OZC5iaW5kKG51bGwsYiwxKTticmVhaztjYXNlIDE6ZD1PZC5iaW5kKG51bGwsYiwxKTticmVhaztkZWZhdWx0OmQ9UGQuYmluZChudWxsLGIsMSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBOZChhLGIsYyl7aWJ8fGdiKCk7dmFyIGQ9UGQsZT1pYjtpYj0hMDt0cnl7ZmIoZCxhLGIsYyl9ZmluYWxseXsoaWI9ZSl8fGtiKCl9fWZ1bmN0aW9uIE9kKGEsYixjKXtHZChGZCxQZC5iaW5kKG51bGwsYSxiLGMpKX1cbmZ1bmN0aW9uIFFkKGEsYixjLGQpe2lmKEpkLmxlbmd0aCl7dmFyIGU9SmQucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9YjtlLm5hdGl2ZUV2ZW50PWM7ZS50YXJnZXRJbnN0PWQ7YT1lfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpiLG5hdGl2ZUV2ZW50OmMsdGFyZ2V0SW5zdDpkLGFuY2VzdG9yczpbXX07dHJ5e2lmKGI9S2QsYz1hLGpiKWIoYyx2b2lkIDApO2Vsc2V7amI9ITA7dHJ5e2hiKGIsYyx2b2lkIDApfWZpbmFsbHl7amI9ITEsa2IoKX19fWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsSmQubGVuZ3RoPElkJiZKZC5wdXNoKGEpfX1cbmZ1bmN0aW9uIFBkKGEsYixjKXtpZihMZClpZigwPG5jLmxlbmd0aCYmLTE8dWMuaW5kZXhPZihhKSlhPXpjKG51bGwsYSxiLGMpLG5jLnB1c2goYSk7ZWxzZXt2YXIgZD1IYyhhLGIsYyk7bnVsbD09PWQ/QWMoYSxjKTotMTx1Yy5pbmRleE9mKGEpPyhhPXpjKGQsYSxiLGMpLG5jLnB1c2goYSkpOkRjKGQsYSxiLGMpfHwoQWMoYSxjKSxRZChhLGIsYyxudWxsKSl9fWZ1bmN0aW9uIEhjKGEsYixjKXt2YXIgZD1NYyhjKTtkPUZjKGQpO2lmKG51bGwhPT1kKXt2YXIgZT1lYyhkKTtpZihudWxsPT09ZSlkPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2Q9ZmMoZSk7aWYobnVsbCE9PWQpcmV0dXJuIGQ7ZD1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZD1udWxsfWVsc2UgZSE9PWQmJihkPW51bGwpfX1RZChhLGIsYyxkKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2lmKCFZYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgU2Q9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24geGMoYSl7dmFyIGI9U2QuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBTZXQsU2Quc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24geWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjpNZChiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6TWQoYixcImZvY3VzXCIsITApO01kKGIsXCJibHVyXCIsITApO2MuYWRkKFwiYmx1clwiKTtjLmFkZChcImZvY3VzXCIpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpSZChhKSYmTWQoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09ZGMuaW5kZXhPZihhKSYmRihhLGIpfWMuYWRkKGEpfX1cbnZhciBUZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxVZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoVGQpLmZvckVhY2goZnVuY3Rpb24oYSl7VWQuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtUZFtiXT1UZFthXX0pfSk7ZnVuY3Rpb24gVmQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fFRkLmhhc093blByb3BlcnR5KGEpJiZUZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBXZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1WZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBYZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gWWQoYSxiKXtpZihiKXtpZihYZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIFpkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiAkZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz14YyhhKTtiPWphW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXljKGJbZF0sYSxjKX1mdW5jdGlvbiBhZSgpe31cbmZ1bmN0aW9uIGJlKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBjZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gZGUoYSxiKXt2YXIgYz1jZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1jZShjKX19XG5mdW5jdGlvbiBlZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP2VlKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiBmZSgpe2Zvcih2YXIgYT13aW5kb3csYj1iZSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1iZShhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGdlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIGhlPVwiJFwiLGllPVwiLyRcIixqZT1cIiQ/XCIsa2U9XCIkIVwiLGxlPW51bGwsbWU9bnVsbDtmdW5jdGlvbiBuZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBvZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIHBlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHFlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiByZShhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIHNlKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PWhlfHxjPT09a2V8fGM9PT1qZSl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PWllJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGU9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksdWU9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIit0ZSx2ZT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK3RlLHdlPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrdGU7XG5mdW5jdGlvbiBGYyhhKXt2YXIgYj1hW3VlXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t3ZV18fGNbdWVdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2UoYSk7bnVsbCE9PWE7KXtpZihjPWFbdWVdKXJldHVybiBjO2E9c2UoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENjKGEpe2E9YVt1ZV18fGFbd2VdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB4ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiB5ZShhKXtyZXR1cm4gYVt2ZV18fG51bGx9dmFyIHplPW51bGwsQWU9bnVsbCxCZT1udWxsO1xuZnVuY3Rpb24gQ2UoKXtpZihCZSlyZXR1cm4gQmU7dmFyIGEsYj1BZSxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiB6ZT96ZS52YWx1ZTp6ZS50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBCZT1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfXZhciBEZT1FLmV4dGVuZCh7ZGF0YTpudWxsfSksRWU9RS5leHRlbmQoe2RhdGE6bnVsbH0pLEZlPVs5LDEzLDI3LDMyXSxHZT1ZYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csSGU9bnVsbDtZYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoSGU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBJZT1ZYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIUhlLEplPVlhJiYoIUdlfHxIZSYmODxIZSYmMTE+PUhlKSxLZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxMZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxNZT0hMTtcbmZ1bmN0aW9uIE5lKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09RmUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBPZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBQZT0hMTtmdW5jdGlvbiBRZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gT2UoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO01lPSEwO3JldHVybiBLZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1LZSYmTWU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gUmUoYSxiKXtpZihQZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhR2UmJk5lKGEsYik/KGE9Q2UoKSxCZT1BZT16ZT1udWxsLFBlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBKZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgU2U9e2V2ZW50VHlwZXM6TGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihHZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1MZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1MZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9TGUuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIFBlP05lKGEsYykmJihmPUxlLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9TGUuY29tcG9zaXRpb25TdGFydCk7Zj8oSmUmJlwia29cIiE9PWMubG9jYWxlJiYoUGV8fGYhPT1MZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1MZS5jb21wb3NpdGlvbkVuZCYmUGUmJihlPUNlKCkpOih6ZT1kLEFlPVwidmFsdWVcImluIHplP3plLnZhbHVlOnplLnRleHRDb250ZW50LFBlPSEwKSksZj1EZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPU9lKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxTYyhmKSxlPWYpOmU9bnVsbDsoYT1JZT9RZShhLGMpOlJlKGEsYykpPyhiPUVlLmdldFBvb2xlZChMZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsU2MoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sVGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gVWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFUZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgVmU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gV2UoYSxiLGMpe2E9RS5nZXRQb29sZWQoVmUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtjYihjKTtTYyhhKTtyZXR1cm4gYX12YXIgWGU9bnVsbCxZZT1udWxsO2Z1bmN0aW9uIFplKGEpe0JhKGEpfWZ1bmN0aW9uICRlKGEpe3ZhciBiPXhlKGEpO2lmKHpiKGIpKXJldHVybiBhfWZ1bmN0aW9uIGFmKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIGJmPSExO1lhJiYoYmY9UmQoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBjZigpe1hlJiYoWGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsZGYpLFllPVhlPW51bGwpfWZ1bmN0aW9uIGRmKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiYkZShZZSkpaWYoYT1XZShZZSxhLE1jKGEpKSxpYilCYShhKTtlbHNle2liPSEwO3RyeXtlYihaZSxhKX1maW5hbGx5e2liPSExLGtiKCl9fX1mdW5jdGlvbiBlZihhLGIsYyl7XCJmb2N1c1wiPT09YT8oY2YoKSxYZT1iLFllPWMsWGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsZGYpKTpcImJsdXJcIj09PWEmJmNmKCl9ZnVuY3Rpb24gZmYoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gJGUoWWUpfWZ1bmN0aW9uIGdmKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gJGUoYil9ZnVuY3Rpb24gaGYoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gJGUoYil9XG52YXIgamY9e2V2ZW50VHlwZXM6VmUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpiZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/eGUoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1hZjtlbHNlIGlmKFVlKGUpKWlmKGJmKWc9aGY7ZWxzZXtnPWZmO3ZhciBoPWVmfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1nZik7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gV2UoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZGYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxrZj17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLFxuZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sbGYsbWY9e2V2ZW50VHlwZXM6a2YsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7XG5lPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0ZjKGIpOm51bGwsbnVsbCE9PWImJihmPWVjKGIpLGIhPT1mfHw1IT09Yi50YWcmJjYhPT1iLnRhZykpYj1udWxsfWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKXt2YXIgaD1uZDt2YXIgaz1rZi5tb3VzZUxlYXZlO3ZhciBsPWtmLm1vdXNlRW50ZXI7dmFyIG09XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWg9b2Qsaz1rZi5wb2ludGVyTGVhdmUsbD1rZi5wb2ludGVyRW50ZXIsbT1cInBvaW50ZXJcIjthPW51bGw9PWc/ZTp4ZShnKTtlPW51bGw9PWI/ZTp4ZShiKTtrPWguZ2V0UG9vbGVkKGssZyxjLGQpO2sudHlwZT1tK1wibGVhdmVcIjtrLnRhcmdldD1cbmE7ay5yZWxhdGVkVGFyZ2V0PWU7ZD1oLmdldFBvb2xlZChsLGIsYyxkKTtkLnR5cGU9bStcImVudGVyXCI7ZC50YXJnZXQ9ZTtkLnJlbGF0ZWRUYXJnZXQ9YTtoPWc7bT1iO2lmKGgmJm0pYTp7bD1oO2E9bTtnPTA7Zm9yKGI9bDtiO2I9TmMoYikpZysrO2I9MDtmb3IoZT1hO2U7ZT1OYyhlKSliKys7Zm9yKDswPGctYjspbD1OYyhsKSxnLS07Zm9yKDswPGItZzspYT1OYyhhKSxiLS07Zm9yKDtnLS07KXtpZihsPT09YXx8bD09PWEuYWx0ZXJuYXRlKWJyZWFrIGE7bD1OYyhsKTthPU5jKGEpfWw9bnVsbH1lbHNlIGw9bnVsbDthPWw7Zm9yKGw9W107aCYmaCE9PWE7KXtnPWguYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09YSlicmVhaztsLnB1c2goaCk7aD1OYyhoKX1mb3IoaD1bXTttJiZtIT09YTspe2c9bS5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1hKWJyZWFrO2gucHVzaChtKTttPU5jKG0pfWZvcihtPTA7bTxsLmxlbmd0aDttKyspUWMobFttXSxcImJ1YmJsZWRcIixrKTtmb3IobT1cbmgubGVuZ3RoOzA8bS0tOylRYyhoW21dLFwiY2FwdHVyZWRcIixkKTtpZihjPT09bGYpcmV0dXJuIGxmPW51bGwsW2tdO2xmPWM7cmV0dXJuW2ssZF19fTtmdW5jdGlvbiBuZihhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOm5mLHBmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gcWYoYSxiKXtpZihvZihhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIXBmLmNhbGwoYixjW2RdKXx8IW9mKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgcmY9WWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxzZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sdGY9bnVsbCx1Zj1udWxsLHZmPW51bGwsd2Y9ITE7XG5mdW5jdGlvbiB4ZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKHdmfHxudWxsPT10Znx8dGYhPT1iZShjKSlyZXR1cm4gbnVsbDtjPXRmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJmdlKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIHZmJiZxZih2ZixjKT9udWxsOih2Zj1jLGE9RS5nZXRQb29sZWQoc2Yuc2VsZWN0LHVmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9dGYsU2MoYSksYSl9XG52YXIgeWY9e2V2ZW50VHlwZXM6c2YsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9eGMoZSk7Zj1qYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/eGUoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihVZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSl0Zj1lLHVmPWIsdmY9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOnZmPXVmPXRmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOndmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gd2Y9ITEseGYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYocmYpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiB4ZihjLGQpfXJldHVybiBudWxsfX07Q2EuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt2YXIgemY9Q2M7c2E9eWU7dWE9emY7dmE9eGU7Q2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpFZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46bWYsQ2hhbmdlRXZlbnRQbHVnaW46amYsU2VsZWN0RXZlbnRQbHVnaW46eWYsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpTZX0pO25ldyBTZXQ7dmFyIEFmPVtdLEJmPS0xO2Z1bmN0aW9uIEcoYSl7MD5CZnx8KGEuY3VycmVudD1BZltCZl0sQWZbQmZdPW51bGwsQmYtLSl9XG5mdW5jdGlvbiBJKGEsYil7QmYrKztBZltCZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxKPXtjdXJyZW50OkNmfSxLPXtjdXJyZW50OiExfSxEZj1DZjtmdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIEZmKGEpe0coSyxhKTtHKEosYSl9ZnVuY3Rpb24gR2YoYSl7RyhLLGEpO0coSixhKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoSi5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYixhKTtJKEssYyxhKX1mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LFdhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBKZihhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPUouY3VycmVudDtJKEosYixhKTtJKEssSy5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYj1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixHKEssYSksRyhKLGEpLEkoSixiLGEpKTpHKEssYSk7SShLLGMsYSl9XG52YXIgTGY9cS51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksTWY9cS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLE5mPXEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssT2Y9cS51bnN0YWJsZV9zaG91bGRZaWVsZCxQZj1xLnVuc3RhYmxlX3JlcXVlc3RQYWludCxRZj1xLnVuc3RhYmxlX25vdyxSZj1xLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFNmPXEudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVGY9cS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxVZj1xLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFZmPXEudW5zdGFibGVfTG93UHJpb3JpdHksV2Y9cS51bnN0YWJsZV9JZGxlUHJpb3JpdHksWGY9e30sWWY9dm9pZCAwIT09UGY/UGY6ZnVuY3Rpb24oKXt9LFpmPW51bGwsJGY9bnVsbCxhZz0hMSxiZz1RZigpLGNnPTFFND5iZz9RZjpmdW5jdGlvbigpe3JldHVybiBRZigpLWJnfTtcbmZ1bmN0aW9uIGRnKCl7c3dpdGNoKFJmKCkpe2Nhc2UgU2Y6cmV0dXJuIDk5O2Nhc2UgVGY6cmV0dXJuIDk4O2Nhc2UgVWY6cmV0dXJuIDk3O2Nhc2UgVmY6cmV0dXJuIDk2O2Nhc2UgV2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGVnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBTZjtjYXNlIDk4OnJldHVybiBUZjtjYXNlIDk3OnJldHVybiBVZjtjYXNlIDk2OnJldHVybiBWZjtjYXNlIDk1OnJldHVybiBXZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBmZyhhLGIpe2E9ZWcoYSk7cmV0dXJuIExmKGEsYil9ZnVuY3Rpb24gZ2coYSxiLGMpe2E9ZWcoYSk7cmV0dXJuIE1mKGEsYixjKX1mdW5jdGlvbiBoZyhhKXtudWxsPT09WmY/KFpmPVthXSwkZj1NZihTZixpZykpOlpmLnB1c2goYSk7cmV0dXJuIFhmfWZ1bmN0aW9uIGpnKCl7aWYobnVsbCE9PSRmKXt2YXIgYT0kZjskZj1udWxsO05mKGEpfWlnKCl9XG5mdW5jdGlvbiBpZygpe2lmKCFhZyYmbnVsbCE9PVpmKXthZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1aZjtmZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7WmY9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09WmYmJihaZj1aZi5zbGljZShhKzEpKSxNZihTZixqZyksYzt9ZmluYWxseXthZz0hMX19fXZhciBrZz0zO2Z1bmN0aW9uIGxnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIG1nKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBuZz17Y3VycmVudDpudWxsfSxvZz1udWxsLHBnPW51bGwscWc9bnVsbDtmdW5jdGlvbiByZygpe3FnPXBnPW9nPW51bGx9XG5mdW5jdGlvbiBzZyhhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtJKG5nLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiB0ZyhhKXt2YXIgYj1uZy5jdXJyZW50O0cobmcsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiB1ZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1cbmZ1bmN0aW9uIHZnKGEsYil7b2c9YTtxZz1wZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJih3Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9ZnVuY3Rpb24geGcoYSxiKXtpZihxZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PXBnKXtpZihudWxsPT09b2cpdGhyb3cgRXJyb3IodSgzMDgpKTtwZz1iO29nLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgcGc9cGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHlnPSExO1xuZnVuY3Rpb24gemcoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIEFnKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIEJnKGEsYil7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBDZyhhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBEZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9emcoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9emcoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9emcoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPUFnKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPUFnKGQpKTtudWxsPT09ZXx8ZD09PWU/Q2coZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhDZyhkLGIpLENnKGUsYikpOihDZyhkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIEVnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9emcoYS5tZW1vaXplZFN0YXRlKTpGZyhhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIEZnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPUFnKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEdnKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgMTpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgMzphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIDI6eWc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiBIZyhhLGIsYyxkLGUpe3lnPSExO2I9RmcoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxrPWIuZmlyc3RVcGRhdGUsbD1mO251bGwhPT1rOyl7dmFyIG09ay5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1rLGY9bCksaDxtJiYoaD1tKSk6KElnKG0say5zdXNwZW5zZUNvbmZpZyksbD1HZyhhLGIsayxsLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1rOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdEVmZmVjdD1rKSkpO2s9ay5uZXh0fW09bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgQz1rLmV4cGlyYXRpb25UaW1lO0M8ZT8obnVsbD09PW0mJihtPWssbnVsbD09PWcmJihmPWwpKSxoPEMmJihoPUMpKToobD1HZyhhLGIsayxsLGMsZCksbnVsbCE9PVxuay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWs6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RDYXB0dXJlZEVmZmVjdD1rKSkpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9bCk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07SmcoaCk7YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1sfVxuZnVuY3Rpb24gS2coYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO0xnKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtMZyhiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gTGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgxOTEsYykpO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG52YXIgTWc9RWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsTmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gT2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgU2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2VjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1QZygpLGU9TWcuc3VzcGVuc2U7ZD1RZyhkLGEsZSk7ZT1CZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtEZyhhLGUpO1JnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVBnKCksZT1NZy5zdXNwZW5zZTtkPVFnKGQsYSxlKTtlPUJnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7RGcoYSxlKTtSZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1QZygpLGQ9TWcuc3VzcGVuc2U7XG5jPVFnKGMsYSxkKTtkPUJnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7RGcoYSxkKTtSZyhhLGMpfX07ZnVuY3Rpb24gVGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hcWYoYyxkKXx8IXFmKGUsZik6ITB9XG5mdW5jdGlvbiBVZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj14ZyhmKTooZT1MKGIpP0RmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1TZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBWZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmU2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBXZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPU5nO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9eGcoZik6KGY9TChiKT9EZjpKLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKEhnKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihPZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZTZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihIZyhhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIFhnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBZZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09TmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFpnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiAkZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPWFoKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YmgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPVlnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1jaChjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1ZZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWRoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPWVoKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBDKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1iaChcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBHYTpyZXR1cm4gYz1jaChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1ZZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgSGE6cmV0dXJuIGI9ZGgoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFhnKGIpfHxcblVhKGIpKXJldHVybiBiPWVoKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1pnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geShhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBHYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PUlhP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBIYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihYZyhjKXx8VWEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1pnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSChhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1JYT9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBIYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihYZyhkKXx8VWEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1pnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscj1nLHg9Zz0wLEE9bnVsbDtudWxsIT09ciYmeDxoLmxlbmd0aDt4Kyspe3IuaW5kZXg+eD8oQT1yLHI9bnVsbCk6QT1yLnNpYmxpbmc7dmFyIHA9eShlLHIsaFt4XSxrKTtpZihudWxsPT09cCl7bnVsbD09PXImJihyPUEpO2JyZWFrfWEmJlxuciYmbnVsbD09PXAuYWx0ZXJuYXRlJiZiKGUscik7Zz1mKHAsZyx4KTtudWxsPT09bT9sPXA6bS5zaWJsaW5nPXA7bT1wO3I9QX1pZih4PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxyKSxsO2lmKG51bGw9PT1yKXtmb3IoO3g8aC5sZW5ndGg7eCsrKXI9QyhlLGhbeF0sayksbnVsbCE9PXImJihnPWYocixnLHgpLG51bGw9PT1tP2w9cjptLnNpYmxpbmc9cixtPXIpO3JldHVybiBsfWZvcihyPWQoZSxyKTt4PGgubGVuZ3RoO3grKylBPUgocixlLHgsaFt4XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmci5kZWxldGUobnVsbD09PUEua2V5P3g6QS5rZXkpLGc9ZihBLGcseCksbnVsbD09PW0/bD1BOm0uc2libGluZz1BLG09QSk7YSYmci5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB0YShlLGcsaCxrKXt2YXIgbD1VYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih1KDE1MCkpO2g9bC5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1sPW51bGwscj1nLHg9Zz0wLEE9bnVsbCxwPWgubmV4dCgpO251bGwhPT1yJiYhcC5kb25lO3grKyxwPWgubmV4dCgpKXtyLmluZGV4Png/KEE9cixyPW51bGwpOkE9ci5zaWJsaW5nO3ZhciB6PXkoZSxyLHAudmFsdWUsayk7aWYobnVsbD09PXope251bGw9PT1yJiYocj1BKTticmVha31hJiZyJiZudWxsPT09ei5hbHRlcm5hdGUmJmIoZSxyKTtnPWYoeixnLHgpO251bGw9PT1tP2w9ejptLnNpYmxpbmc9ejttPXo7cj1BfWlmKHAuZG9uZSlyZXR1cm4gYyhlLHIpLGw7aWYobnVsbD09PXIpe2Zvcig7IXAuZG9uZTt4KysscD1oLm5leHQoKSlwPUMoZSxwLnZhbHVlLGspLG51bGwhPT1wJiYoZz1mKHAsZyx4KSxudWxsPT09bT9sPXA6bS5zaWJsaW5nPXAsbT1wKTtyZXR1cm4gbH1mb3Iocj1kKGUscik7IXAuZG9uZTt4KysscD1oLm5leHQoKSlwPUgocixlLHgscC52YWx1ZSxrKSxudWxsIT09cCYmKGEmJm51bGwhPT1cbnAuYWx0ZXJuYXRlJiZyLmRlbGV0ZShudWxsPT09cC5rZXk/eDpwLmtleSksZz1mKHAsZyx4KSxudWxsPT09bT9sPXA6bS5zaWJsaW5nPXAsbT1wKTthJiZyLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1JYSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBHYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PUlhOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PUlhP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1ZZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxcbmspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PUlhPyhkPWVoKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1jaChmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1ZZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgSGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1kaChmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09XG50eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YmgoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoWGcoZikpcmV0dXJuIHooYSxkLGYsaCk7aWYoVWEoZikpcmV0dXJuIHRhKGEsZCxmLGgpO2wmJlpnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBmaD0kZyghMCksZ2g9JGcoITEpLGhoPXt9LGloPXtjdXJyZW50OmhofSxqaD17Y3VycmVudDpoaH0sa2g9e2N1cnJlbnQ6aGh9O2Z1bmN0aW9uIGxoKGEpe2lmKGE9PT1oaCl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfVxuZnVuY3Rpb24gbWgoYSxiKXtJKGtoLGIsYSk7SShqaCxhLGEpO0koaWgsaGgsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6UWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPVFiKGIsYyl9RyhpaCxhKTtJKGloLGIsYSl9ZnVuY3Rpb24gbmgoYSl7RyhpaCxhKTtHKGpoLGEpO0coa2gsYSl9ZnVuY3Rpb24gb2goYSl7bGgoa2guY3VycmVudCk7dmFyIGI9bGgoaWguY3VycmVudCk7dmFyIGM9UWIoYixhLnR5cGUpO2IhPT1jJiYoSShqaCxhLGEpLEkoaWgsYyxhKSl9ZnVuY3Rpb24gcGgoYSl7amguY3VycmVudD09PWEmJihHKGloLGEpLEcoamgsYSkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gcWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09amV8fGMuZGF0YT09PWtlKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIHJoKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIHNoPUVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsTj1FYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx0aD0wLHVoPW51bGwsTz1udWxsLHZoPW51bGwsd2g9bnVsbCxQPW51bGwseGg9bnVsbCx5aD0wLHpoPW51bGwsQWg9MCxCaD0hMSxDaD1udWxsLEdoPTA7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIEhoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIW9mKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBJaChhLGIsYyxkLGUsZil7dGg9Zjt1aD1iO3ZoPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO3NoLmN1cnJlbnQ9bnVsbD09PXZoP0poOktoO2I9YyhkLGUpO2lmKEJoKXtkbyBCaD0hMSxHaCs9MSx2aD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCx4aD13aCx6aD1QPU89bnVsbCxzaC5jdXJyZW50PUtoLGI9YyhkLGUpO3doaWxlKEJoKTtDaD1udWxsO0doPTB9c2guY3VycmVudD1MaDthPXVoO2EubWVtb2l6ZWRTdGF0ZT13aDthLmV4cGlyYXRpb25UaW1lPXloO2EudXBkYXRlUXVldWU9emg7YS5lZmZlY3RUYWd8PUFoO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7dGg9MDt4aD1QPXdoPXZoPU89dWg9bnVsbDt5aD0wO3poPW51bGw7QWg9MDtpZihhKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNaCgpe3NoLmN1cnJlbnQ9TGg7dGg9MDt4aD1QPXdoPXZoPU89dWg9bnVsbDt5aD0wO3poPW51bGw7QWg9MDtCaD0hMTtDaD1udWxsO0doPTB9ZnVuY3Rpb24gTmgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLHF1ZXVlOm51bGwsYmFzZVVwZGF0ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/d2g9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gT2goKXtpZihudWxsIT09eGgpUD14aCx4aD1QLm5leHQsTz12aCx2aD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle2lmKG51bGw9PT12aCl0aHJvdyBFcnJvcih1KDMxMCkpO089dmg7dmFyIGE9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxxdWV1ZTpPLnF1ZXVlLGJhc2VVcGRhdGU6Ty5iYXNlVXBkYXRlLG5leHQ6bnVsbH07UD1udWxsPT09UD93aD1hOlAubmV4dD1hO3ZoPU8ubmV4dH1yZXR1cm4gUH1cbmZ1bmN0aW9uIFBoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gUWgoYSl7dmFyIGI9T2goKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPEdoKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1DaCl7dmFyIGU9Q2guZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe0NoLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtvZihmLGIubWVtb2l6ZWRTdGF0ZSl8fCh3Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsaz1kLGw9ITE7ZG97dmFyIG09ay5leHBpcmF0aW9uVGltZTttPHRoPyhsfHwobD0hMCxoPWcsZT1mKSxtPnloJiYoeWg9bSxKZyh5aCkpKTooSWcobSxrLnN1c3BlbnNlQ29uZmlnKSxmPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShmLGsuYWN0aW9uKSk7Zz1rO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZCk7bHx8KGg9ZyxlPWYpO29mKGYsYi5tZW1vaXplZFN0YXRlKXx8KHdnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9aDtiLmJhc2VTdGF0ZT1lO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gUmgoYSl7dmFyIGI9TmgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6UGgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPVNoLmJpbmQobnVsbCx1aCxhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIFRoKGEpe3JldHVybiBRaChQaCxhKX1mdW5jdGlvbiBVaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07bnVsbD09PXpoPyh6aD17bGFzdEVmZmVjdDpudWxsfSx6aC5sYXN0RWZmZWN0PWEubmV4dD1hKTooYj16aC5sYXN0RWZmZWN0LG51bGw9PT1iP3poLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGM9Yi5uZXh0LGIubmV4dD1hLGEubmV4dD1jLHpoLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9TmgoKTtBaHw9YTtlLm1lbW9pemVkU3RhdGU9VWgoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gV2goYSxiLGMsZCl7dmFyIGU9T2goKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZIaChkLGcuZGVwcykpe1VoKDAsYyxmLGQpO3JldHVybn19QWh8PWE7ZS5tZW1vaXplZFN0YXRlPVVoKGIsYyxmLGQpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiwxOTIsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBXaCg1MTYsMTkyLGEsYil9XG5mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uICRoKCl7fWZ1bmN0aW9uIGFpKGEsYil7TmgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBiaShhLGIpe3ZhciBjPU9oKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZIaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFNoKGEsYixjKXtpZighKDI1PkdoKSl0aHJvdyBFcnJvcih1KDMwMSkpO3ZhciBkPWEuYWx0ZXJuYXRlO2lmKGE9PT11aHx8bnVsbCE9PWQmJmQ9PT11aClpZihCaD0hMCxhPXtleHBpcmF0aW9uVGltZTp0aCxzdXNwZW5zZUNvbmZpZzpudWxsLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1DaCYmKENoPW5ldyBNYXApLGM9Q2guZ2V0KGIpLHZvaWQgMD09PWMpQ2guc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7dmFyIGU9UGcoKSxmPU1nLnN1c3BlbnNlO2U9UWcoZSxhLGYpO2Y9e2V4cGlyYXRpb25UaW1lOmUsc3VzcGVuc2VDb25maWc6ZixhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZz1iLmxhc3Q7aWYobnVsbD09PWcpZi5uZXh0PWY7ZWxzZXt2YXIgaD1nLm5leHQ7bnVsbCE9PWgmJlxuKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1kfHwwPT09ZC5leHBpcmF0aW9uVGltZSkmJihkPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZCkpdHJ5e3ZhciBrPWIubGFzdFJlbmRlcmVkU3RhdGUsbD1kKGssYyk7Zi5lYWdlclJlZHVjZXI9ZDtmLmVhZ2VyU3RhdGU9bDtpZihvZihsLGspKXJldHVybn1jYXRjaChtKXt9ZmluYWxseXt9UmcoYSxlKX19XG52YXIgTGg9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LEpoPXtyZWFkQ29udGV4dDp4Zyx1c2VDYWxsYmFjazphaSx1c2VDb250ZXh0OnhnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwzNixaaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFZoKDQsMzYsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPU5oKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9XG5bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9TmgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1TaC5iaW5kKG51bGwsdWgsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPU5oKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOlJoLHVzZURlYnVnVmFsdWU6JGgsdXNlUmVzcG9uZGVyOnJoLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1SaChhKSxkPWNbMF0sZT1jWzFdO1hoKGZ1bmN0aW9uKCl7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9Ti5zdXNwZW5zZTtOLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7Ti5zdXNwZW5zZT1cbmN9fSl9LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1SaCghMSksYz1iWzBdLGQ9YlsxXTtyZXR1cm5bYWkoZnVuY3Rpb24oYil7ZCghMCk7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9Ti5zdXNwZW5zZTtOLnN1c3BlbnNlPXZvaWQgMD09PWE/bnVsbDphO3RyeXtkKCExKSxiKCl9ZmluYWxseXtOLnN1c3BlbnNlPWN9fSl9LFthLGNdKSxjXX19LEtoPXtyZWFkQ29udGV4dDp4Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnhnLHVzZUVmZmVjdDpZaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gV2goNCwzNixaaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFdoKDQsMzYsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPU9oKCk7Yj12b2lkIDA9PT1iP1xubnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkhoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOlFoLHVzZVJlZjpmdW5jdGlvbigpe3JldHVybiBPaCgpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOlRoLHVzZURlYnVnVmFsdWU6JGgsdXNlUmVzcG9uZGVyOnJoLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz1UaChhKSxkPWNbMF0sZT1jWzFdO1loKGZ1bmN0aW9uKCl7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9Ti5zdXNwZW5zZTtOLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7Ti5zdXNwZW5zZT1jfX0pfSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9VGgoITEpLGM9YlswXSxkPWJbMV07cmV0dXJuW2JpKGZ1bmN0aW9uKGIpe2QoITApO3EudW5zdGFibGVfbmV4dChmdW5jdGlvbigpe3ZhciBjPVxuTi5zdXNwZW5zZTtOLnN1c3BlbnNlPXZvaWQgMD09PWE/bnVsbDphO3RyeXtkKCExKSxiKCl9ZmluYWxseXtOLnN1c3BlbnNlPWN9fSl9LFthLGNdKSxjXX19LGNpPW51bGwsZGk9bnVsbCxlaT0hMTtmdW5jdGlvbiBmaShhLGIpe3ZhciBjPWdpKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBoaShhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gaWkoYSl7aWYoZWkpe3ZhciBiPWRpO2lmKGIpe3ZhciBjPWI7aWYoIWhpKGEsYikpe2I9cmUoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFoaShhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO2VpPSExO2NpPWE7cmV0dXJufWZpKGNpLGMpfWNpPWE7ZGk9cmUoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsZWk9ITEsY2k9YX19ZnVuY3Rpb24gamkoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2NpPWF9XG5mdW5jdGlvbiBraShhKXtpZihhIT09Y2kpcmV0dXJuITE7aWYoIWVpKXJldHVybiBqaShhKSxlaT0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW9lKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1kaTtiOylmaShhLGIpLGI9cmUoYi5uZXh0U2libGluZyk7amkoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1pZSl7aWYoMD09PWIpe2RpPXJlKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PWhlJiZjIT09a2UmJmMhPT1qZXx8YisrfWE9YS5uZXh0U2libGluZ31kaT1udWxsfX1lbHNlIGRpPWNpP3JlKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gbGkoKXtkaT1jaT1udWxsO2VpPSExfXZhciBtaT1FYS5SZWFjdEN1cnJlbnRPd25lcix3Zz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/Z2goYixudWxsLGMsZCk6ZmgoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gbmkoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3ZnKGIsZSk7ZD1JaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF3ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLG9pKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFxaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxyaShhLGIsZyxkLGUsZik7YT1jaChjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOnFmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIG9pKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPWFoKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiByaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZxZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJih3Zz0hMSxlPGYpP29pKGEsYixmKTpzaShhLGIsYyxkLGYpfWZ1bmN0aW9uIHRpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gc2koYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0RmOkouY3VycmVudDtmPUVmKGIsZik7dmcoYixlKTtjPUloKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXdnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksb2koYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB1aShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt2ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksVWcoYixjLGQsZSksV2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9eGcobCk6KGw9TChjKT9EZjpKLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtDfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmVmcoYixnLGQsbCk7eWc9ITE7dmFyIHk9Yi5tZW1vaXplZFN0YXRlO2s9Zy5zdGF0ZT15O3ZhciBIPWIudXBkYXRlUXVldWU7bnVsbCE9PUgmJihIZyhiLEgsZCxnLGUpLGs9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8eSE9PWt8fEsuY3VycmVudHx8eWc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoT2coYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXlnfHxUZyhiLGMsaCxkLHksayxsKSk/KEN8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDptZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD14ZyhsKToobD1MKGMpP0RmOkouY3VycmVudCxsPUVmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKEM9XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJlZnKGIsZyxkLGwpLHlnPSExLGs9Yi5tZW1vaXplZFN0YXRlLHk9Zy5zdGF0ZT1rLEg9Yi51cGRhdGVRdWV1ZSxudWxsIT09SCYmKEhnKGIsSCxkLGcsZSkseT1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxrIT09eXx8Sy5jdXJyZW50fHx5Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihPZyhiLGMsbSxkKSx5PWIubWVtb2l6ZWRTdGF0ZSksKG09eWd8fFRnKGIsYyxoLGQsayx5LGwpKT8oQ3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fFxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHksbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx5LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1cbmQsYi5tZW1vaXplZFN0YXRlPXkpLGcucHJvcHM9ZCxnLnN0YXRlPXksZy5jb250ZXh0PWwsZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIHZpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHZpKGEsYixjLGQsZSxmKXt0aShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxvaShhLGIsZik7ZD1iLnN0YXRlTm9kZTttaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1maChiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPWZoKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gd2koYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7bWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHhpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24geWkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSxiKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmaWkoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9ZWgobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1laChnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPXhpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9Z2goYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPWFoKGEsYS5wZW5kaW5nUHJvcHMsMCk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1haChkLGUsZC5leHBpcmF0aW9uVGltZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1jO3JldHVybiBkfWM9ZmgoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPVxubnVsbDtyZXR1cm4gYi5jaGlsZD1jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1laChudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPWVoKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPXhpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1maChiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIHppKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt1ZyhhLnJldHVybixiKX1mdW5jdGlvbiBBaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEJpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ6aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl6aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCxiKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09cWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtBaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1xaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9QWkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOkFpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmSmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPWFoKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPWFoKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBDaShhKXthLmVmZmVjdFRhZ3w9NH12YXIgSGksSWksSmksS2k7XG5IaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07SWk9ZnVuY3Rpb24oKXt9O1xuSmk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2xoKGloLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj1BYihnLGYpO2Q9QWIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUtiKGcsZik7ZD1LYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPWFlKX1ZZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKGlhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsXCJcIitsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJihpYS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmJGQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZDaShiKX19O0tpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZDaShiKX07XG5mdW5jdGlvbiBMaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBNaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkZmKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6bmgoYSk7R2YoYSk7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIHBoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gRyhNLGEpLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gRyhNLGEpLG51bGw7Y2FzZSA0OnJldHVybiBuaChhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHRnKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gTmkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpYYShiKX19XG52YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gUGkoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1YYShjKSk7bnVsbCE9PWMmJldhKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJldhKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIFFpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtSaShhLGMpfX1mdW5jdGlvbiBTaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtSaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBUaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpVaSgyLDAsYik7YnJlYWs7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1icmVhaztjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1cbmZ1bmN0aW9uIFVpKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoMCE9PShkLnRhZyZhKSl7dmFyIGU9ZC5kZXN0cm95O2QuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZSYmZSgpfTAhPT0oZC50YWcmYikmJihlPWQuY3JlYXRlLGQuZGVzdHJveT1lKCkpO2Q9ZC5uZXh0fXdoaWxlKGQhPT1jKX19XG5mdW5jdGlvbiBWaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFdpJiZXaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtmZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7UmkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOlNpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJlFpKGIsYyk7YnJlYWs7Y2FzZSA1OlNpKGIpO2JyZWFrO2Nhc2UgNDpYaShhLGIsYyl9fVxuZnVuY3Rpb24gWWkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDtudWxsIT09YiYmWWkoYil9ZnVuY3Rpb24gWmkoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiAkaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihaaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoVGIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFppKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7dmFyIGY9NT09PWUudGFnfHw2PT09ZS50YWc7aWYoZil7dmFyIGc9Zj9lLnN0YXRlTm9kZTplLnN0YXRlTm9kZS5pbnN0YW5jZTtpZihjKWlmKGQpe2Y9Yjt2YXIgaD1nO2c9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGgsZyk6Zi5pbnNlcnRCZWZvcmUoaCxnKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGcsYyk7ZWxzZSBkPyhoPWIsOD09PWgubm9kZVR5cGU/KGY9aC5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGcsaCkpOihmPWgsZi5hcHBlbmRDaGlsZChnKSksaD1oLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWgmJnZvaWQgMCE9PWh8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9YWUpKTpiLmFwcGVuZENoaWxkKGcpfWVsc2UgaWYoNCE9PVxuZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIFhpKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoVmkoaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhaztmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKFZpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBhaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OlVpKDQsOCxiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3ZlXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZDYihjLGQpO1pkKGEsZSk7Yj1aZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/V2QoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1NiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9UYihjLGgpOnZiKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpFYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOk1iKGMsXG5kKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9KYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkpiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19YnJlYWs7Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLExjKGIuY29udGFpbmVySW5mbykpO2JyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9kPSExOihkPSEwLGM9Yi5jaGlsZCxiaj1jZygpKTtcbmlmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1WZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPVxuYTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31jaihiKTticmVhaztjYXNlIDE5OmNqKGIpO2JyZWFrO2Nhc2UgMTc6YnJlYWs7Y2FzZSAyMDpicmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjMpKTt9fWZ1bmN0aW9uIGNqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IE9pKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9ZGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19dmFyIGVqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO1xuZnVuY3Rpb24gZmooYSxiLGMpe2M9QmcoYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtnanx8KGdqPSEwLGhqPWQpO1BpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gaWooYSxiLGMpe2M9QmcoYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7UGkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWpqP2pqPW5ldyBTZXQoW3RoaXNdKTpqai5hZGQodGhpcyksUGkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIga2o9TWF0aC5jZWlsLGxqPUVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsbWo9RWEuUmVhY3RDdXJyZW50T3duZXIsUz0wLG5qPTgsb2o9MTYscGo9MzIscWo9MCxyaj0xLHNqPTIsdGo9Myx1aj00LHZqPTUsVD1TLFU9bnVsbCxWPW51bGwsVz0wLFg9cWosd2o9bnVsbCx4aj0xMDczNzQxODIzLHlqPTEwNzM3NDE4MjMsemo9bnVsbCxBaj0wLEJqPSExLGJqPTAsQ2o9NTAwLFk9bnVsbCxnaj0hMSxoaj1udWxsLGpqPW51bGwsRGo9ITEsRWo9bnVsbCxGaj05MCxHaj1udWxsLEhqPTAsSWo9bnVsbCxKaj0wO2Z1bmN0aW9uIFBnKCl7cmV0dXJuKFQmKG9qfHBqKSkhPT1TPzEwNzM3NDE4MjEtKGNnKCkvMTB8MCk6MCE9PUpqP0pqOkpqPTEwNzM3NDE4MjEtKGNnKCkvMTB8MCl9XG5mdW5jdGlvbiBRZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWRnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChUJm9qKSE9PVMpcmV0dXJuIFc7aWYobnVsbCE9PWMpYT1sZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1sZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWxnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VSYmYT09PVcmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoNTA8SGopdGhyb3cgSGo9MCxJaj1udWxsLEVycm9yKHUoMTg1KSk7YT1LaihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1kZygpOzEwNzM3NDE4MjM9PT1iPyhUJm5qKSE9PVMmJihUJihvanxwaikpPT09Uz9MaihhKTooWihhKSxUPT09UyYmamcoKSk6WihhKTsoVCY0KT09PVN8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PUdqP0dqPW5ldyBNYXAoW1thLGJdXSk6KGM9R2ouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZHai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIEtqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihVPT09ZSYmKEpnKGIpLFg9PT11aiYmTWooZSxXKSksTmooZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBPaihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighUGooYSxiKSlyZXR1cm4gYjtiPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDtyZXR1cm4gYj5hP2I6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1oZyhMai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9T2ooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPVBnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVhmJiZOZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/aGcoTGouYmluZChudWxsLGEpKTpnZyhkLFFqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS1jZygpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gUWooYSxiKXtKaj0wO2lmKGIpcmV0dXJuIGI9UGcoKSxSaihhLGIpLFooYSksbnVsbDt2YXIgYz1PaihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVCYob2p8cGopKSE9PVMpdGhyb3cgRXJyb3IodSgzMjcpKTtTaigpO2E9PT1VJiZjPT09V3x8VGooYSxjKTtpZihudWxsIT09Vil7dmFyIGQ9VDtUfD1vajt2YXIgZT1VaihhKTtkbyB0cnl7VmooKTticmVha31jYXRjaChoKXtXaihhLGgpfXdoaWxlKDEpO3JnKCk7VD1kO2xqLmN1cnJlbnQ9ZTtpZihYPT09cmopdGhyb3cgYj13aixUaihhLGMpLE1qKGEsYyksWihhKSxiO2lmKG51bGw9PT1WKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1YLFU9bnVsbCxkKXtjYXNlIHFqOmNhc2Ugcmo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIHNqOlJqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB0ajpNaihhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9WGooZSkpO2lmKDEwNzM3NDE4MjM9PT14aiYmKGU9YmorQ2otY2coKSwxMDxlKSl7aWYoQmope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztUaihhLGMpO2JyZWFrfX1mPU9qKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9cGUoWWouYmluZChudWxsLGEpLGUpO2JyZWFrfVlqKGEpO2JyZWFrO2Nhc2UgdWo6TWooYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1YaihlKSk7aWYoQmomJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7VGooYSxjKTticmVha31lPU9qKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT15aj9kPTEwKigxMDczNzQxODIxLXlqKS1jZygpOjEwNzM3NDE4MjM9PT14aj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEteGopLTVFMyxlPWNnKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpraihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1wZShZai5iaW5kKG51bGwsYSksZCk7YnJlYWt9WWooYSk7YnJlYWs7Y2FzZSB2ajppZigxMDczNzQxODIzIT09eGomJm51bGwhPT16ail7Zj14ajt2YXIgZz16ajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj1jZygpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe01qKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxucGUoWWouYmluZChudWxsLGEpLGQpO2JyZWFrfX1ZaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBRai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gTGooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPT09YilZaihhKTtlbHNle2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMyNykpO1NqKCk7YT09PVUmJmI9PT1XfHxUaihhLGIpO2lmKG51bGwhPT1WKXt2YXIgYz1UO1R8PW9qO3ZhciBkPVVqKGEpO2RvIHRyeXtaaigpO2JyZWFrfWNhdGNoKGUpe1dqKGEsZSl9d2hpbGUoMSk7cmcoKTtUPWM7bGouY3VycmVudD1kO2lmKFg9PT1yail0aHJvdyBjPXdqLFRqKGEsYiksTWooYSxiKSxaKGEpLGM7aWYobnVsbCE9PVYpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1U9bnVsbDtZaihhKTtaKGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGFrKCl7aWYobnVsbCE9PUdqKXt2YXIgYT1HajtHaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe1JqKGMsYSk7WihjKX0pO2pnKCl9fWZ1bmN0aW9uIGJrKGEsYil7dmFyIGM9VDtUfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1Q9YyxUPT09UyYmamcoKX19ZnVuY3Rpb24gY2soYSxiKXt2YXIgYz1UO1QmPS0yO1R8PW5qO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1Q9YyxUPT09UyYmamcoKX19XG5mdW5jdGlvbiBUaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxxZShjKSk7aWYobnVsbCE9PVYpZm9yKGM9Vi5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOnZhciBlPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZSYmdm9pZCAwIT09ZSYmRmYoZCk7YnJlYWs7Y2FzZSAzOm5oKGQpO0dmKGQpO2JyZWFrO2Nhc2UgNTpwaChkKTticmVhaztjYXNlIDQ6bmgoZCk7YnJlYWs7Y2FzZSAxMzpHKE0sZCk7YnJlYWs7Y2FzZSAxOTpHKE0sZCk7YnJlYWs7Y2FzZSAxMDp0ZyhkKX1jPWMucmV0dXJufVU9YTtWPWFoKGEuY3VycmVudCxudWxsLGIpO1c9YjtYPXFqO3dqPW51bGw7eWo9eGo9MTA3Mzc0MTgyMzt6aj1udWxsO0FqPTA7Qmo9ITF9XG5mdW5jdGlvbiBXaihhLGIpe2Rve3RyeXtyZygpO01oKCk7aWYobnVsbD09PVZ8fG51bGw9PT1WLnJldHVybilyZXR1cm4gWD1yaix3aj1iLG51bGw7YTp7dmFyIGM9YSxkPVYucmV0dXJuLGU9VixmPWI7Yj1XO2UuZWZmZWN0VGFnfD0yMDQ4O2UuZmlyc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWYmJlwib2JqZWN0XCI9PT10eXBlb2YgZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYudGhlbil7dmFyIGc9ZixoPTAhPT0oTS5jdXJyZW50JjEpLGs9ZDtkb3t2YXIgbDtpZihsPTEzPT09ay50YWcpe3ZhciBtPWsubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09bSlsPW51bGwhPT1tLmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgQz1rLm1lbW9pemVkUHJvcHM7bD12b2lkIDA9PT1DLmZhbGxiYWNrPyExOiEwIT09Qy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpoPyExOiEwfX1pZihsKXt2YXIgeT1rLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT15KXt2YXIgSD1uZXcgU2V0O1xuSC5hZGQoZyk7ay51cGRhdGVRdWV1ZT1IfWVsc2UgeS5hZGQoZyk7aWYoMD09PShrLm1vZGUmMikpe2suZWZmZWN0VGFnfD02NDtlLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWUudGFnKWlmKG51bGw9PT1lLmFsdGVybmF0ZSllLnRhZz0xNztlbHNle3ZhciB6PUJnKDEwNzM3NDE4MjMsbnVsbCk7ei50YWc9MjtEZyhlLHopfWUuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWY9dm9pZCAwO2U9Yjt2YXIgdGE9Yy5waW5nQ2FjaGU7bnVsbD09PXRhPyh0YT1jLnBpbmdDYWNoZT1uZXcgZWosZj1uZXcgU2V0LHRhLnNldChnLGYpKTooZj10YS5nZXQoZyksdm9pZCAwPT09ZiYmKGY9bmV3IFNldCx0YS5zZXQoZyxmKSkpO2lmKCFmLmhhcyhlKSl7Zi5hZGQoZSk7dmFyIHI9ZGsuYmluZChudWxsLGMsZyxlKTtnLnRoZW4ocixyKX1rLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1rPWsucmV0dXJufXdoaWxlKG51bGwhPT1rKTtmPUVycm9yKChXYShlLnR5cGUpfHxcblwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitYYShlKSl9WCE9PXZqJiYoWD1zaik7Zj1OaShmLGUpO2s9ZDtkb3tzd2l0Y2goay50YWcpe2Nhc2UgMzpnPWY7ay5lZmZlY3RUYWd8PTQwOTY7ay5leHBpcmF0aW9uVGltZT1iO3ZhciB4PWZqKGssZyxiKTtFZyhrLHgpO2JyZWFrIGE7Y2FzZSAxOmc9Zjt2YXIgQT1rLnR5cGUscD1rLnN0YXRlTm9kZTtpZigwPT09KGsuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBBLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXAmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwLmNvbXBvbmVudERpZENhdGNoJiZcbihudWxsPT09amp8fCFqai5oYXMocCkpKSl7ay5lZmZlY3RUYWd8PTQwOTY7ay5leHBpcmF0aW9uVGltZT1iO3ZhciB0PWlqKGssZyxiKTtFZyhrLHQpO2JyZWFrIGF9fWs9ay5yZXR1cm59d2hpbGUobnVsbCE9PWspfVY9ZWsoVil9Y2F0Y2godil7Yj12O2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfWZ1bmN0aW9uIFVqKCl7dmFyIGE9bGouY3VycmVudDtsai5jdXJyZW50PUxoO3JldHVybiBudWxsPT09YT9MaDphfWZ1bmN0aW9uIElnKGEsYil7YTx4aiYmMjxhJiYoeGo9YSk7bnVsbCE9PWImJmE8eWomJjI8YSYmKHlqPWEsemo9Yil9ZnVuY3Rpb24gSmcoYSl7YT5BaiYmKEFqPWEpfWZ1bmN0aW9uIFpqKCl7Zm9yKDtudWxsIT09VjspVj1mayhWKX1mdW5jdGlvbiBWaigpe2Zvcig7bnVsbCE9PVYmJiFPZigpOylWPWZrKFYpfVxuZnVuY3Rpb24gZmsoYSl7dmFyIGI9Z2soYS5hbHRlcm5hdGUsYSxXKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWVrKGEpKTttai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBlayhhKXtWPWE7ZG97dmFyIGI9Vi5hbHRlcm5hdGU7YT1WLnJldHVybjtpZigwPT09KFYuZWZmZWN0VGFnJjIwNDgpKXthOnt2YXIgYz1iO2I9Vjt2YXIgZD1XO3ZhciBlPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmRmYoYik7YnJlYWs7Y2FzZSAzOm5oKGIpO0dmKGIpO2U9Yi5zdGF0ZU5vZGU7ZS5wZW5kaW5nQ29udGV4dCYmKGUuY29udGV4dD1lLnBlbmRpbmdDb250ZXh0LGUucGVuZGluZ0NvbnRleHQ9bnVsbCk7KG51bGw9PT1jfHxudWxsPT09Yy5jaGlsZCkmJmtpKGIpJiZDaShiKTtJaShiKTticmVhaztjYXNlIDU6cGgoYik7ZD1saChraC5jdXJyZW50KTt2YXIgZj1iLnR5cGU7aWYobnVsbCE9PWMmJm51bGwhPWIuc3RhdGVOb2RlKUppKGMsYixmLGUsZCksYy5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2UgaWYoZSl7dmFyIGc9XG5saChpaC5jdXJyZW50KTtpZihraShiKSl7ZT1iO3ZhciBoPWUuc3RhdGVOb2RlO2M9ZS50eXBlO3ZhciBrPWUubWVtb2l6ZWRQcm9wcyxsPWQ7aFt1ZV09ZTtoW3ZlXT1rO2Y9dm9pZCAwO2Q9aDtzd2l0Y2goYyl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxkYy5sZW5ndGg7aCsrKUYoZGNbaF0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QmIoZCxrKTtGKFwiaW52YWxpZFwiLGQpOyRkKGwsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhay5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTskZChsLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TGIoZCxrKSxGKFwiaW52YWxpZFwiLGQpLCRkKGwsXCJvbkNoYW5nZVwiKX1ZZChjLGspO2g9bnVsbDtmb3IoZiBpbiBrKWsuaGFzT3duUHJvcGVydHkoZikmJihnPWtbZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGc/ZC50ZXh0Q29udGVudCE9PWcmJihoPVtcImNoaWxkcmVuXCIsZ10pOlwibnVtYmVyXCI9PT10eXBlb2YgZyYmZC50ZXh0Q29udGVudCE9PVwiXCIrZyYmKGg9W1wiY2hpbGRyZW5cIixcIlwiK2ddKTppYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ZyYmJGQobCxmKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOnliKGQpO0diKGQsaywhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eWIoZCk7TmIoZCxrKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGsub25DbGljayYmXG4oZC5vbmNsaWNrPWFlKX1mPWg7ZS51cGRhdGVRdWV1ZT1mO2U9bnVsbCE9PWY/ITA6ITE7ZSYmQ2koYil9ZWxzZXtjPWI7bD1mO2s9ZTtoPTk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50O2c9PT1PYi5odG1sJiYoZz1QYihsKSk7Zz09PU9iLmh0bWw/XCJzY3JpcHRcIj09PWw/KGs9aC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGsuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaD1rLnJlbW92ZUNoaWxkKGsuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2Ygay5pcz9oPWguY3JlYXRlRWxlbWVudChsLHtpczprLmlzfSk6KGg9aC5jcmVhdGVFbGVtZW50KGwpLFwic2VsZWN0XCI9PT1sJiYobD1oLGsubXVsdGlwbGU/bC5tdWx0aXBsZT0hMDprLnNpemUmJihsLnNpemU9ay5zaXplKSkpOmg9aC5jcmVhdGVFbGVtZW50TlMoZyxsKTtrPWg7a1t1ZV09YztrW3ZlXT1lO0hpKGssYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9aztsPWY7Yz1lO3ZhciBtPWQsQz1aZChsLGMpO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5rKTtkPWM7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGQ9MDtkPGRjLmxlbmd0aDtkKyspRihkY1tkXSxrKTtkPWM7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGspO2Q9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixrKTtGKFwibG9hZFwiLGspO2Q9YzticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGspO0YoXCJzdWJtaXRcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkJiKGssYyk7ZD1BYihrLGMpO0YoXCJpbnZhbGlkXCIsayk7JGQobSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpkPUliKGssYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmsuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFjLm11bHRpcGxlfTtkPW4oe30sYyx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixrKTskZChtLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TGIoayxcbmMpO2Q9S2IoayxjKTtGKFwiaW52YWxpZFwiLGspOyRkKG0sXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0OmQ9Y31ZZChsLGQpO2g9dm9pZCAwO2c9bDt2YXIgeT1rLEg9ZDtmb3IoaCBpbiBIKWlmKEguaGFzT3duUHJvcGVydHkoaCkpe3ZhciB6PUhbaF07XCJzdHlsZVwiPT09aD9XZCh5LHopOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KHo9ej96Ll9faHRtbDp2b2lkIDAsbnVsbCE9eiYmU2IoeSx6KSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIHo/KFwidGV4dGFyZWFcIiE9PWd8fFwiXCIhPT16KSYmVGIoeSx6KTpcIm51bWJlclwiPT09dHlwZW9mIHomJlRiKHksXCJcIit6KTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoaWEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9eiYmJGQobSxoKTpudWxsIT16JiZ2Yih5LGgseixDKSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOnliKGspO1xuR2IoayxjLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5YihrKTtOYihrLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZrLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit1YihjLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQ9aztkLm11bHRpcGxlPSEhYy5tdWx0aXBsZTtrPWMudmFsdWU7bnVsbCE9az9KYihkLCEhYy5tdWx0aXBsZSxrLCExKTpudWxsIT1jLmRlZmF1bHRWYWx1ZSYmSmIoZCwhIWMubXVsdGlwbGUsYy5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGsub25jbGljaz1hZSl9KGU9bmUoZixlKSkmJkNpKGIpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgaWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7YnJlYWs7Y2FzZSA2OmlmKGMmJm51bGwhPWIuc3RhdGVOb2RlKUtpKGMsYixjLm1lbW9pemVkUHJvcHMsZSk7ZWxzZXtpZihcInN0cmluZ1wiIT09XG50eXBlb2YgZSYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7ZD1saChraC5jdXJyZW50KTtsaChpaC5jdXJyZW50KTtraShiKT8oZT1iLGY9ZS5zdGF0ZU5vZGUsZD1lLm1lbW9pemVkUHJvcHMsZlt1ZV09ZSwoZT1mLm5vZGVWYWx1ZSE9PWQpJiZDaShiKSk6KGY9YixlPSg5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZSksZVt1ZV09ZixiLnN0YXRlTm9kZT1lKX1icmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6RyhNLGIpO2U9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWQ7YnJlYWsgYX1lPW51bGwhPT1lO2Y9ITE7bnVsbD09PWM/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZraShiKTooZD1jLm1lbW9pemVkU3RhdGUsZj1udWxsIT09ZCxlfHxudWxsPT09ZHx8KGQ9Yy5jaGlsZC5zaWJsaW5nLG51bGwhPT1kJiYoaz1iLmZpcnN0RWZmZWN0LFxubnVsbCE9PWs/KGIuZmlyc3RFZmZlY3Q9ZCxkLm5leHRFZmZlY3Q9ayk6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWQsZC5uZXh0RWZmZWN0PW51bGwpLGQuZWZmZWN0VGFnPTgpKSk7aWYoZSYmIWYmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1jJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpWD09PXFqJiYoWD10aik7ZWxzZXtpZihYPT09cWp8fFg9PT10ailYPXVqOzAhPT1BaiYmbnVsbCE9PVUmJihNaihVLFcpLE5qKFUsQWopKX1pZihlfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6bmgoYik7SWkoYik7YnJlYWs7Y2FzZSAxMDp0ZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkwoYi50eXBlKSYmRmYoYik7YnJlYWs7Y2FzZSAxOTpHKE0sYik7ZT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PVxuZSlicmVhaztmPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2s9ZS5yZW5kZXJpbmc7aWYobnVsbD09PWspaWYoZilMaShlLCExKTtlbHNle2lmKFghPT1xanx8bnVsbCE9PWMmJjAhPT0oYy5lZmZlY3RUYWcmNjQpKWZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KXtrPXFoKGMpO2lmKG51bGwhPT1rKXtiLmVmZmVjdFRhZ3w9NjQ7TGkoZSwhMSk7Zj1rLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZS5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0O2U9ZDtmb3IoZj1iLmNoaWxkO251bGwhPT1mOylkPWYsYz1lLGQuZWZmZWN0VGFnJj0yLGQubmV4dEVmZmVjdD1udWxsLGQuZmlyc3RFZmZlY3Q9bnVsbCxkLmxhc3RFZmZlY3Q9bnVsbCxrPWQuYWx0ZXJuYXRlLG51bGw9PT1rPyhkLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxkLmV4cGlyYXRpb25UaW1lPWMsZC5jaGlsZD1udWxsLFxuZC5tZW1vaXplZFByb3BzPW51bGwsZC5tZW1vaXplZFN0YXRlPW51bGwsZC51cGRhdGVRdWV1ZT1udWxsLGQuZGVwZW5kZW5jaWVzPW51bGwpOihkLmNoaWxkRXhwaXJhdGlvblRpbWU9ay5jaGlsZEV4cGlyYXRpb25UaW1lLGQuZXhwaXJhdGlvblRpbWU9ay5leHBpcmF0aW9uVGltZSxkLmNoaWxkPWsuY2hpbGQsZC5tZW1vaXplZFByb3BzPWsubWVtb2l6ZWRQcm9wcyxkLm1lbW9pemVkU3RhdGU9ay5tZW1vaXplZFN0YXRlLGQudXBkYXRlUXVldWU9ay51cGRhdGVRdWV1ZSxjPWsuZGVwZW5kZW5jaWVzLGQuZGVwZW5kZW5jaWVzPW51bGw9PT1jP251bGw6e2V4cGlyYXRpb25UaW1lOmMuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmMuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yy5yZXNwb25kZXJzfSksZj1mLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIsYik7Yj1iLmNoaWxkO2JyZWFrIGF9Yz1jLnNpYmxpbmd9fWVsc2V7aWYoIWYpaWYoYz1xaChrKSxudWxsIT09Yyl7aWYoYi5lZmZlY3RUYWd8PVxuNjQsZj0hMCxkPWMudXBkYXRlUXVldWUsbnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5lZmZlY3RUYWd8PTQpLExpKGUsITApLG51bGw9PT1lLnRhaWwmJlwiaGlkZGVuXCI9PT1lLnRhaWxNb2RlKXtiPWIubGFzdEVmZmVjdD1lLmxhc3RFZmZlY3Q7bnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCk7YnJlYWt9fWVsc2UgY2coKT5lLnRhaWxFeHBpcmF0aW9uJiYxPGQmJihiLmVmZmVjdFRhZ3w9NjQsZj0hMCxMaShlLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1kLTEpO2UuaXNCYWNrd2FyZHM/KGsuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9ayk6KGQ9ZS5sYXN0LG51bGwhPT1kP2Quc2libGluZz1rOmIuY2hpbGQ9ayxlLmxhc3Q9ayl9aWYobnVsbCE9PWUudGFpbCl7MD09PWUudGFpbEV4cGlyYXRpb24mJihlLnRhaWxFeHBpcmF0aW9uPWNnKCkrNTAwKTtkPWUudGFpbDtlLnJlbmRlcmluZz1kO2UudGFpbD1kLnNpYmxpbmc7ZS5sYXN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0O2Quc2libGluZz1udWxsO2U9TS5jdXJyZW50O2U9Zj9lJjF8MjplJjE7SShNLGUsYik7Yj1kO2JyZWFrIGF9YnJlYWs7Y2FzZSAyMDpicmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9Yj1udWxsfWU9VjtpZigxPT09V3x8MSE9PWUuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zj0wO2ZvcihkPWUuY2hpbGQ7bnVsbCE9PWQ7KWM9ZC5leHBpcmF0aW9uVGltZSxrPWQuY2hpbGRFeHBpcmF0aW9uVGltZSxjPmYmJihmPWMpLGs+ZiYmKGY9ayksZD1kLnNpYmxpbmc7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Vi5maXJzdEVmZmVjdCksbnVsbCE9PVYubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1WLmZpcnN0RWZmZWN0KSxcbmEubGFzdEVmZmVjdD1WLmxhc3RFZmZlY3QpLDE8Vi5lZmZlY3RUYWcmJihudWxsIT09YS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVY6YS5maXJzdEVmZmVjdD1WLGEubGFzdEVmZmVjdD1WKSl9ZWxzZXtiPU1pKFYsVyk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVYuc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtWPWF9d2hpbGUobnVsbCE9PVYpO1g9PT1xaiYmKFg9dmopO3JldHVybiBudWxsfWZ1bmN0aW9uIFhqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gWWooYSl7dmFyIGI9ZGcoKTtmZyg5OSxpay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpayhhLGIpe1NqKCk7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1YaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmXG4oYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1VJiYoVj1VPW51bGwsVz0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1UO1R8PXBqO21qLmN1cnJlbnQ9bnVsbDtsZT1MZDt2YXIgZz1mZSgpO2lmKGdlKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxtPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDtcbnRyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2goRGIpe2g9bnVsbDticmVhayBhfXZhciBDPTAseT0tMSxIPS0xLHo9MCx0YT0wLHI9Zyx4PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXtyIT09aHx8MCE9PWwmJjMhPT1yLm5vZGVUeXBlfHwoeT1DK2wpO3IhPT1tfHwwIT09ayYmMyE9PXIubm9kZVR5cGV8fChIPUMrayk7Mz09PXIubm9kZVR5cGUmJihDKz1yLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT1yLmZpcnN0Q2hpbGQpKWJyZWFrO3g9cjtyPUF9Zm9yKDs7KXtpZihyPT09ZylicmVhayBiO3g9PT1oJiYrK3o9PT1sJiYoeT1DKTt4PT09bSYmKyt0YT09PWsmJihIPUMpO2lmKG51bGwhPT0oQT1yLm5leHRTaWJsaW5nKSlicmVhaztyPXg7eD1yLnBhcmVudE5vZGV9cj1BfWg9LTE9PT15fHwtMT09PUg/bnVsbDp7c3RhcnQ6eSxlbmQ6SH19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bWU9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07XG5MZD0hMTtZPWU7ZG8gdHJ5e2prKCl9Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcD1ZLmVmZmVjdFRhZztwJjE2JiZUYihZLnN0YXRlTm9kZSxcIlwiKTtpZihwJjEyOCl7dmFyIHQ9WS5hbHRlcm5hdGU7aWYobnVsbCE9PXQpe3ZhciB2PXQucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChwJjEwMzgpe2Nhc2UgMjokaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OiRpKFkpO1kuZWZmZWN0VGFnJj0tMzthaihZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9LTEwMjU7YWooWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OmFqKFkuYWx0ZXJuYXRlLFxuWSk7YnJlYWs7Y2FzZSA4Omw9WSxYaShnLGwsaCksWWkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt2PW1lO3Q9ZmUoKTtwPXYuZm9jdXNlZEVsZW07aD12LnNlbGVjdGlvblJhbmdlO2lmKHQhPT1wJiZwJiZwLm93bmVyRG9jdW1lbnQmJmVlKHAub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscCkpe251bGwhPT1oJiZnZShwKSYmKHQ9aC5zdGFydCx2PWguZW5kLHZvaWQgMD09PXYmJih2PXQpLFwic2VsZWN0aW9uU3RhcnRcImluIHA/KHAuc2VsZWN0aW9uU3RhcnQ9dCxwLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHAudmFsdWUubGVuZ3RoKSk6KHY9KHQ9cC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnQuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxsPXAudGV4dENvbnRlbnQubGVuZ3RoLFxuZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdi5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPWRlKHAsZyksbT1kZShwLGgpLGwmJm0mJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1sLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09bS5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYodD10LmNyZWF0ZVJhbmdlKCksdC5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh2LmFkZFJhbmdlKHQpLHYuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOih0LnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHYuYWRkUmFuZ2UodCkpKSkpKTt0PVtdO2Zvcih2PXA7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZ0LnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBwLmZvY3VzJiZwLmZvY3VzKCk7Zm9yKHA9MDtwPHQubGVuZ3RoO3ArKyl2PXRbcF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9bWU9bnVsbDtMZD0hIWxlO2xlPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocD1kO251bGwhPT1ZOyl7dmFyIERoPVkuZWZmZWN0VGFnO2lmKERoJjM2KXt2YXIgY2M9WS5hbHRlcm5hdGU7dD1ZO3Y9cDtzd2l0Y2godC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VWkoMTYsMzIsdCk7YnJlYWs7Y2FzZSAxOnZhciBkZD10LnN0YXRlTm9kZTtpZih0LmVmZmVjdFRhZyY0KWlmKG51bGw9PT1jYylkZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGhrPXQuZWxlbWVudFR5cGU9PT10LnR5cGU/Y2MubWVtb2l6ZWRQcm9wczptZyh0LnR5cGUsY2MubWVtb2l6ZWRQcm9wcyk7ZGQuY29tcG9uZW50RGlkVXBkYXRlKGhrLGNjLm1lbW9pemVkU3RhdGUsZGQuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBFaD1cbnQudXBkYXRlUXVldWU7bnVsbCE9PUVoJiZLZyh0LEVoLGRkLHYpO2JyZWFrO2Nhc2UgMzp2YXIgRmg9dC51cGRhdGVRdWV1ZTtpZihudWxsIT09Rmgpe2c9bnVsbDtpZihudWxsIT09dC5jaGlsZClzd2l0Y2godC5jaGlsZC50YWcpe2Nhc2UgNTpnPXQuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPXQuY2hpbGQuc3RhdGVOb2RlfUtnKHQsRmgsZyx2KX1icmVhaztjYXNlIDU6dmFyIHhrPXQuc3RhdGVOb2RlO251bGw9PT1jYyYmdC5lZmZlY3RUYWcmNCYmbmUodC50eXBlLHQubWVtb2l6ZWRQcm9wcykmJnhrLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PXQubWVtb2l6ZWRTdGF0ZSl7dmFyIERpPXQuYWx0ZXJuYXRlO2lmKG51bGwhPT1EaSl7dmFyIEVpPURpLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PUVpKXt2YXIgRmk9RWkuZGVoeWRyYXRlZDtudWxsIT09RmkmJkxjKEZpKX19fWJyZWFrO1xuY2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1pZihEaCYxMjgpe3Q9dm9pZCAwO3ZhciB3ZD1ZLnJlZjtpZihudWxsIT09d2Qpe3ZhciBHaT1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTp0PUdpO2JyZWFrO2RlZmF1bHQ6dD1HaX1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygd2Q/d2QodCk6d2QuY3VycmVudD10fX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9bnVsbDtZZigpO1Q9Zn1lbHNlIGEuY3VycmVudD1jO2lmKERqKURqPSExLEVqPWEsRmo9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGpqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT1Jaj9IaisrOihIaj1cbjAsSWo9YSk6SGo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2Yga2smJmtrKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoZ2opdGhyb3cgZ2o9ITEsYT1oaixoaj1udWxsLGE7aWYoKFQmbmopIT09UylyZXR1cm4gbnVsbDtqZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIGprKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZUaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8RGp8fChEaj0hMCxnZyg5NyxmdW5jdGlvbigpe1NqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fWZ1bmN0aW9uIFNqKCl7aWYoOTAhPT1Gail7dmFyIGE9OTc8Rmo/OTc6Rmo7Rmo9OTA7cmV0dXJuIGZnKGEsbGspfX1cbmZ1bmN0aW9uIGxrKCl7aWYobnVsbD09PUVqKXJldHVybiExO3ZhciBhPUVqO0VqPW51bGw7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VDtUfD1wajtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDEyOCwwLGMpLFVpKDAsNjQsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7UmkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9VD1iO2pnKCk7cmV0dXJuITB9ZnVuY3Rpb24gbWsoYSxiLGMpe2I9TmkoYyxiKTtiPWZqKGEsYiwxMDczNzQxODIzKTtEZyhhLGIpO2E9S2ooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1cbmZ1bmN0aW9uIFJpKGEsYil7aWYoMz09PWEudGFnKW1rKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7bWsoYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09amp8fCFqai5oYXMoZCkpKXthPU5pKGIsYSk7YT1paihjLGEsMTA3Mzc0MTgyMyk7RGcoYyxhKTtjPUtqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gZGsoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtVPT09YSYmVz09PWM/WD09PXVqfHxYPT09dGomJjEwNzM3NDE4MjM9PT14aiYmY2coKS1iajxDaj9UaihhLFcpOkJqPSEwOlBqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1jJiYoYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTAsYS5maW5pc2hlZFdvcms9bnVsbCksWihhKSkpfWZ1bmN0aW9uIGRqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9UGcoKSxiPVFnKGIsYSxudWxsKSk7YT1LaihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBnaztcbmdrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpd2c9ITA7ZWxzZXtpZihkPGMpe3dnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOndpKGIpO2xpKCk7YnJlYWs7Y2FzZSA1Om9oKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6bWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnNnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB5aShhLGIsYyk7SShNLE0uY3VycmVudCZcbjEsYik7Yj1vaShhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSxiKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBCaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCxiKTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gb2koYSxiLGMpfXdnPSExfX1lbHNlIHdnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsSi5jdXJyZW50KTt2ZyhiLGMpO2U9SWgobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO01oKCk7aWYoTChkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJk9nKGIsZCxnLGEpO2UudXBkYXRlcj1TZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO1dnKGIsZCxhLGMpO2I9dmkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7VmEoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7XG5lPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPW5rKGUpO2E9bWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9c2kobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDE6Yj11aShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTE6Yj1uaShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTQ6Yj1waShudWxsLGIsZSxtZyhlLnR5cGUsYSksZCxjKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksc2koYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksdWkoYSxiLGQsZSxjKTtjYXNlIDM6d2koYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6XG5udWxsO0hnKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpbGkoKSxiPW9pKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlkaT1yZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGNpPWIsZT1laT0hMDtpZihlKWZvcihjPWdoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxsaSgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIG9oKGIpLG51bGw9PT1hJiZpaShiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG9lKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZvZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx0aShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9XG5iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZpaShiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHlpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIG1oKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWZoKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG5pKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7XG5lPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtzZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9b2YoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj1vaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9QmcoYyxudWxsKSxsLnRhZz0yLERnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9XG5jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3VnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix2ZyhiLGMpLGU9eGcoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtcbmNhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bWcoZSxiLnBlbmRpbmdQcm9wcyksZj1tZyhlLnR5cGUsZikscGkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHJpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsSmYoYikpOmE9ITEsdmcoYixjKSxVZyhiLGQsZSxjKSxXZyhiLGQsZSxjKSx2aShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEJpKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIGtrPW51bGwsV2k9bnVsbDtcbmZ1bmN0aW9uIG9rKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO2trPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O1dpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gcGsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBnaShhLGIsYyxkKXtyZXR1cm4gbmV3IHBrKGEsYixjLGQpfVxuZnVuY3Rpb24gcWkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBuayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gcWkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PU9hKXJldHVybiAxMTtpZihhPT09UmEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gYWgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1naShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGNoKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlxaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm4gZWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBOYTpnPTg7ZXw9NzticmVhaztjYXNlIEphOmc9ODtlfD0xO2JyZWFrO2Nhc2UgS2E6cmV0dXJuIGE9Z2koMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1LYSxhLnR5cGU9S2EsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBQYTpyZXR1cm4gYT1naSgxMyxjLGIsZSksYS50eXBlPVBhLGEuZWxlbWVudFR5cGU9UGEsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBRYTpyZXR1cm4gYT1naSgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1RYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgTGE6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBNYTpnPTk7YnJlYWsgYTtjYXNlIE9hOmc9MTE7YnJlYWsgYTtjYXNlIFJhOmc9MTQ7YnJlYWsgYTtjYXNlIFNhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1naShnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGVoKGEsYixjLGQpe2E9Z2koNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGJoKGEsYixjKXthPWdpKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGRoKGEsYixjKXtiPWdpKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gcWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIFBqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24gTmooYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBSaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIHJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPVBnKCksZz1NZy5zdXNwZW5zZTtmPVFnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGVjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1CZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO0RnKGUsYik7UmcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBzayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIHRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiB1ayhhLGIpe3RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZ0ayhhLGIpfVxuZnVuY3Rpb24gdmsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpIYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1qYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1sZyhQZygpLDE1MCwxMDApO1JnKGEsYik7dWsoYSxiKX19O2tjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe1BnKCk7dmFyIGI9a2crKztSZyhhLGIpO3VrKGEsYil9fTtsYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1QZygpO2I9UWcoYixhLG51bGwpO1JnKGEsYik7dWsoYSxiKX19O1xuWmE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpFYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9eWUoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3piKGQpO0ViKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpNYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIHdrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBxayhhLGIsYyksZT1naSgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDthW3dlXT1kLmN1cnJlbnQ7YyYmMCE9PWImJndjKDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH13ay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290O3JrKGEsYyxudWxsLHZvaWQgMD09PWI/bnVsbDpiKX07d2sucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290O3JrKG51bGwsYixudWxsLHZvaWQgMD09PWE/bnVsbDphKX07XG5mdW5jdGlvbiB5ayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZWI9Yms7ZmI9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9VDtUfD00O3RyeXtyZXR1cm4gZmcoOTgsYS5iaW5kKG51bGwsYixjLGQpKX1maW5hbGx5e1Q9ZSxUPT09UyYmamcoKX19O2diPWZ1bmN0aW9uKCl7KFQmKDF8b2p8cGopKT09PVMmJihhaygpLFNqKCkpfTtoYj1mdW5jdGlvbihhLGIpe3ZhciBjPVQ7VHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtUPWMsVD09PVMmJmpnKCl9fTtcbmZ1bmN0aW9uIHprKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgd2soYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBBayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPXNrKGcpO2guY2FsbChhKX19cmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj16ayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1zayhnKTtrLmNhbGwoYSl9fWNrKGZ1bmN0aW9uKCl7cmsoYixnLGEsZSl9KX1yZXR1cm4gc2soZyl9ZnVuY3Rpb24gQmsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZigheWsoYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gdmsoYSxiLG51bGwsYyl9XG52YXIgQ2s9e2NyZWF0ZVBvcnRhbDpCayxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWljKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7aWYoIXlrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIEFrKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe2lmKCF5ayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBBayhudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXlrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7XG5pZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBBayhhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtpZigheWsoYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KGNrKGZ1bmN0aW9uKCl7QWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gQmsuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOmJrLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVQ7VHw9MTt0cnl7cmV0dXJuIGZnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1Q9YyxqZygpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbQ2MsXG54ZSx5ZSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUsZmEsU2MsZnVuY3Rpb24oYSl7eWEoYSxSYyl9LGNiLGRiLFBkLEJhLFNqLHtjdXJyZW50OiExfV19fTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBvayhuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWljKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6RmMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMS4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgRGs9e2RlZmF1bHQ6Q2t9LEVrPURrJiZDa3x8RGs7bW9kdWxlLmV4cG9ydHM9RWsuZGVmYXVsdHx8RWs7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE3LjBcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQsQT13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLEI9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgdyYmXG5cImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQz14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQ319dmFyIEQ9ITEsRT1udWxsLEY9LTEsRz01LEg9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUh9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpHPTA8YT9NYXRoLmZsb29yKDFFMy9hKTozMy4zM307dmFyIEk9bmV3IE1lc3NhZ2VDaGFubmVsLEo9SS5wb3J0MjtJLnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUUpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7SD1hK0c7dHJ5e0UoITAsYSk/Si5wb3N0TWVzc2FnZShudWxsKTooRD0hMSxFPW51bGwpfWNhdGNoKGIpe3Rocm93IEoucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgRD0hMX07Zj1mdW5jdGlvbihhKXtFPWE7RHx8KEQ9ITAsSi5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtGPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRik7Rj0tMX19ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9TWF0aC5mbG9vcigoYy0xKS8yKSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxMKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBNKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBOKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkwobixjKSl2b2lkIDAhPT1yJiYwPkwocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkwocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEwoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE89W10sUD1bXSxRPTEsUj1udWxsLFM9MyxUPSExLFU9ITEsVj0hMTtcbmZ1bmN0aW9uIFcoYSl7Zm9yKHZhciBiPU0oUCk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylOKFApO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTihQKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEsoTyxiKTtlbHNlIGJyZWFrO2I9TShQKX19ZnVuY3Rpb24gWChhKXtWPSExO1coYSk7aWYoIVUpaWYobnVsbCE9PU0oTykpVT0hMCxmKFkpO2Vsc2V7dmFyIGI9TShQKTtudWxsIT09YiYmZyhYLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFkoYSxiKXtVPSExO1YmJihWPSExLGgoKSk7VD0hMDt2YXIgYz1TO3RyeXtXKGIpO2ZvcihSPU0oTyk7bnVsbCE9PVImJighKFIuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9Ui5jYWxsYmFjaztpZihudWxsIT09ZCl7Ui5jYWxsYmFjaz1udWxsO1M9Ui5wcmlvcml0eUxldmVsO3ZhciBlPWQoUi5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1IuY2FsbGJhY2s9ZTpSPT09TShPKSYmTihPKTtXKGIpfWVsc2UgTihPKTtSPU0oTyl9aWYobnVsbCE9PVIpdmFyIG09ITA7ZWxzZXt2YXIgbj1NKFApO251bGwhPT1uJiZnKFgsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1I9bnVsbCxTPWMsVD0hMX19XG5mdW5jdGlvbiBaKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIGFhPWw7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1TO1M9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1M9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChTKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1TfXZhciBjPVM7Uz1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uz1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlooYSl9ZWxzZSBjPVooYSksZT1kO2M9ZStjO2E9e2lkOlErKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEsoUCxhKSxudWxsPT09TShPKSYmYT09PU0oUCkmJihWP2goKTpWPSEwLGcoWCxlLWQpKSk6KGEuc29ydEluZGV4PWMsSyhPLGEpLFV8fFR8fChVPSEwLGYoWSkpKTtyZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1TO1M9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uz1jfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gU307ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VyhhKTt2YXIgYj1NKE8pO3JldHVybiBiIT09UiYmbnVsbCE9PVImJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8Ui5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1hYTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VXx8VHx8KFU9ITAsZihZKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBNKE8pfTtleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTEuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx3PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIHkoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSB0OmNhc2UgcjpjYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB6KGEpe3JldHVybiB5KGEpPT09bX1cbmV4cG9ydHMudHlwZU9mPXk7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09dnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14KX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKXx8eShhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT16O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09aH07XG5leHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cH07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwiZnVuY3Rpb24gdmFsdWVPZihvYmopIHtcbiAgcmV0dXJuIG9iai52YWx1ZU9mID8gb2JqLnZhbHVlT2YoKSA6IE9iamVjdC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaik7XG59XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICAvLyBUZXN0IGZvciBzdHJpY3QgZXF1YWxpdHkgZmlyc3QuXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBPdGhlcndpc2UsIGlmIGVpdGhlciBvZiB0aGVtID09IG51bGwgdGhleSBhcmUgbm90IGVxdWFsLlxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIEFycmF5LmlzQXJyYXkoYikgJiZcbiAgICAgIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxuICAgICAgYS5ldmVyeShmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnIHx8IHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSB2YWx1ZU9mKGEpO1xuICAgIHZhciBiVmFsdWUgPSB2YWx1ZU9mKGIpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCBhLCBiKSkuZXZlcnkoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7XG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmIChjb25kaXRpb24pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGd1ZCBmcm9tICdndWQnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGd1ZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH07XG5cbiAgICAgIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuXG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gX3RoaXMyO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG52YXIgaW5kZXggPSBSZWFjdC5jcmVhdGVDb250ZXh0IHx8IGNyZWF0ZVJlYWN0Q29udGV4dDtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCIvLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tIFwibWluaS1jcmVhdGUtcmVhY3QtY29udGV4dFwiO1xuXG5jb25zdCBjcmVhdGVOYW1lZENvbnRleHQgPSBuYW1lID0+IHtcbiAgY29uc3QgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG5cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5jb25zdCBjb250ZXh0ID0gLyojX19QVVJFX18qLyBjcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXJcIik7XG5leHBvcnQgZGVmYXVsdCBjb250ZXh0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0XCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5jbGFzcyBSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7IHBhdGg6IFwiL1wiLCB1cmw6IFwiL1wiLCBwYXJhbXM6IHt9LCBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCIgfTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTtcblxuICAgIC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG4gICAgdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGxvY2F0aW9uID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LlByb3ZpZGVyXG4gICAgICAgIGNoaWxkcmVuPXt0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGx9XG4gICAgICAgIHZhbHVlPXt7XG4gICAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24ocHJldlByb3BzKSB7XG4gICAgd2FybmluZyhcbiAgICAgIHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXIgZnJvbSBcIi4vUm91dGVyXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5jbGFzcyBNZW1vcnlSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSh0aGlzLnByb3BzKTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxSb3V0ZXIgaGlzdG9yeT17dGhpcy5oaXN0b3J5fSBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbn0gLz47XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lbW9yeVJvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuY2xhc3MgTGlmZWN5Y2xlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH1cblxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IExpZmVjeWNsZTtcbiIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbmNvbnN0IGNhY2hlID0ge307XG5jb25zdCBjYWNoZUxpbWl0ID0gMTAwMDA7XG5sZXQgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG5cbiAgY29uc3QgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCA9IFwiL1wiLCBwYXJhbXMgPSB7fSkge1xuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7IHByZXR0eTogdHJ1ZSB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVQYXRoO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5cbmltcG9ydCBMaWZlY3ljbGUgZnJvbSBcIi4vTGlmZWN5Y2xlXCI7XG5pbXBvcnQgUm91dGVyQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0XCI7XG5pbXBvcnQgZ2VuZXJhdGVQYXRoIGZyb20gXCIuL2dlbmVyYXRlUGF0aFwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuZnVuY3Rpb24gUmVkaXJlY3QoeyBjb21wdXRlZE1hdGNoLCB0bywgcHVzaCA9IGZhbHNlIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8Um91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgIGNvbnN0IHsgaGlzdG9yeSwgc3RhdGljQ29udGV4dCB9ID0gY29udGV4dDtcblxuICAgICAgICBjb25zdCBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgICAgICBjb25zdCBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKFxuICAgICAgICAgIGNvbXB1dGVkTWF0Y2hcbiAgICAgICAgICAgID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiXG4gICAgICAgICAgICAgID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAuLi50byxcbiAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDogdG9cbiAgICAgICAgKTtcblxuICAgICAgICAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgICAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cbiAgICAgICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8TGlmZWN5Y2xlXG4gICAgICAgICAgICBvbk1vdW50PXsoKSA9PiB7XG4gICAgICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25VcGRhdGU9eyhzZWxmLCBwcmV2UHJvcHMpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcbiAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgIC4uLmxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHRvPXt0b31cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfX1cbiAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICk7XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBSZWRpcmVjdDtcbiIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbmNvbnN0IGNhY2hlID0ge307XG5jb25zdCBjYWNoZUxpbWl0ID0gMTAwMDA7XG5sZXQgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIG9wdGlvbnMpIHtcbiAgY29uc3QgY2FjaGVLZXkgPSBgJHtvcHRpb25zLmVuZH0ke29wdGlvbnMuc3RyaWN0fSR7b3B0aW9ucy5zZW5zaXRpdmV9YDtcbiAgY29uc3QgcGF0aENhY2hlID0gY2FjaGVbY2FjaGVLZXldIHx8IChjYWNoZVtjYWNoZUtleV0gPSB7fSk7XG5cbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcblxuICBjb25zdCBrZXlzID0gW107XG4gIGNvbnN0IHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgY29uc3QgcmVzdWx0ID0geyByZWdleHAsIGtleXMgfTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHsgcGF0aDogb3B0aW9ucyB9O1xuICB9XG5cbiAgY29uc3QgeyBwYXRoLCBleGFjdCA9IGZhbHNlLCBzdHJpY3QgPSBmYWxzZSwgc2Vuc2l0aXZlID0gZmFsc2UgfSA9IG9wdGlvbnM7XG5cbiAgY29uc3QgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG5cbiAgcmV0dXJuIHBhdGhzLnJlZHVjZSgobWF0Y2hlZCwgcGF0aCkgPT4ge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICBjb25zdCB7IHJlZ2V4cCwga2V5cyB9ID0gY29tcGlsZVBhdGgocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZVxuICAgIH0pO1xuICAgIGNvbnN0IG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuXG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgICBjb25zdCBbdXJsLCAuLi52YWx1ZXNdID0gbWF0Y2g7XG4gICAgY29uc3QgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGgsIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdCwgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKChtZW1vLCBrZXksIGluZGV4KSA9PiB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSBcInJlYWN0LWlzXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyQ29udGV4dCBmcm9tIFwiLi9Sb3V0ZXJDb250ZXh0XCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICBjb25zdCB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcblxuICB3YXJuaW5nKFxuICAgIHZhbHVlICE9PSB1bmRlZmluZWQsXG4gICAgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArXG4gICAgICBgPFJvdXRlJHtwYXRoID8gYCBwYXRoPVwiJHtwYXRofVwiYCA6IFwiXCJ9PiwgYnV0IHlvdSBgICtcbiAgICAgIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiXG4gICk7XG5cbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuY2xhc3MgUm91dGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2hcbiAgICAgICAgICAgID8gdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgICAgICAgOiB0aGlzLnByb3BzLnBhdGhcbiAgICAgICAgICAgID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCB0aGlzLnByb3BzKVxuICAgICAgICAgICAgOiBjb250ZXh0Lm1hdGNoO1xuXG4gICAgICAgICAgY29uc3QgcHJvcHMgPSB7IC4uLmNvbnRleHQsIGxvY2F0aW9uLCBtYXRjaCB9O1xuXG4gICAgICAgICAgbGV0IHsgY2hpbGRyZW4sIGNvbXBvbmVudCwgcmVuZGVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgICAgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Um91dGVyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17cHJvcHN9PlxuICAgICAgICAgICAgICB7cHJvcHMubWF0Y2hcbiAgICAgICAgICAgICAgICA/IGNoaWxkcmVuXG4gICAgICAgICAgICAgICAgICA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICAgICAgICAgID8gX19ERVZfX1xuICAgICAgICAgICAgICAgICAgICAgID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgdGhpcy5wcm9wcy5wYXRoKVxuICAgICAgICAgICAgICAgICAgICAgIDogY2hpbGRyZW4ocHJvcHMpXG4gICAgICAgICAgICAgICAgICAgIDogY2hpbGRyZW5cbiAgICAgICAgICAgICAgICAgIDogY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcylcbiAgICAgICAgICAgICAgICAgIDogcmVuZGVyXG4gICAgICAgICAgICAgICAgICA/IHJlbmRlcihwcm9wcylcbiAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgICAgIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICAgICAgICA/IF9fREVWX19cbiAgICAgICAgICAgICAgICAgID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgdGhpcy5wcm9wcy5wYXRoKVxuICAgICAgICAgICAgICAgICAgOiBjaGlsZHJlbihwcm9wcylcbiAgICAgICAgICAgICAgICA6IG51bGx9XG4gICAgICAgICAgICA8L1JvdXRlckNvbnRleHQuUHJvdmlkZXI+XG4gICAgICAgICAgKTtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiAocHJvcHMsIHByb3BOYW1lKSA9PiB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFxuICAgICAgICAgIGBJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50YFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXG4gICAgXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIShcbiAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJlxuICAgICAgICAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmXG4gICAgICAgIHRoaXMucHJvcHMuY29tcG9uZW50XG4gICAgICApLFxuICAgICAgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiXG4gICAgKTtcblxuICAgIHdhcm5pbmcoXG4gICAgICAhKFxuICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuICYmXG4gICAgICAgICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiZcbiAgICAgICAgdGhpcy5wcm9wcy5yZW5kZXJcbiAgICAgICksXG4gICAgICBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCJcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLFxuICAgICAgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIlxuICAgICk7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uKHByZXZQcm9wcykge1xuICAgIHdhcm5pbmcoXG4gICAgICAhKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksXG4gICAgICAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiwgY3JlYXRlUGF0aCB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcInRpbnktd2FybmluZ1wiO1xuXG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4ge1xuICAgIC4uLmxvY2F0aW9uLFxuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIGNvbnN0IGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuXG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5sb2NhdGlvbixcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cbmNsYXNzIFN0YXRpY1JvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIGNvbnN0IHsgYmFzZW5hbWUgPSBcIlwiLCBjb250ZXh0ID0ge30gfSA9IHRoaXMucHJvcHM7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9XG5cbiAgaGFuZGxlUHVzaCA9IGxvY2F0aW9uID0+IHRoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICBoYW5kbGVSZXBsYWNlID0gbG9jYXRpb24gPT4gdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gIGhhbmRsZUxpc3RlbiA9ICgpID0+IG5vb3A7XG4gIGhhbmRsZUJsb2NrID0gKCkgPT4gbm9vcDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBiYXNlbmFtZSA9IFwiXCIsIGNvbnRleHQgPSB7fSwgbG9jYXRpb24gPSBcIi9cIiwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBwYXRoID0+IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSksXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuXG4gICAgcmV0dXJuIDxSb3V0ZXIgey4uLnJlc3R9IGhpc3Rvcnk9e2hpc3Rvcnl9IHN0YXRpY0NvbnRleHQ9e2NvbnRleHR9IC8+O1xuICB9XG59XG5cbmlmIChfX0RFVl9fKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgIHdhcm5pbmcoXG4gICAgICAhdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArXG4gICAgICAgIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRpY1JvdXRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbmltcG9ydCBSb3V0ZXJDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHRcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cbmNsYXNzIFN3aXRjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgICAgICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG5cbiAgICAgICAgICBsZXQgZWxlbWVudCwgbWF0Y2g7XG5cbiAgICAgICAgICAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG4gICAgICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCh0aGlzLnByb3BzLmNoaWxkcmVuLCBjaGlsZCA9PiB7XG4gICAgICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuXG4gICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG5cbiAgICAgICAgICAgICAgbWF0Y2ggPSBwYXRoXG4gICAgICAgICAgICAgICAgPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgLi4uY2hpbGQucHJvcHMsIHBhdGggfSlcbiAgICAgICAgICAgICAgICA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4gbWF0Y2hcbiAgICAgICAgICAgID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHsgbG9jYXRpb24sIGNvbXB1dGVkTWF0Y2g6IG1hdGNoIH0pXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIH19XG4gICAgICA8L1JvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAoX19ERVZfXykge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24ocHJldlByb3BzKSB7XG4gICAgd2FybmluZyhcbiAgICAgICEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLidcbiAgICApO1xuXG4gICAgd2FybmluZyhcbiAgICAgICEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSxcbiAgICAgICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJ1xuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcInRpbnktaW52YXJpYW50XCI7XG5cbmltcG9ydCBDb250ZXh0IGZyb20gXCIuL1JvdXRlckNvbnRleHQuanNcIjtcbmltcG9ydCBtYXRjaFBhdGggZnJvbSBcIi4vbWF0Y2hQYXRoLmpzXCI7XG5cbmNvbnN0IHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCJcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoQ29udGV4dCkuaGlzdG9yeTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCJcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoQ29udGV4dCkubG9jYXRpb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgdHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIixcbiAgICAgIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCJcbiAgICApO1xuICB9XG5cbiAgY29uc3QgbWF0Y2ggPSB1c2VDb250ZXh0KENvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gbWF0Y2ggPyBtYXRjaC5wYXJhbXMgOiB7fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVJvdXRlTWF0Y2gocGF0aCkge1xuICBpZiAoX19ERVZfXykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIsXG4gICAgICBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gcGF0aFxuICAgID8gbWF0Y2hQYXRoKHVzZUxvY2F0aW9uKCkucGF0aG5hbWUsIHBhdGgpXG4gICAgOiB1c2VDb250ZXh0KENvbnRleHQpLm1hdGNoO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgd2FybmluZyBmcm9tIFwidGlueS13YXJuaW5nXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cbmNsYXNzIEJyb3dzZXJSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSh0aGlzLnByb3BzKTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxSb3V0ZXIgaGlzdG9yeT17dGhpcy5oaXN0b3J5fSBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbn0gLz47XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIXRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICtcbiAgICAgICAgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJyb3dzZXJSb3V0ZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgeyBjcmVhdGVIYXNoSGlzdG9yeSBhcyBjcmVhdGVIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB3YXJuaW5nIGZyb20gXCJ0aW55LXdhcm5pbmdcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cbmNsYXNzIEhhc2hSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSh0aGlzLnByb3BzKTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxSb3V0ZXIgaGlzdG9yeT17dGhpcy5oaXN0b3J5fSBjaGlsZHJlbj17dGhpcy5wcm9wcy5jaGlsZHJlbn0gLz47XG4gIH1cbn1cblxuaWYgKF9fREVWX18pIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbigpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgIXRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICtcbiAgICAgICAgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIlxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhhc2hSb3V0ZXI7XG4iLCJpbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gXCJoaXN0b3J5XCI7XG5cbmV4cG9ydCBjb25zdCByZXNvbHZlVG9Mb2NhdGlvbiA9ICh0bywgY3VycmVudExvY2F0aW9uKSA9PlxuICB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcblxuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZVRvTG9jYXRpb24gPSAodG8sIGN1cnJlbnRMb2NhdGlvbikgPT4ge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiXG4gICAgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKVxuICAgIDogdG87XG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgX19Sb3V0ZXJDb250ZXh0IGFzIFJvdXRlckNvbnRleHQgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IHsgcmVzb2x2ZVRvTG9jYXRpb24sIG5vcm1hbGl6ZVRvTG9jYXRpb24gfSBmcm9tIFwiLi91dGlscy9sb2NhdGlvblV0aWxzXCI7XG5cbi8vIFJlYWN0IDE1IGNvbXBhdFxuY29uc3QgZm9yd2FyZFJlZlNoaW0gPSBDID0+IEM7XG5sZXQgeyBmb3J3YXJkUmVmIH0gPSBSZWFjdDtcbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbmNvbnN0IExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKFxuICAoXG4gICAge1xuICAgICAgaW5uZXJSZWYsIC8vIFRPRE86IGRlcHJlY2F0ZVxuICAgICAgbmF2aWdhdGUsXG4gICAgICBvbkNsaWNrLFxuICAgICAgLi4ucmVzdFxuICAgIH0sXG4gICAgZm9yd2FyZGVkUmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSByZXN0O1xuXG4gICAgbGV0IHByb3BzID0ge1xuICAgICAgLi4ucmVzdCxcbiAgICAgIG9uQ2xpY2s6IGV2ZW50ID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAob25DbGljaykgb25DbGljayhldmVudCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB0aHJvdyBleDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgICAgICghdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBSZWFjdCAxNSBjb21wYXRcbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMucmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIDxhIHsuLi5wcm9wc30gLz47XG4gIH1cbik7XG5cbmlmIChfX0RFVl9fKSB7XG4gIExpbmtBbmNob3IuZGlzcGxheU5hbWUgPSBcIkxpbmtBbmNob3JcIjtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cbmNvbnN0IExpbmsgPSBmb3J3YXJkUmVmKFxuICAoXG4gICAge1xuICAgICAgY29tcG9uZW50ID0gTGlua0FuY2hvcixcbiAgICAgIHJlcGxhY2UsXG4gICAgICB0byxcbiAgICAgIGlubmVyUmVmLCAvLyBUT0RPOiBkZXByZWNhdGVcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIGZvcndhcmRlZFJlZlxuICApID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPFJvdXRlckNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHtjb250ZXh0ID0+IHtcbiAgICAgICAgICBpbnZhcmlhbnQoY29udGV4dCwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgICAgICAgIGNvbnN0IHsgaGlzdG9yeSB9ID0gY29udGV4dDtcblxuICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihcbiAgICAgICAgICAgIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKSxcbiAgICAgICAgICAgIGNvbnRleHQubG9jYXRpb25cbiAgICAgICAgICApO1xuXG4gICAgICAgICAgY29uc3QgaHJlZiA9IGxvY2F0aW9uID8gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG4gICAgICAgICAgY29uc3QgcHJvcHMgPSB7XG4gICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgaHJlZixcbiAgICAgICAgICAgIG5hdmlnYXRlKCkge1xuICAgICAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICAgICAgICAgICAgY29uc3QgbWV0aG9kID0gcmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcblxuICAgICAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyBSZWFjdCAxNSBjb21wYXRcbiAgICAgICAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgICAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG4pO1xuXG5pZiAoX19ERVZfXykge1xuICBjb25zdCB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIFByb3BUeXBlcy5vYmplY3QsXG4gICAgUHJvcFR5cGVzLmZ1bmNcbiAgXSk7XG4gIGNvbnN0IHJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIFByb3BUeXBlcy5mdW5jLFxuICAgIFByb3BUeXBlcy5zaGFwZSh7IGN1cnJlbnQ6IFByb3BUeXBlcy5hbnkgfSlcbiAgXSk7XG5cbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xuXG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTGluaztcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IF9fUm91dGVyQ29udGV4dCBhcyBSb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJ0aW55LWludmFyaWFudFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4vTGlua1wiO1xuaW1wb3J0IHsgcmVzb2x2ZVRvTG9jYXRpb24sIG5vcm1hbGl6ZVRvTG9jYXRpb24gfSBmcm9tIFwiLi91dGlscy9sb2NhdGlvblV0aWxzXCI7XG5cbi8vIFJlYWN0IDE1IGNvbXBhdFxuY29uc3QgZm9yd2FyZFJlZlNoaW0gPSBDID0+IEM7XG5sZXQgeyBmb3J3YXJkUmVmIH0gPSBSZWFjdDtcbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKC4uLmNsYXNzbmFtZXMpIHtcbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGkgPT4gaSkuam9pbihcIiBcIik7XG59XG5cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cbmNvbnN0IE5hdkxpbmsgPSBmb3J3YXJkUmVmKFxuICAoXG4gICAge1xuICAgICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnQgPSBcInBhZ2VcIixcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IFwiYWN0aXZlXCIsXG4gICAgICBhY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lUHJvcCxcbiAgICAgIGV4YWN0LFxuICAgICAgaXNBY3RpdmU6IGlzQWN0aXZlUHJvcCxcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblByb3AsXG4gICAgICBzdHJpY3QsXG4gICAgICBzdHlsZTogc3R5bGVQcm9wLFxuICAgICAgdG8sXG4gICAgICBpbm5lclJlZiwgLy8gVE9ETzogZGVwcmVjYXRlXG4gICAgICAuLi5yZXN0XG4gICAgfSxcbiAgICBmb3J3YXJkZWRSZWZcbiAgKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxSb3V0ZXJDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7Y29udGV4dCA9PiB7XG4gICAgICAgICAgaW52YXJpYW50KGNvbnRleHQsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICAgICAgICBjb25zdCBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgICAgICBjb25zdCB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihcbiAgICAgICAgICAgIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pLFxuICAgICAgICAgICAgY3VycmVudExvY2F0aW9uXG4gICAgICAgICAgKTtcbiAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lOiBwYXRoIH0gPSB0b0xvY2F0aW9uO1xuICAgICAgICAgIC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG4gICAgICAgICAgY29uc3QgZXNjYXBlZFBhdGggPVxuICAgICAgICAgICAgcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcblxuICAgICAgICAgIGNvbnN0IG1hdGNoID0gZXNjYXBlZFBhdGhcbiAgICAgICAgICAgID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgICAgICAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgICAgICAgICAgIGV4YWN0LFxuICAgICAgICAgICAgICAgIHN0cmljdFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgIGNvbnN0IGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wXG4gICAgICAgICAgICA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKVxuICAgICAgICAgICAgOiBtYXRjaCk7XG5cbiAgICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBpc0FjdGl2ZVxuICAgICAgICAgICAgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpXG4gICAgICAgICAgICA6IGNsYXNzTmFtZVByb3A7XG4gICAgICAgICAgY29uc3Qgc3R5bGUgPSBpc0FjdGl2ZSA/IHsgLi4uc3R5bGVQcm9wLCAuLi5hY3RpdmVTdHlsZSB9IDogc3R5bGVQcm9wO1xuXG4gICAgICAgICAgY29uc3QgcHJvcHMgPSB7XG4gICAgICAgICAgICBcImFyaWEtY3VycmVudFwiOiAoaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQpIHx8IG51bGwsXG4gICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICAgIHRvOiB0b0xvY2F0aW9uLFxuICAgICAgICAgICAgLi4ucmVzdFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyBSZWFjdCAxNSBjb21wYXRcbiAgICAgICAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgICAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gPExpbmsgey4uLnByb3BzfSAvPjtcbiAgICAgICAgfX1cbiAgICAgIDwvUm91dGVyQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9XG4pO1xuXG5pZiAoX19ERVZfXykge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG5cbiAgY29uc3QgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcbiAgICBcInBhZ2VcIixcbiAgICBcInN0ZXBcIixcbiAgICBcImxvY2F0aW9uXCIsXG4gICAgXCJkYXRlXCIsXG4gICAgXCJ0aW1lXCIsXG4gICAgXCJ0cnVlXCJcbiAgXSk7XG5cbiAgTmF2TGluay5wcm9wVHlwZXMgPSB7XG4gICAgLi4uTGluay5wcm9wVHlwZXMsXG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IE5hdkxpbms7XG4iLCJjb25zdCBzdHlsZXMgPSB7XHJcbiAgb3BlbmluZzoge1xyXG4gICAgc2NyZWVuOntcclxuICAgICAgcG9zaXRpb246ICdmaXhlZCcsXHJcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGhlaWdodDogJzEwMHZoJyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xyXG4gICAgfSxcclxuICAgIG5hbWU6IHtcclxuICAgICAgYmFja2dyb3VuZDogJ3VybChcIi4vcmVzb3VyY2UvY29sb3JmdWwuanBnXCIpIHJlcGVhdCcsXHJcbiAgICAgIGJhY2tncm91bmRQb3NpdGlvbjogJ2NlbnRlcicsXHJcbiAgICAgIGJhY2tncm91bmRTaXplOiAnY292ZXInLFxyXG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICBiYWNrZ3JvdW5kQ2xpcDogJ3RleHQnLFxyXG4gICAgICBXZWJraXRCYWNrZ3JvdW5kQ2xpcDogJ3RleHQnLFxyXG4gICAgICBXZWJraXRUZXh0RmlsbENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICBmb250OiAnOTAwIDAuNXZ3IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWYnLFxyXG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcclxuICAgICAgY3Vyc29yOiAnZGVmYXVsdCdcclxuICAgIH0sXHJcbiAgICBidXR0b246IHtcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIGJvdHRvbTogJzE1JScsXHJcbiAgICAgIGxlZnQ6ICc1MCUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcclxuICAgICAgZm9udFNpemU6ICc1MHB4JyxcclxuICAgICAgZGlzcGxheTogJ25vbmUnLFxyXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICAgICAgZm9udFdlaWdodDogJzkwMCcsXHJcbiAgICAgIGNvbG9yOiAnd2hpdGUnLFxyXG4gICAgICB0ZXh0U2hhZG93OiAnMnB4IDJweCA2cHggIzAwMCcsXHJcbiAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogJzFzJ1xyXG4gICAgfSxcclxuICAgIGFzazp7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICBib3R0b206ICcxMCUnLFxyXG4gICAgICBsZWZ0OiAnNSUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMCUpJ1xyXG4gICAgfSxcclxuICAgIGNvbnRyb2w6e1xyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgYm90dG9tOiAnNSUnLFxyXG4gICAgICBsZWZ0OiAnNSUnLFxyXG4gICAgICBjb250ZW50OiAndXJsKFwiLi9yZXNvdXJjZS9mb3J3YXJkX2J1dHRvbi5wbmdcIiknLFxyXG4gICAgICBoZWlnaHQ6ICczMHB4JyxcclxuICAgICAgd2lkdGg6ICc1MHB4JyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcidcclxuICAgIH0gXHJcbiAgfSxcclxuICBtYWluSGVhZGVyOiB7XHJcbiAgICBuYXY6IHtcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGhlaWdodDogJzEwdmgnLFxyXG4gICAgICBsaW5lSGVpZ2h0OiAnMTB2aCcsXHJcbiAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxyXG4gICAgICBkaXNwbGF5OiAnZ3JpZCcsXHJcbiAgICAgIGdyaWRUZW1wbGF0ZUNvbHVtbnM6ICdyZXBlYXQoNCwgMWZyKScsXHJcbiAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICAgIHpJbmRleDogJzUnXHJcbiAgICB9LFxyXG4gICAgaXRlbXM6IHtcclxuICAgICAgd2lkdGg6ICcxMDAlJyxcclxuICAgICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgICAgIGZvbnRTaXplOiAnMnZ3JyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcclxuICAgICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcclxuICAgIH0sXHJcbiAgfSxcclxuICBzaWRlQXJyb3c6IHtcclxuICAgIGFycm93Qm94OiB7XHJcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgICBoZWlnaHQ6ICcxMDAlJ1xyXG4gICAgfSxcclxuICAgIGJhY2tBcmVhOntcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIHdpZHRoOiAnMTAlJyxcclxuICAgICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgICAgIGxlZnQ6ICcwJ1xyXG4gICAgfSxcclxuICAgIGJhY2s6IHtcclxuICAgICAgY29udGVudDogJ3VybChcIi4vcmVzb3VyY2UvYmFjay5wbmdcIiknLFxyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgd2lkdGg6ICc1MHB4JyxcclxuICAgICAgaGVpZ2h0OiAnNTBweCcsXHJcbiAgICAgIHRvcDogJzUwJScsXHJcbiAgICAgIGxlZnQ6ICc1MCUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTUwJSwgLTUwJSknLFxyXG4gICAgICBvcGFjaXR5OiAnMCcsXHJcbiAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogJzFzJyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcidcclxuICAgIH0sXHJcbiAgICBuZXh0QXJlYTp7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB3aWR0aDogJzEwJScsXHJcbiAgICAgIGhlaWdodDogJzEwMCUnLFxyXG4gICAgICByaWdodDogJzAnXHJcbiAgICB9LFxyXG4gICAgbmV4dDoge1xyXG4gICAgICBjb250ZW50OiAndXJsKFwiLi9yZXNvdXJjZS9uZXh0LnBuZ1wiKScsXHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB3aWR0aDogJzUwcHgnLFxyXG4gICAgICBoZWlnaHQ6ICc1MHB4JyxcclxuICAgICAgdG9wOiAnNTAlJyxcclxuICAgICAgcmlnaHQ6ICc1MCUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoNTAlLCAtNTAlKScsXHJcbiAgICAgIG9wYWNpdHk6ICcwJyxcclxuICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAnMXMnLFxyXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgYm90dG9tQXJyb3c6IHtcclxuICAgIGFycm93Qm94OiB7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICBib3R0b206ICcwJyxcclxuICAgICAgd2lkdGg6ICcxMDAlJyxcclxuICAgICAgaGVpZ2h0OiAnMTAlJyxcclxuICAgICAgZGlzcGxheTogJ2dyaWQnLFxyXG4gICAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiAncmVwZWF0KDMsIDFmciknLFxyXG4gICAgICBqdXN0aWZ5SXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xyXG4gICAgICBcclxuICAgIH0sXHJcbiAgICBhcnJvdzoge1xyXG4gICAgICBjb250ZW50OiAndXJsKFwiLi9yZXNvdXJjZS9hcnJvd19kb3duLnBuZ1wiKScsXHJcbiAgICAgIGhlaWdodDogJzMwcHgnLFxyXG4gICAgICB3aWR0aDogJzMwcHgnXHJcbiAgICB9XHJcbiAgfSxcclxuICBpbnRyb2R1Y3Rpb246e1xyXG4gICAgaGVhZGVyOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICBoZWlnaHQ6ICcxMDB2aCcsXHJcbiAgICAgIHdpZHRoOiAnMTAwdncnLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRUNCNzY1J1xyXG4gICAgfSxcclxuICAgIHNpbGhvdWV0dGU6e1xyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgdG9wOiAnNTAlJyxcclxuICAgICAgcmlnaHQ6ICcxNSUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC01MCUpJyxcclxuICAgICAgY29udGVudDogJ3VybChcIi4vcmVzb3VyY2Uvc2lsaG91ZXR0ZS5wbmdcIiknLFxyXG4gICAgICB3aWR0aDogJzM1dncnLFxyXG4gICAgICBoZWlnaHQ6ICcyOHZ3J1xyXG4gICAgfSxcclxuICAgIHRpdGxlOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB0b3A6ICc1MCUnLFxyXG4gICAgICBsZWZ0OiAnMTUlJyxcclxuICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKScsXHJcbiAgICAgIGZvbnRTaXplOiAnM3Z3JyxcclxuICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxyXG4gICAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJ1xyXG4gICAgfSxcclxuICAgIHNlY3Rpb246IHtcclxuICAgICAgaGVpZ2h0OiAnMjAwMHB4JyxcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgaGlzdG9yeTp7XHJcbiAgICBoZWFkZXI6IHtcclxuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXHJcbiAgICAgIGhlaWdodDogJzEwMHZoJyxcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJyNEQjdBNjUnXHJcbiAgICB9LFxyXG4gICAgc2lsaG91ZXR0ZTp7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB0b3A6ICc1MCUnLFxyXG4gICAgICByaWdodDogJzE1JScsXHJcbiAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTUwJSknLFxyXG4gICAgICBjb250ZW50OiAndXJsKFwiLi9yZXNvdXJjZS9zaWxob3VldHRlLnBuZ1wiKScsXHJcbiAgICAgIHdpZHRoOiAnMzV2dycsXHJcbiAgICAgIGhlaWdodDogJzI4dncnXHJcbiAgICB9LFxyXG4gICAgdGl0bGU6IHtcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIHRvcDogJzUwJScsXHJcbiAgICAgIGxlZnQ6ICcxNSUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC01MCUpJyxcclxuICAgICAgZm9udFNpemU6ICczdncnLFxyXG4gICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXHJcbiAgICAgIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnXHJcbiAgICB9LFxyXG4gICAgc2VjdGlvbjoge1xyXG4gICAgICBoZWlnaHQ6ICcyMDAwcHgnLFxyXG4gICAgICB3aWR0aDogJzEwMHZ3JyxcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnXHJcbiAgICB9XHJcbiAgfSxcclxuICB3b3JrOntcclxuICAgIGhlYWRlcjoge1xyXG4gICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcclxuICAgICAgaGVpZ2h0OiAnMTAwdmgnLFxyXG4gICAgICB3aWR0aDogJzEwMHZ3JyxcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzI2NUU2MidcclxuICAgIH0sXHJcbiAgICBzaWxob3VldHRlOntcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIHRvcDogJzUwJScsXHJcbiAgICAgIHJpZ2h0OiAnMTUlJyxcclxuICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKScsXHJcbiAgICAgIGNvbnRlbnQ6ICd1cmwoXCIuL3Jlc291cmNlL3NpbGhvdWV0dGUucG5nXCIpJyxcclxuICAgICAgd2lkdGg6ICczNXZ3JyxcclxuICAgICAgaGVpZ2h0OiAnMjh2dydcclxuICAgIH0sXHJcbiAgICB0aXRsZToge1xyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgdG9wOiAnNTAlJyxcclxuICAgICAgbGVmdDogJzE1JScsXHJcbiAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTUwJSknLFxyXG4gICAgICBmb250U2l6ZTogJzN2dycsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcclxuICAgICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcclxuICAgIH0sXHJcbiAgICBzZWN0aW9uOiB7XHJcbiAgICAgIGhlaWdodDogJzIwMDBweCcsXHJcbiAgICAgIHdpZHRoOiAnMTAwdncnLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZSdcclxuICAgIH1cclxuICB9LFxyXG4gIGNvbnRhY3Q6e1xyXG4gICAgaGVhZGVyOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICBoZWlnaHQ6ICcxMDB2aCcsXHJcbiAgICAgIHdpZHRoOiAnMTAwdncnLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNjg1MzU3J1xyXG4gICAgfSxcclxuICAgIHNpbGhvdWV0dGU6e1xyXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgdG9wOiAnNTAlJyxcclxuICAgICAgcmlnaHQ6ICcxNSUnLFxyXG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC01MCUpJyxcclxuICAgICAgY29udGVudDogJ3VybChcIi4vcmVzb3VyY2Uvc2lsaG91ZXR0ZS5wbmdcIiknLFxyXG4gICAgICB3aWR0aDogJzM1dncnLFxyXG4gICAgICBoZWlnaHQ6ICcyOHZ3J1xyXG4gICAgfSxcclxuICAgIHRpdGxlOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB0b3A6ICc1MCUnLFxyXG4gICAgICBsZWZ0OiAnMTUlJyxcclxuICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKScsXHJcbiAgICAgIGZvbnRTaXplOiAnM3Z3JyxcclxuICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxyXG4gICAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJ1xyXG4gICAgfSxcclxuICAgIHNlY3Rpb246IHtcclxuICAgICAgaGVpZ2h0OiAnMjAwMHB4JyxcclxuICAgICAgd2lkdGg6ICcxMDB2dycsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJ1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3R5bGVzOyIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7UmVkaXJlY3R9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXHJcblxyXG5jb25zdCBzdHlsZSA9IHN0eWxlcy5vcGVuaW5nXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcGVuaW5nIGV4dGVuZHMgQ29tcG9uZW50e1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAganVtcDogJycsIGhvbGQ6IGZhbHNlXHJcbiAgICB9XHJcbiAgfVxyXG4gIG1vdXNlRHJhZyhlKXtcclxuICAgIGlmKHRoaXMuc3RhdGUuaG9sZCl7XHJcbiAgICAgIGNvbnN0IGNvbnRyb2wgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udHJvbCcpXHJcbiAgICAgIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmFtZScpXHJcbiAgICAgIGNvbnN0IGltZ193ID0gKGUuY2xpZW50WCAvIHdpbmRvdy5vdXRlcldpZHRoKSAqIDEwMFxyXG4gICAgICBjb25zdCBuYW1lX3MgPSAxMiAqIGltZ193ICogMC4wMVxyXG4gICAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ28nKVxyXG4gICAgICBjb25zdCBhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXNrJylcclxuICAgICAgXHJcbiAgICAgIGlmKGltZ193ID49IDUgJiYgaW1nX3cgPD0gOTApe1xyXG4gICAgICAgIGNvbnRyb2wuc3R5bGUubGVmdCA9IGltZ193ICsgJyUnXHJcbiAgICAgICAgbmFtZS5zdHlsZS5mb250U2l6ZSA9IG5hbWVfcyArICd2dydcclxuICAgICAgICBhc2suc3R5bGUubGVmdCA9IGltZ193ICsgJyUnXHJcbiAgICAgIH1cclxuICAgICAgaWYoaW1nX3cgPj0gOTApe1xyXG4gICAgICAgIGJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJ1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgbW91c2VEb3duKGUpe1xyXG4gICAgY29uc3QgYXNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFzaycpXHJcbiAgICBhc2suc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7aG9sZDogdHJ1ZX0pXHJcbiAgfVxyXG4gIG1vdXNlVXAoZSl7XHJcbiAgICBjb25zdCBhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXNrJylcclxuICAgIGFzay5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJ1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7aG9sZDogZmFsc2V9KVxyXG4gIH1cclxuICBuZXh0KGUpe1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7anVtcDogJy9pbnRyb2R1Y3Rpb24nfSlcclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICBpZih0aGlzLnN0YXRlLmp1bXApe1xyXG4gICAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXt0aGlzLnN0YXRlLmp1bXB9IC8+XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZS5zY3JlZW59XHJcbiAgICAgICAgb25Nb3VzZU1vdmU9e2UgPT4gdGhpcy5tb3VzZURyYWcoZSl9XHJcbiAgICAgICAgb25Nb3VzZVVwPXtlID0+IHRoaXMubW91c2VVcChlKX1cclxuICAgICAgICBvbk1vdXNlTGVhdmU9e2UgPT4gdGhpcy5tb3VzZVVwKGUpfT5cclxuICAgICAgICA8aDEgY2xhc3M9XCJuYW1lXCIgc3R5bGU9e3N0eWxlLm5hbWV9PlBBUksgU0FORyBVTjwvaDE+XHJcbiAgICAgICAgPHAgY2xhc3M9XCJnb1wiIHN0eWxlPXtzdHlsZS5idXR0b259XHJcbiAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvcj1cImJsYWNrXCJ9IFxyXG4gICAgICAgICAgb25Nb3VzZU91dD17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvciA9IFwid2hpdGVcIn1cclxuICAgICAgICAgIG9uQ2xpY2s9e2UgPT4gdGhpcy5uZXh0KGUpfT5MZXQncyBmaW5kIG91dDwvcD5cclxuICAgICAgICA8cCBjbGFzcz1cImFza1wiIHN0eWxlPXtzdHlsZS5hc2t9PkRyYWcgbWUhPC9wPlxyXG4gICAgICAgIDxpbWcgY2xhc3M9XCJjb250cm9sXCIgc3R5bGU9e3N0eWxlLmNvbnRyb2x9XHJcbiAgICAgICAgICBvbk1vdXNlRG93bj17ZSA9PiB0aGlzLm1vdXNlRG93bihlKX0vPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn0iLCIvLyDrqZTsnbggNO2OmOydtOyngOydmCDsg4Hri6gg64Sk67mE6rKM7J207IWYIOuwlFxyXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uL3N0eWxlcydcclxuXHJcbmNvbnN0IHN0eWxlID0gc3R5bGVzLm1haW5IZWFkZXJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW5IZWFkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgY29sb3I6IHByb3BzLmNvbG9yXHJcbiAgICB9XHJcbiAgfVxyXG4gIGNvbXBvbmVudERpZE1vdW50KCl7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2Jykuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5zdGF0ZS5jb2xvclxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLicgKyB0aGlzLnByb3BzLnBhdGgpLnN0eWxlLmJvcmRlckJvdHRvbSA9ICcycHggZGFzaGVkIGJsYWNrJ1xyXG4gIH1cclxuICByZW5kZXIoKXtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxuYXY+XHJcbiAgICAgICAgPHVsIGNsYXNzPVwibmF2XCIgc3R5bGU9e3N0eWxlLm5hdn0+XHJcbiAgICAgICAgICA8bGkgY2xhc3M9XCJpbnRyb2R1Y3Rpb25cIiBzdHlsZT17c3R5bGUuaXRlbXN9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMuanVtcCgnL2ludHJvZHVjdGlvbicpfVxyXG4gICAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvcj1cIndoaXRlXCJ9XHJcbiAgICAgICAgICAgIG9uTW91c2VPdXQ9e2UgPT4gZS50YXJnZXQuc3R5bGUuY29sb3I9XCJibGFja1wifT5JbnRyb2R1Y3Rpb248L2xpPlxyXG4gICAgICAgICAgPGxpIGNsYXNzPVwiaGlzdG9yeVwiIHN0eWxlPXtzdHlsZS5pdGVtc31cclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5wcm9wcy5qdW1wKCcvaGlzdG9yeScpfVxyXG4gICAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvcj1cIndoaXRlXCJ9XHJcbiAgICAgICAgICAgIG9uTW91c2VPdXQ9e2UgPT4gZS50YXJnZXQuc3R5bGUuY29sb3I9XCJibGFja1wifT5IaXN0b3J5PC9saT5cclxuICAgICAgICAgIDxsaSBjbGFzcz1cIndvcmtcIiBzdHlsZT17c3R5bGUuaXRlbXN9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMuanVtcCgnL3dvcmsnKX1cclxuICAgICAgICAgICAgb25Nb3VzZU92ZXI9e2UgPT4gZS50YXJnZXQuc3R5bGUuY29sb3I9XCJ3aGl0ZVwifVxyXG4gICAgICAgICAgICBvbk1vdXNlT3V0PXtlID0+IGUudGFyZ2V0LnN0eWxlLmNvbG9yPVwiYmxhY2tcIn0+V29yazwvbGk+XHJcbiAgICAgICAgICA8bGkgY2xhc3M9XCJjb250YWN0XCIgc3R5bGU9e3N0eWxlLml0ZW1zfVxyXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLmp1bXAoJy9jb250YWN0Jyl9XHJcbiAgICAgICAgICAgIG9uTW91c2VPdmVyPXtlID0+IGUudGFyZ2V0LnN0eWxlLmNvbG9yPVwid2hpdGVcIn1cclxuICAgICAgICAgICAgb25Nb3VzZU91dD17ZSA9PiBlLnRhcmdldC5zdHlsZS5jb2xvcj1cImJsYWNrXCJ9PkNvbnRhY3Q8L2xpPlxyXG4gICAgICAgIDwvdWw+XHJcbiAgICAgIDwvbmF2PlxyXG4gICAgKVxyXG4gIH1cclxufSIsIi8vIOyYpOuluOyqvSDsmbzsqr0g7J2064+ZXHJcbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3R5bGVzJ1xyXG5cclxuY29uc3Qgc3R5bGUgPSBzdHlsZXMuc2lkZUFycm93XHJcbmNvbnN0IHNjcmVlbiA9IFsnL2ludHJvZHVjdGlvbicsICcvaGlzdG9yeScsICcvd29yaycsICcvY29udGFjdCddXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaWRlQXJyb3cgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAganVtcDogJycsIHBhdGg6ICcnXHJcbiAgICB9XHJcbiAgfVxyXG4gIG5leHQoZSl7XHJcbiAgICBjb25zdCBwYXRoID0gc2NyZWVuLmluZGV4T2YoJy8nICsgdGhpcy5wcm9wcy5wYXRoKVxyXG4gICAgaWYocGF0aCAhPT0gMyl7XHJcbiAgICAgIHRoaXMucHJvcHMuanVtcChzY3JlZW5bcGF0aCArIDFdKVxyXG4gICAgfVxyXG4gIH1cclxuICBiYWNrKGUpe1xyXG4gICAgY29uc3QgcGF0aCA9IHNjcmVlbi5pbmRleE9mKCcvJyArIHRoaXMucHJvcHMucGF0aClcclxuICAgIGlmKHBhdGggIT09IDApe1xyXG4gICAgICB0aGlzLnByb3BzLmp1bXAoc2NyZWVuW3BhdGggLSAxXSlcclxuICAgIH1cclxuICB9XHJcbiAgYmFja092ZXIoKXtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iYWNrJykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gIH1cclxuICBiYWNrT3V0KCl7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFjaycpLnN0eWxlLm9wYWNpdHkgPSAnMCdcclxuICB9XHJcbiAgbmV4dE92ZXIoKXtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXh0Jykuc3R5bGUub3BhY2l0eSA9ICcxJ1xyXG4gIH1cclxuICBuZXh0T3V0KCl7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV4dCcpLnN0eWxlLm9wYWNpdHkgPSAnMCdcclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZS5hcnJvd0JveH0+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGUuYmFja0FyZWF9XHJcbiAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiB0aGlzLmJhY2tPdmVyKCl9XHJcbiAgICAgICAgICBvbk1vdXNlT3V0PXtlID0+IHRoaXMuYmFja091dCgpfT5cclxuICAgICAgICAgIDxpbWcgY2xhc3M9XCJiYWNrXCIgc3R5bGU9e3N0eWxlLmJhY2t9IG9uQ2xpY2s9e2UgPT4gdGhpcy5iYWNrKGUpfS8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGUubmV4dEFyZWF9XHJcbiAgICAgICAgICBvbk1vdXNlT3Zlcj17ZSA9PiB0aGlzLm5leHRPdmVyKCl9XHJcbiAgICAgICAgICBvbk1vdXNlT3V0PXtlID0+IHRoaXMubmV4dE91dCgpfT5cclxuICAgICAgICAgPGltZyBjbGFzcz1cIm5leHRcIiBzdHlsZT17c3R5bGUubmV4dH0gb25DbGljaz17ZSA9PiB0aGlzLm5leHQoZSl9Lz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgfVxyXG59IiwiLy8g7JWE656Y66GcIOyKpO2BrOuhpCDtmZTsgrTtkZxcclxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuLi9zdHlsZXMnXHJcblxyXG5jb25zdCBzdHlsZSA9IHN0eWxlcy5ib3R0b21BcnJvd1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm90dG9tQXJyb3cgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAganVtcDogJydcclxuICAgIH1cclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZS5hcnJvd0JveH0+XHJcbiAgICAgICAgPGltZyBzdHlsZT17c3R5bGUuYXJyb3d9Lz5cclxuICAgICAgICA8aW1nIHN0eWxlPXtzdHlsZS5hcnJvd30vPlxyXG4gICAgICAgIDxpbWcgc3R5bGU9e3N0eWxlLmFycm93fS8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG4gIH1cclxufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7UmVkaXJlY3R9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbmltcG9ydCBNYWluSGVhZGVyIGZyb20gJy4vY29tcG9uZW50L21haW5IZWFkZXInXHJcbmltcG9ydCBTaWRlQXJyb3cgZnJvbSAnLi9jb21wb25lbnQvc2lkZUFycm93J1xyXG5pbXBvcnQgQm90dG9tQXJyb3cgZnJvbSAnLi9jb21wb25lbnQvYm90dG9tQXJyb3cnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXHJcblxyXG5jb25zdCBzdHlsZSA9IHN0eWxlcy5pbnRyb2R1Y3Rpb25cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEludHJvZHVjdGlvbiBleHRlbmRzIENvbXBvbmVudHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcyl7XHJcbiAgICBzdXBlcihwcm9wcylcclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIGp1bXA6ICcnXHJcbiAgICB9XHJcbiAgICB0aGlzLmhlYWRlckNhbGxiYWNrID0gdGhpcy5oZWFkZXJDYWxsYmFjay5iaW5kKHRoaXMpXHJcbiAgfVxyXG4gIGhlYWRlckNhbGxiYWNrID0gKGp1bXBEYXRhKSA9PiB7XHJcbiAgICBpZihqdW1wRGF0YSAhPT0gJy9pbnRyb2R1Y3Rpb24nKXsgLy8g7ZiE7J6sIO2OmOydtOyngOuhnCByZWRpcmVjdCDtlaAg65WMIOugjOuNlOungeydtCDslYjrkJjripQg7ZiE7IOBIOuwqeyngFxyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICBqdW1wOiBqdW1wRGF0YVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxuICByZW5kZXIoKXtcclxuICAgIGlmKHRoaXMuc3RhdGUuanVtcCl7XHJcbiAgICAgIHJldHVybiA8UmVkaXJlY3QgdG89e3RoaXMuc3RhdGUuanVtcH0gLz5cclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPGhlYWRlciBzdHlsZT17c3R5bGUuaGVhZGVyfT5cclxuICAgICAgICAgIDxNYWluSGVhZGVyIGNvbG9yPVwiI0VDQjc2NVwiIGp1bXA9e3RoaXMuaGVhZGVyQ2FsbGJhY2t9IHBhdGg9eydpbnRyb2R1Y3Rpb24nfS8+XHJcbiAgICAgICAgICA8U2lkZUFycm93IGp1bXA9e3RoaXMuaGVhZGVyQ2FsbGJhY2t9IHBhdGg9eydpbnRyb2R1Y3Rpb24nfS8+XHJcbiAgICAgICAgICA8Qm90dG9tQXJyb3cgLz5cclxuICAgICAgICAgIDxoMSBzdHlsZT17c3R5bGUudGl0bGV9PldobzxiciAvPmlzIHRoaXMgZ3V5PzwvaDE+XHJcbiAgICAgICAgICA8aW1nIHN0eWxlPXtzdHlsZS5zaWxob3VldHRlfS8+XHJcbiAgICAgICAgPC9oZWFkZXI+XHJcbiAgICAgICAgPHNlY3Rpb24gc3R5bGU9e3N0eWxlLnNlY3Rpb259PlxyXG4gICAgICAgICAgaGVsbG9cclxuICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG4gIH1cclxufSIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7UmVkaXJlY3R9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXHJcbmltcG9ydCBNYWluSGVhZGVyIGZyb20gJy4vY29tcG9uZW50L21haW5IZWFkZXInXHJcbmltcG9ydCBTaWRlQXJyb3cgZnJvbSAnLi9jb21wb25lbnQvc2lkZUFycm93J1xyXG5pbXBvcnQgQm90dG9tQXJyb3cgZnJvbSAnLi9jb21wb25lbnQvYm90dG9tQXJyb3cnXHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnXHJcblxyXG5jb25zdCBzdHlsZSA9IHN0eWxlcy5oaXN0b3J5XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIaXN0b3J5IGV4dGVuZHMgQ29tcG9uZW50e1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAganVtcDogJydcclxuICAgIH1cclxuICAgIHRoaXMuaGVhZGVyQ2FsbGJhY2sgPSB0aGlzLmhlYWRlckNhbGxiYWNrLmJpbmQodGhpcylcclxuICB9XHJcbiAgaGVhZGVyQ2FsbGJhY2sgPSAoanVtcERhdGEpID0+IHtcclxuICAgIGlmKGp1bXBEYXRhICE9PSAnL2hpc3RvcnknKXsgIC8vIO2YhOyerCDtjpjsnbTsp4DroZwgcmVkaXJlY3Qg7ZWgIOuVjCDroIzrjZTrp4HsnbQg7JWI65CY64qUIO2YhOyDgSDrsKnsp4BcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAganVtcDoganVtcERhdGFcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICBpZih0aGlzLnN0YXRlLmp1bXApe1xyXG4gICAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXt0aGlzLnN0YXRlLmp1bXB9IC8+XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxoZWFkZXIgc3R5bGU9e3N0eWxlLmhlYWRlcn0+XHJcbiAgICAgICAgICA8TWFpbkhlYWRlciBjb2xvcj1cIiNEQjdBNjVcIiBqdW1wPXt0aGlzLmhlYWRlckNhbGxiYWNrfSBwYXRoPXsnaGlzdG9yeSd9Lz5cclxuICAgICAgICAgIDxTaWRlQXJyb3cganVtcD17dGhpcy5oZWFkZXJDYWxsYmFja30gcGF0aD17J2hpc3RvcnknfSAvPlxyXG4gICAgICAgICAgPEJvdHRvbUFycm93IC8+XHJcbiAgICAgICAgICA8aDEgc3R5bGU9e3N0eWxlLnRpdGxlfT53aHk8YnIgLz5kaWQgeW91IGJlY29tZSBhIGRldmVsb3Blcj88L2gxPlxyXG4gICAgICAgICAgPGltZyBzdHlsZT17c3R5bGUuc2lsaG91ZXR0ZX0vPlxyXG4gICAgICAgIDwvaGVhZGVyPlxyXG4gICAgICAgIDxzZWN0aW9uIHN0eWxlPXtzdHlsZS5zZWN0aW9ufT5cclxuICAgICAgICAgIGhlbGxvXHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQge1JlZGlyZWN0fSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgTWFpbkhlYWRlciBmcm9tICcuL2NvbXBvbmVudC9tYWluSGVhZGVyJ1xyXG5pbXBvcnQgU2lkZUFycm93IGZyb20gJy4vY29tcG9uZW50L3NpZGVBcnJvdydcclxuaW1wb3J0IEJvdHRvbUFycm93IGZyb20gJy4vY29tcG9uZW50L2JvdHRvbUFycm93J1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGVzJ1xyXG5cclxuY29uc3Qgc3R5bGUgPSBzdHlsZXMud29ya1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV29yayBleHRlbmRzIENvbXBvbmVudHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcyl7XHJcbiAgICBzdXBlcihwcm9wcylcclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIGp1bXA6ICcnXHJcbiAgICB9XHJcbiAgICB0aGlzLmhlYWRlckNhbGxiYWNrID0gdGhpcy5oZWFkZXJDYWxsYmFjay5iaW5kKHRoaXMpXHJcbiAgfVxyXG4gIGhlYWRlckNhbGxiYWNrID0gKGp1bXBEYXRhKSA9PiB7XHJcbiAgICBpZihqdW1wRGF0YSAhPT0gJy93b3JrJyl7IC8vIO2YhOyerCDtjpjsnbTsp4DroZwgcmVkaXJlY3Qg7ZWgIOuVjCDroIzrjZTrp4HsnbQg7JWI65CY64qUIO2YhOyDgSDrsKnsp4BcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAganVtcDoganVtcERhdGFcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcbiAgcmVuZGVyKCl7XHJcbiAgICBpZih0aGlzLnN0YXRlLmp1bXApe1xyXG4gICAgICByZXR1cm4gPFJlZGlyZWN0IHRvPXt0aGlzLnN0YXRlLmp1bXB9IC8+XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxoZWFkZXIgc3R5bGU9e3N0eWxlLmhlYWRlcn0+XHJcbiAgICAgICAgICA8TWFpbkhlYWRlciBjb2xvcj1cIiMyNjVFNjJcIiBqdW1wPXt0aGlzLmhlYWRlckNhbGxiYWNrfSBwYXRoPXsnd29yayd9Lz5cclxuICAgICAgICAgIDxTaWRlQXJyb3cganVtcD17dGhpcy5oZWFkZXJDYWxsYmFja30gcGF0aD17J3dvcmsnfSAvPlxyXG4gICAgICAgICAgPEJvdHRvbUFycm93IC8+XHJcbiAgICAgICAgICA8aDEgc3R5bGU9e3N0eWxlLnRpdGxlfT53aGF0IDxiciAvPmRpZCB5b3UgZG8/PC9oMT5cclxuICAgICAgICAgIDxpbWcgc3R5bGU9e3N0eWxlLnNpbGhvdWV0dGV9Lz5cclxuICAgICAgICA8L2hlYWRlcj5cclxuICAgICAgICA8c2VjdGlvbiBzdHlsZT17c3R5bGUuc2VjdGlvbn0+XHJcbiAgICAgICAgICBoZWxsb1xyXG4gICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgfVxyXG59IiwiaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHtSZWRpcmVjdH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcclxuaW1wb3J0IE1haW5IZWFkZXIgZnJvbSAnLi9jb21wb25lbnQvbWFpbkhlYWRlcidcclxuaW1wb3J0IFNpZGVBcnJvdyBmcm9tICcuL2NvbXBvbmVudC9zaWRlQXJyb3cnXHJcbmltcG9ydCBCb3R0b21BcnJvdyBmcm9tICcuL2NvbXBvbmVudC9ib3R0b21BcnJvdydcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcydcclxuXHJcbmNvbnN0IHN0eWxlID0gc3R5bGVzLmNvbnRhY3RcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRhY3QgZXh0ZW5kcyBDb21wb25lbnR7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgc3VwZXIocHJvcHMpXHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICBqdW1wOiAnJ1xyXG4gICAgfVxyXG4gICAgdGhpcy5oZWFkZXJDYWxsYmFjayA9IHRoaXMuaGVhZGVyQ2FsbGJhY2suYmluZCh0aGlzKVxyXG4gIH1cclxuICBoZWFkZXJDYWxsYmFjayA9IChqdW1wRGF0YSkgPT4ge1xyXG4gICAgaWYoanVtcERhdGEgIT09ICcvY29udGFjdCcpeyAgLy8g7ZiE7J6sIO2OmOydtOyngOuhnCByZWRpcmVjdCDtlaAg65WMIOugjOuNlOungeydtCDslYjrkJjripQg7ZiE7IOBIOuwqeyngFxyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICBqdW1wOiBqdW1wRGF0YVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxuICByZW5kZXIoKXtcclxuICAgIGlmKHRoaXMuc3RhdGUuanVtcCl7XHJcbiAgICAgIHJldHVybiA8UmVkaXJlY3QgdG89e3RoaXMuc3RhdGUuanVtcH0gLz5cclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPGhlYWRlciBzdHlsZT17c3R5bGUuaGVhZGVyfT5cclxuICAgICAgICAgIDxNYWluSGVhZGVyIGNvbG9yPVwiIzY4NTM1N1wiIGp1bXA9e3RoaXMuaGVhZGVyQ2FsbGJhY2t9IHBhdGg9eydjb250YWN0J30vPlxyXG4gICAgICAgICAgPFNpZGVBcnJvdyBqdW1wPXt0aGlzLmhlYWRlckNhbGxiYWNrfSBwYXRoPXsnY29udGFjdCd9IC8+XHJcbiAgICAgICAgICA8Qm90dG9tQXJyb3cgLz5cclxuICAgICAgICAgIDxoMSBzdHlsZT17c3R5bGUudGl0bGV9PkhvdzxiciAvPmNhbiBpIHJlYWNoIHlvdT88L2gxPlxyXG4gICAgICAgICAgPGltZyBzdHlsZT17c3R5bGUuc2lsaG91ZXR0ZX0vPlxyXG4gICAgICAgIDwvaGVhZGVyPlxyXG4gICAgICAgIDxzZWN0aW9uIHN0eWxlPXtzdHlsZS5zZWN0aW9ufT5cclxuICAgICAgICAgIGhlbGxvXHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXHJcbmltcG9ydCB7QnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlLCBTd2l0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgT3BlbmluZyBmcm9tICcuL29wZW5pbmcuanMnXHJcbmltcG9ydCBJbnRyb2R1Y3Rpb24gZnJvbSAnLi9pbnRyb2R1Y3Rpb24nXHJcbmltcG9ydCBIaXN0b3J5IGZyb20gJy4vaGlzdG9yeSdcclxuaW1wb3J0IFdvcmsgZnJvbSAnLi93b3JrJ1xyXG5pbXBvcnQgQ29udGFjdCBmcm9tICcuL2NvbnRhY3QnXHJcblxyXG5jb25zdCBQU1VBcHAgPSAoKSA9PiAoXHJcbiAgPFJvdXRlcj5cclxuICAgIDxkaXY+XHJcbiAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgPFJvdXRlIHBhdGg9Jy9vcGVuaW5nJyBjb21wb25lbnQ9e09wZW5pbmd9IC8+XHJcbiAgICAgICAgPFJvdXRlIHBhdGg9Jy9pbnRyb2R1Y3Rpb24nIGNvbXBvbmVudD17SW50cm9kdWN0aW9ufSAvPlxyXG4gICAgICAgIDxSb3V0ZSBwYXRoPScvaGlzdG9yeScgY29tcG9uZW50PXtIaXN0b3J5fSAvPlxyXG4gICAgICAgIDxSb3V0ZSBwYXRoPScvd29yaycgY29tcG9uZW50PXtXb3JrfSAvPlxyXG4gICAgICAgIDxSb3V0ZSBwYXRoPScvY29udGFjdCcgY29tcG9uZW50PXtDb250YWN0fSAvPlxyXG4gICAgICAgIDxSb3V0ZSBjb21wb25lbnQ9e09wZW5pbmd9IC8+XHJcbiAgICAgIDwvU3dpdGNoPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9Sb3V0ZXI+XHJcbilcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICA8UFNVQXBwIC8+LFxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuKSJdLCJzb3VyY2VSb290IjoiIn0=